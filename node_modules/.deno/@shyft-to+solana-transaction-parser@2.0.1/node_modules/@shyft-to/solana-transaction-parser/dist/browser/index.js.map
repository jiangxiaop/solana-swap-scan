{"version":3,"file":"index.js","sources":["../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/@solana/spl-token/lib/esm/constants.js","../../node_modules/@solana/buffer-layout/lib/Layout.js","../../node_modules/@solana/buffer-layout-utils/lib/esm/base.mjs","../../node_modules/bigint-buffer/dist/browser.js","../../node_modules/@solana/buffer-layout-utils/lib/esm/bigint.mjs","../../node_modules/@solana/buffer-layout-utils/lib/esm/native.mjs","../../node_modules/@solana/buffer-layout-utils/lib/esm/web3.mjs","../../node_modules/@solana/spl-token/lib/esm/errors.js","../../node_modules/@solana/spl-token/lib/esm/instructions/types.js","../../node_modules/@solana/spl-token/lib/esm/instructions/amountToUiAmount.js","../../node_modules/@solana/spl-token/lib/esm/instructions/approve.js","../../node_modules/@solana/spl-token/lib/esm/instructions/approveChecked.js","../../node_modules/@solana/spl-token/lib/esm/instructions/burn.js","../../node_modules/@solana/spl-token/lib/esm/instructions/burnChecked.js","../../node_modules/@solana/spl-token/lib/esm/instructions/closeAccount.js","../../node_modules/@solana/spl-token/lib/esm/extensions/accountType.js","../../node_modules/@solana/spl-token/lib/esm/state/account.js","../../node_modules/@solana/spl-token/lib/esm/state/multisig.js","../../node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/instructions.js","../../node_modules/@solana/spl-token/lib/esm/state/mint.js","../../node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/instructions.js","../../node_modules/@solana/spl-token/lib/esm/extensions/cpiGuard/state.js","../../node_modules/@solana/spl-token/lib/esm/extensions/defaultAccountState/state.js","../../node_modules/@solana/spl-token-group/node_modules/@solana/errors/dist/index.browser.mjs","../../node_modules/@solana/spl-token-group/node_modules/@solana/codecs-core/dist/index.browser.mjs","../../node_modules/@solana/spl-token-group/node_modules/@solana/codecs-numbers/dist/index.browser.mjs","../../node_modules/@solana/spl-token-group/node_modules/@solana/codecs-data-structures/dist/index.browser.mjs","../../node_modules/@solana/spl-token-group/lib/esm/state/tokenGroup.js","../../node_modules/@solana/spl-token-group/lib/esm/state/tokenGroupMember.js","../../node_modules/@solana/spl-token/lib/esm/extensions/groupMemberPointer/state.js","../../node_modules/@solana/spl-token/lib/esm/extensions/groupPointer/state.js","../../node_modules/@solana/spl-token/lib/esm/extensions/immutableOwner.js","../../node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/instructions.js","../../node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/state.js","../../node_modules/@solana/spl-token/lib/esm/extensions/memoTransfer/state.js","../../node_modules/@solana/spl-token/lib/esm/extensions/metadataPointer/state.js","../../node_modules/@solana/spl-token/lib/esm/extensions/mintCloseAuthority.js","../../node_modules/@solana/spl-token/lib/esm/extensions/nonTransferable.js","../../node_modules/@solana/spl-token/lib/esm/extensions/permanentDelegate.js","../../node_modules/@solana/spl-token/lib/esm/serialization.js","../../node_modules/@solana/spl-token/lib/esm/extensions/transferFee/instructions.js","../../node_modules/@solana/spl-token/lib/esm/extensions/transferFee/state.js","../../node_modules/@solana/spl-token/lib/esm/instructions/transferChecked.js","../../node_modules/@solana/spl-token/lib/esm/extensions/transferHook/state.js","../../node_modules/@solana/spl-token/lib/esm/extensions/transferHook/instructions.js","../../node_modules/@solana/spl-token/lib/esm/extensions/extensionType.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeMint2.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeMultisig.js","../../node_modules/@solana/spl-token/lib/esm/instructions/createNativeMint.js","../../node_modules/@solana/spl-token/lib/esm/instructions/syncNative.js","../../node_modules/@solana/spl-token/lib/esm/instructions/freezeAccount.js","../../node_modules/@solana/spl-token/lib/esm/instructions/mintTo.js","../../node_modules/@solana/spl-token/lib/esm/instructions/mintToChecked.js","../../node_modules/@solana/spl-token/lib/esm/instructions/revoke.js","../../node_modules/@solana/spl-token/lib/esm/instructions/setAuthority.js","../../node_modules/@solana/spl-token/lib/esm/instructions/thawAccount.js","../../node_modules/@solana/spl-token/lib/esm/instructions/transfer.js","../../node_modules/@solana/spl-token/lib/esm/instructions/uiAmountToAmount.js","../../node_modules/@solana/spl-token/lib/esm/extensions/groupMemberPointer/instructions.js","../../node_modules/@solana/spl-token/lib/esm/extensions/groupPointer/instructions.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeMint.js","../../node_modules/@solana/spl-token/lib/esm/extensions/interestBearingMint/instructions.js","../../node_modules/@solana/spl-token/lib/esm/extensions/metadataPointer/instructions.js","../../node_modules/@solana/spl-token-metadata/node_modules/@solana/errors/dist/index.browser.mjs","../../node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-core/dist/index.browser.mjs","../../node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-numbers/dist/index.browser.mjs","../../node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-data-structures/dist/index.browser.mjs","../../node_modules/@solana/spl-token-metadata/node_modules/@solana/codecs-strings/dist/index.browser.mjs","../../node_modules/@solana/spl-token-metadata/lib/esm/field.js","../../node_modules/@solana/spl-token-metadata/lib/esm/state.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount2.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeAccount3.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeImmutableOwner.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeMintCloseAuthority.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializeNonTransferableMint.js","../../node_modules/@solana/spl-token/lib/esm/instructions/initializePermanentDelegate.js","../../../src/decoders/system.ts","../../../src/decoders/token.ts","../../node_modules/@solana/assertions/node_modules/@solana/errors/dist/index.browser.mjs","../../node_modules/@solana/assertions/dist/index.browser.mjs","../../../src/programs/token-extensions/transfer-fee-extension.ts","../../node_modules/@solana/errors/dist/index.browser.js","../../node_modules/@solana/codecs-core/dist/index.browser.js","../../node_modules/@solana/codecs-numbers/dist/index.browser.js","../../node_modules/@solana/codecs-data-structures/dist/index.browser.js","../../node_modules/@solana/codecs-strings/dist/index.browser.js","../../node_modules/@solana/options/dist/index.browser.js","../../../src/programs/token-extensions/token-metadata-extension.ts","../../../src/programs/token-extensions/get-account-data-size-eztension.ts","../../../src/decoders/token22.ts","../../node_modules/@solana/spl-type-length-value/lib/esm/splDiscriminate.js","../../../src/decoders/associated.ts","../../../src/decoders/compute.budget.ts","../../../src/helpers.ts","../../../src/decoders/stake.ts","../../node_modules/@noble/hashes/esm/_assert.js","../../node_modules/@noble/hashes/esm/utils.js","../../node_modules/bn.js/lib/bn.js","../../node_modules/@noble/hashes/esm/_md.js","../../node_modules/@noble/hashes/esm/sha256.js","../../../src/camelcase.ts","../../../src/legacy.idl.converter.ts","../../../src/parsers.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n    if (programId.equals(TOKEN_PROGRAM_ID)) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\n//# sourceMappingURL=constants.js.map","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","export const encodeDecode = (layout) => {\n    const decode = layout.decode.bind(layout);\n    const encode = layout.encode.bind(layout);\n    return { decode, encode };\n};\n//# sourceMappingURL=base.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","import { blob } from '@solana/buffer-layout';\nimport { toBigIntBE, toBigIntLE, toBufferBE, toBufferLE } from 'bigint-buffer';\nimport { encodeDecode } from './base.mjs';\nexport const bigInt = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntLE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferLE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const bigIntBE = (length) => (property) => {\n    const layout = blob(length, property);\n    const { encode, decode } = encodeDecode(layout);\n    const bigIntLayout = layout;\n    bigIntLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return toBigIntBE(Buffer.from(src));\n    };\n    bigIntLayout.encode = (bigInt, buffer, offset) => {\n        const src = toBufferBE(bigInt, length);\n        return encode(src, buffer, offset);\n    };\n    return bigIntLayout;\n};\nexport const u64 = bigInt(8);\nexport const u64be = bigIntBE(8);\nexport const u128 = bigInt(16);\nexport const u128be = bigIntBE(16);\nexport const u192 = bigInt(24);\nexport const u192be = bigIntBE(24);\nexport const u256 = bigInt(32);\nexport const u256be = bigIntBE(32);\n//# sourceMappingURL=bigint.js.map","import { u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base.mjs';\nexport const bool = (property) => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n    const boolLayout = layout;\n    boolLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n    boolLayout.encode = (bool, buffer, offset) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n    return boolLayout;\n};\n//# sourceMappingURL=native.js.map","import { blob } from '@solana/buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\nimport { encodeDecode } from './base.mjs';\nexport const publicKey = (property) => {\n    const layout = blob(32, property);\n    const { encode, decode } = encodeDecode(layout);\n    const publicKeyLayout = layout;\n    publicKeyLayout.decode = (buffer, offset) => {\n        const src = decode(buffer, offset);\n        return new PublicKey(src);\n    };\n    publicKeyLayout.encode = (publicKey, buffer, offset) => {\n        const src = publicKey.toBuffer();\n        return encode(src, buffer, offset);\n    };\n    return publicKeyLayout;\n};\n//# sourceMappingURL=web3.js.map","/** Base class for errors */\nexport class TokenError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenAccountNotFoundError';\n    }\n}\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountError';\n    }\n}\n/** Thrown if a program state account does not contain valid data */\nexport class TokenInvalidAccountDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountDataError';\n    }\n}\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountOwnerError';\n    }\n}\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidAccountSizeError';\n    }\n}\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidMintError';\n    }\n}\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidOwnerError';\n    }\n}\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenOwnerOffCurveError';\n    }\n}\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionProgramError';\n    }\n}\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionKeysError';\n    }\n}\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionDataError';\n    }\n}\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenInvalidInstructionTypeError';\n    }\n}\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenUnsupportedInstructionError';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid account index */\nexport class TokenTransferHookAccountNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountNotFound';\n    }\n}\n/** Thrown if the transfer hook extra accounts contains an invalid seed */\nexport class TokenTransferHookInvalidSeed extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookInvalidSeed';\n    }\n}\n/** Thrown if account data required by an extra account meta seed config could not be fetched */\nexport class TokenTransferHookAccountDataNotFound extends TokenError {\n    constructor() {\n        super(...arguments);\n        this.name = 'TokenTransferHookAccountDataNotFound';\n    }\n}\n//# sourceMappingURL=errors.js.map","/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeMint\"] = 0] = \"InitializeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n    TokenInstruction[TokenInstruction[\"Transfer\"] = 3] = \"Transfer\";\n    TokenInstruction[TokenInstruction[\"Approve\"] = 4] = \"Approve\";\n    TokenInstruction[TokenInstruction[\"Revoke\"] = 5] = \"Revoke\";\n    TokenInstruction[TokenInstruction[\"SetAuthority\"] = 6] = \"SetAuthority\";\n    TokenInstruction[TokenInstruction[\"MintTo\"] = 7] = \"MintTo\";\n    TokenInstruction[TokenInstruction[\"Burn\"] = 8] = \"Burn\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n    TokenInstruction[TokenInstruction[\"ThawAccount\"] = 11] = \"ThawAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n    TokenInstruction[TokenInstruction[\"MintToChecked\"] = 14] = \"MintToChecked\";\n    TokenInstruction[TokenInstruction[\"BurnChecked\"] = 15] = \"BurnChecked\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n    TokenInstruction[TokenInstruction[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n    TokenInstruction[TokenInstruction[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n    TokenInstruction[TokenInstruction[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n    TokenInstruction[TokenInstruction[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n    TokenInstruction[TokenInstruction[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n    TokenInstruction[TokenInstruction[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n    TokenInstruction[TokenInstruction[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n    TokenInstruction[TokenInstruction[\"InitializeMintCloseAuthority\"] = 25] = \"InitializeMintCloseAuthority\";\n    TokenInstruction[TokenInstruction[\"TransferFeeExtension\"] = 26] = \"TransferFeeExtension\";\n    TokenInstruction[TokenInstruction[\"ConfidentialTransferExtension\"] = 27] = \"ConfidentialTransferExtension\";\n    TokenInstruction[TokenInstruction[\"DefaultAccountStateExtension\"] = 28] = \"DefaultAccountStateExtension\";\n    TokenInstruction[TokenInstruction[\"Reallocate\"] = 29] = \"Reallocate\";\n    TokenInstruction[TokenInstruction[\"MemoTransferExtension\"] = 30] = \"MemoTransferExtension\";\n    TokenInstruction[TokenInstruction[\"CreateNativeMint\"] = 31] = \"CreateNativeMint\";\n    TokenInstruction[TokenInstruction[\"InitializeNonTransferableMint\"] = 32] = \"InitializeNonTransferableMint\";\n    TokenInstruction[TokenInstruction[\"InterestBearingMintExtension\"] = 33] = \"InterestBearingMintExtension\";\n    TokenInstruction[TokenInstruction[\"CpiGuardExtension\"] = 34] = \"CpiGuardExtension\";\n    TokenInstruction[TokenInstruction[\"InitializePermanentDelegate\"] = 35] = \"InitializePermanentDelegate\";\n    TokenInstruction[TokenInstruction[\"TransferHookExtension\"] = 36] = \"TransferHookExtension\";\n    // ConfidentialTransferFeeExtension = 37,\n    // WithdrawalExcessLamports = 38,\n    TokenInstruction[TokenInstruction[\"MetadataPointerExtension\"] = 39] = \"MetadataPointerExtension\";\n    TokenInstruction[TokenInstruction[\"GroupPointerExtension\"] = 40] = \"GroupPointerExtension\";\n    TokenInstruction[TokenInstruction[\"GroupMemberPointerExtension\"] = 41] = \"GroupMemberPointerExtension\";\n})(TokenInstruction || (TokenInstruction = {}));\n//# sourceMappingURL=types.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const amountToUiAmountInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n]);\n/**\n * Construct a AmountToUiAmount instruction\n *\n * @param mint         Public key of the mint\n * @param amount       Amount of tokens to be converted to UiAmount\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createAmountToUiAmountInstruction(mint, amount, programId = TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: false }];\n    const data = Buffer.alloc(amountToUiAmountInstructionData.span);\n    amountToUiAmountInstructionData.encode({\n        instruction: TokenInstruction.AmountToUiAmount,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a AmountToUiAmount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeAmountToUiAmountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== amountToUiAmountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeAmountToUiAmountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.AmountToUiAmount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode a AmountToUiAmount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeAmountToUiAmountInstructionUnchecked({ programId, keys: [mint], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: amountToUiAmountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=amountToUiAmount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct an Approve instruction\n *\n * @param account      Account to set the delegate for\n * @param delegate     Account authorized to transfer tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveInstruction(account, delegate, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveInstructionData.span);\n    approveInstructionData.encode({\n        instruction: TokenInstruction.Approve,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an Approve instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, delegate, owner, multiSigners }, data, } = decodeApproveInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Approve)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an Approve instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveInstructionUnchecked({ programId, keys: [account, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approve.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const approveCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct an ApproveChecked instruction\n *\n * @param account      Account to set the delegate for\n * @param mint         Mint account\n * @param delegate     Account authorized to transfer of tokens from the account\n * @param owner        Owner of the account\n * @param amount       Maximum number of tokens the delegate may transfer\n * @param decimals     Number of decimals in approve amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createApproveCheckedInstruction(account, mint, delegate, owner, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: delegate, isSigner: false, isWritable: false },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(approveCheckedInstructionData.span);\n    approveCheckedInstructionData.encode({\n        instruction: TokenInstruction.ApproveChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an ApproveChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeApproveCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== approveCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, delegate, owner, multiSigners }, data, } = decodeApproveCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.ApproveChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !delegate || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode an ApproveChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeApproveCheckedInstructionUnchecked({ programId, keys: [account, mint, delegate, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            delegate,\n            owner,\n            multiSigners,\n        },\n        data: approveCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=approveChecked.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const burnInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct a Burn instruction\n *\n * @param account      Account to burn tokens from\n * @param mint         Mint for the account\n * @param owner        Owner of the account\n * @param amount       Number of tokens to burn\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createBurnInstruction(account, mint, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(burnInstructionData.span);\n    burnInstructionData.encode({\n        instruction: TokenInstruction.Burn,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Burn instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeBurnInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== burnInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, multiSigners }, data, } = decodeBurnInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Burn)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Burn instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeBurnInstructionUnchecked({ programId, keys: [account, mint, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data: burnInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=burn.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const burnCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct a BurnChecked instruction\n *\n * @param mint         Mint for the account\n * @param account      Account to burn tokens from\n * @param owner        Owner of the account\n * @param amount       Number of tokens to burn\n * @param decimals     Number of decimals in burn amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createBurnCheckedInstruction(account, mint, owner, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(burnCheckedInstructionData.span);\n    burnCheckedInstructionData.encode({\n        instruction: TokenInstruction.BurnChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a BurnChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeBurnCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== burnCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, multiSigners }, data, } = decodeBurnCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.BurnChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a BurnChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeBurnCheckedInstructionUnchecked({ programId, keys: [account, mint, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            multiSigners,\n        },\n        data: burnCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=burnChecked.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const closeAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct a CloseAccount instruction\n *\n * @param account      Account to close\n * @param destination  Account to receive the remaining balance of the closed account\n * @param authority    Account close authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createCloseAccountInstruction(account, destination, authority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(closeAccountInstructionData.span);\n    closeAccountInstructionData.encode({ instruction: TokenInstruction.CloseAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a CloseAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeCloseAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== closeAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, destination, authority, multiSigners }, data, } = decodeCloseAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.CloseAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !destination || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a CloseAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeCloseAccountInstructionUnchecked({ programId, keys: [account, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: closeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=closeAccount.js.map","export var AccountType;\n(function (AccountType) {\n    AccountType[AccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountType[AccountType[\"Mint\"] = 1] = \"Mint\";\n    AccountType[AccountType[\"Account\"] = 2] = \"Account\";\n})(AccountType || (AccountType = {}));\nexport const ACCOUNT_TYPE_SIZE = 1;\n//# sourceMappingURL=accountType.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getAccountLen } from '../extensions/extensionType.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority'),\n]);\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span;\n/**\n * Retrieve information about a token account\n *\n * @param connection Connection to use\n * @param address    Token account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getAccount(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackAccount(address, info, programId);\n}\n/**\n * Retrieve information about multiple token accounts in a single RPC call\n *\n * @param connection Connection to use\n * @param addresses  Token accounts\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Token account information\n */\nexport async function getMultipleAccounts(connection, addresses, commitment, programId = TOKEN_PROGRAM_ID) {\n    const infos = await connection.getMultipleAccountsInfo(addresses, commitment);\n    return addresses.map((address, i) => unpackAccount(address, infos[i], programId));\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    const accountLen = getAccountLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(accountLen, commitment);\n}\n/**\n * Unpack a token account\n *\n * @param address   Token account\n * @param info      Token account data\n * @param programId SPL Token program account\n *\n * @return Unpacked token account\n */\nexport function unpackAccount(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData,\n    };\n}\n//# sourceMappingURL=account.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey } from '@solana/buffer-layout-utils';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError } from '../errors.js';\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11'),\n]);\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span;\n/**\n * Retrieve information about a multisig\n *\n * @param connection Connection to use\n * @param address    Multisig account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Multisig information\n */\nexport async function getMultisig(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMultisig(address, info, programId);\n}\n/**\n * Unpack a multisig\n *\n * @param address   Multisig account\n * @param info      Multisig account data\n * @param programId SPL Token program account\n *\n * @return Unpacked multisig\n */\nexport function unpackMultisig(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length != MULTISIG_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const multisig = MultisigLayout.decode(info.data);\n    return { address, ...multisig };\n}\n/** Get the minimum lamport balance for a multisig to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMultisig(connection, commitment) {\n    return await connection.getMinimumBalanceForRentExemption(MULTISIG_SIZE, commitment);\n}\n//# sourceMappingURL=multisig.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions, TOKEN_2022_PROGRAM_ID } from '../../constants.js';\nimport { TokenUnsupportedInstructionError } from '../../errors.js';\nimport { addSigners } from '../../instructions/internal.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nexport var CpiGuardInstruction;\n(function (CpiGuardInstruction) {\n    CpiGuardInstruction[CpiGuardInstruction[\"Enable\"] = 0] = \"Enable\";\n    CpiGuardInstruction[CpiGuardInstruction[\"Disable\"] = 1] = \"Disable\";\n})(CpiGuardInstruction || (CpiGuardInstruction = {}));\n/** TODO: docs */\nexport const cpiGuardInstructionData = struct([u8('instruction'), u8('cpiGuardInstruction')]);\n/**\n * Construct an EnableCpiGuard instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createEnableCpiGuardInstruction(account, authority, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    return createCpiGuardInstruction(CpiGuardInstruction.Enable, account, authority, multiSigners, programId);\n}\n/**\n * Construct a DisableCpiGuard instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createDisableCpiGuardInstruction(account, authority, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    return createCpiGuardInstruction(CpiGuardInstruction.Disable, account, authority, multiSigners, programId);\n}\nfunction createCpiGuardInstruction(cpiGuardInstruction, account, authority, multiSigners, programId) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = addSigners([{ pubkey: account, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(cpiGuardInstructionData.span);\n    cpiGuardInstructionData.encode({\n        instruction: TokenInstruction.CpiGuardExtension,\n        cpiGuardInstruction,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map","import { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenAccountNotFoundError, TokenInvalidAccountOwnerError, TokenInvalidAccountSizeError, TokenInvalidMintError, TokenOwnerOffCurveError, } from '../errors.js';\nimport { ACCOUNT_TYPE_SIZE, AccountType } from '../extensions/accountType.js';\nimport { getMintLen } from '../extensions/extensionType.js';\nimport { ACCOUNT_SIZE } from './account.js';\nimport { MULTISIG_SIZE } from './multisig.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority'),\n]);\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span;\n/**\n * Retrieve information about a mint\n *\n * @param connection Connection to use\n * @param address    Mint account\n * @param commitment Desired level of commitment for querying the state\n * @param programId  SPL Token program account\n *\n * @return Mint information\n */\nexport async function getMint(connection, address, commitment, programId = TOKEN_PROGRAM_ID) {\n    const info = await connection.getAccountInfo(address, commitment);\n    return unpackMint(address, info, programId);\n}\n/**\n * Unpack a mint\n *\n * @param address   Mint account\n * @param info      Mint account data\n * @param programId SPL Token program account\n *\n * @return Unpacked mint\n */\nexport function unpackMint(address, info, programId = TOKEN_PROGRAM_ID) {\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < MINT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    const rawMint = MintLayout.decode(info.data.slice(0, MINT_SIZE));\n    let tlvData = Buffer.alloc(0);\n    if (info.data.length > MINT_SIZE) {\n        if (info.data.length <= ACCOUNT_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != AccountType.Mint)\n            throw new TokenInvalidMintError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address,\n        mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n        supply: rawMint.supply,\n        decimals: rawMint.decimals,\n        isInitialized: rawMint.isInitialized,\n        freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null,\n        tlvData,\n    };\n}\n/** Get the minimum lamport balance for a mint to be rent exempt\n *\n * @param connection Connection to use\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMint(connection, commitment) {\n    return await getMinimumBalanceForRentExemptMintWithExtensions(connection, [], commitment);\n}\n/** Get the minimum lamport balance for a rent-exempt mint with extensions\n *\n * @param connection Connection to use\n * @param extensions Extension types included in the mint\n * @param commitment Desired level of commitment for querying the state\n *\n * @return Amount of lamports required\n */\nexport async function getMinimumBalanceForRentExemptMintWithExtensions(connection, extensions, commitment) {\n    const mintLen = getMintLen(extensions);\n    return await connection.getMinimumBalanceForRentExemption(mintLen, commitment);\n}\n/**\n * Async version of getAssociatedTokenAddressSync\n * For backwards compatibility\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Promise containing the address of the associated token account\n */\nexport async function getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = await PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve = false, programId = TOKEN_PROGRAM_ID, associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID) {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    const [address] = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId);\n    return address;\n}\n//# sourceMappingURL=mint.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions, TOKEN_2022_PROGRAM_ID } from '../../constants.js';\nimport { TokenUnsupportedInstructionError } from '../../errors.js';\nimport { addSigners } from '../../instructions/internal.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nexport var DefaultAccountStateInstruction;\n(function (DefaultAccountStateInstruction) {\n    DefaultAccountStateInstruction[DefaultAccountStateInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    DefaultAccountStateInstruction[DefaultAccountStateInstruction[\"Update\"] = 1] = \"Update\";\n})(DefaultAccountStateInstruction || (DefaultAccountStateInstruction = {}));\n/** TODO: docs */\nexport const defaultAccountStateInstructionData = struct([\n    u8('instruction'),\n    u8('defaultAccountStateInstruction'),\n    u8('accountState'),\n]);\n/**\n * Construct an InitializeDefaultAccountState instruction\n *\n * @param mint         Mint to initialize\n * @param accountState Default account state to set on all new accounts\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeDefaultAccountStateInstruction(mint, accountState, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(defaultAccountStateInstructionData.span);\n    defaultAccountStateInstructionData.encode({\n        instruction: TokenInstruction.DefaultAccountStateExtension,\n        defaultAccountStateInstruction: DefaultAccountStateInstruction.Initialize,\n        accountState,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Construct an UpdateDefaultAccountState instruction\n *\n * @param mint         Mint to update\n * @param accountState    Default account state to set on all accounts\n * @param freezeAuthority       The mint's freeze authority\n * @param signers         The signer account(s) for a multisig\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createUpdateDefaultAccountStateInstruction(mint, accountState, freezeAuthority, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = addSigners([{ pubkey: mint, isSigner: false, isWritable: true }], freezeAuthority, multiSigners);\n    const data = Buffer.alloc(defaultAccountStateInstructionData.span);\n    defaultAccountStateInstructionData.encode({\n        instruction: TokenInstruction.DefaultAccountStateExtension,\n        defaultAccountStateInstruction: DefaultAccountStateInstruction.Update,\n        accountState,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map","import { struct } from '@solana/buffer-layout';\nimport { bool } from '@solana/buffer-layout-utils';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a CPI Guard extension */\nexport const CpiGuardLayout = struct([bool('lockCpi')]);\nexport const CPI_GUARD_SIZE = CpiGuardLayout.span;\nexport function getCpiGuard(account) {\n    const extensionData = getExtensionData(ExtensionType.CpiGuard, account.tlvData);\n    if (extensionData !== null) {\n        return CpiGuardLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a transfer fee config extension */\nexport const DefaultAccountStateLayout = struct([u8('state')]);\nexport const DEFAULT_ACCOUNT_STATE_SIZE = DefaultAccountStateLayout.span;\nexport function getDefaultAccountState(mint) {\n    const extensionData = getExtensionData(ExtensionType.DefaultAccountState, mint.tlvData);\n    if (extensionData !== null) {\n        return DefaultAccountStateLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map","// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\nvar SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611e3;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nvar SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nvar SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nvar SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nvar SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nvar SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nvar SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nvar SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nvar SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nvar SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\n\n// src/context.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    const commaSeparatedValues = value.map(encodeValue).join(\n      \"%2C%20\"\n      /* \", \" */\n    );\n    return \"%5B\" + commaSeparatedValues + /* \"]\" */\n    \"%5D\";\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no prototype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n  return btoa(searchParamsString);\n}\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: \"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.\",\n  [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: \"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: \"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: \"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].\",\n  [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: \"Invalid discriminated union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: \"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.\",\n  [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: \"Invalid literal union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: \"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: \"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].\",\n  [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: \"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.\",\n  [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: \"No random values implementation could be found.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]: \"The provided private key does not match the provided public key.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST]: \"Either the notification name must end in 'Notifications' or the API must supply a subscription creator function for the notification '$notificationName' to map between the notification name and the subscribe/unsubscribe method names.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]: \"Wallet account signers do not support signing multiple messages/transactions in a single operation\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: \"Cannot export a non-extractable key.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: \"Attempted to sign a transaction with an address that is not a signer for it\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]: \"Transaction has no expected signers therefore it cannot be encoded\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]: \"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: \"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nvar START_INDEX = \"i\";\nvar TYPE = \"t\";\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  if (messageFormatString.length === 0) {\n    return \"\";\n  }\n  let state;\n  function commitStateUpTo(endIndex) {\n    if (state[TYPE] === 2 /* Variable */) {\n      const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n      fragments.push(\n        variableName in context ? `${context[variableName]}` : `$${variableName}`\n      );\n    } else if (state[TYPE] === 1 /* Text */) {\n      fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n    }\n  }\n  const fragments = [];\n  messageFormatString.split(\"\").forEach((char, ii) => {\n    if (ii === 0) {\n      state = {\n        [START_INDEX]: 0,\n        [TYPE]: messageFormatString[0] === \"\\\\\" ? 0 /* EscapeSequence */ : messageFormatString[0] === \"$\" ? 2 /* Variable */ : 1 /* Text */\n      };\n      return;\n    }\n    let nextState;\n    switch (state[TYPE]) {\n      case 0 /* EscapeSequence */:\n        nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        break;\n      case 1 /* Text */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        }\n        break;\n      case 2 /* Variable */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        } else if (!char.match(/\\w/)) {\n          nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        }\n        break;\n    }\n    if (nextState) {\n      if (state !== nextState) {\n        commitStateUpTo(ii);\n      }\n      state = nextState;\n    }\n  });\n  commitStateUpTo();\n  return fragments.join(\"\");\n}\nfunction getErrorMessage(code, context = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== void 0) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  cause = this.cause;\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index,\n            ...rpcErrorContext !== void 0 ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: rpcErrorContext,\n            index\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index\n          };\n        }\n        return { index };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== void 0 ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: rpcErrorContext\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: rpcErrorContext.account_index\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError({ code, data, message }) {\n  let out;\n  if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n    const { err, ...preflightErrorContext } = data;\n    const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n    out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n      ...preflightErrorContext,\n      ...causeObject\n    });\n  } else {\n    let errorContext;\n    switch (code) {\n      case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n      case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n      case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n      case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n      case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n        errorContext = { __serverMessage: message };\n        break;\n      default:\n        if (typeof data === \"object\" && !Array.isArray(data)) {\n          errorContext = data;\n        }\n    }\n    out = new SolanaError(code, errorContext);\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\n\nexport { SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND, SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED, SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT, SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT, SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND, SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED, SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH, SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY, SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE, SOLANA_ERROR__ADDRESSES__MALFORMED_PDA, SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED, SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE, SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER, SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW, SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS, SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH, SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND, SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE, SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS, SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED, SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION, SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA, SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH, SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH, SOLANA_ERROR__INVALID_NONCE, SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE, SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE, SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING, SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR, SOLANA_ERROR__JSON_RPC__INVALID_PARAMS, SOLANA_ERROR__JSON_RPC__INVALID_REQUEST, SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND, SOLANA_ERROR__JSON_RPC__PARSE_ERROR, SOLANA_ERROR__JSON_RPC__SCAN_ERROR, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION, SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH, SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY, SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE, SOLANA_ERROR__MALFORMED_BIGINT_STRING, SOLANA_ERROR__MALFORMED_NUMBER_STRING, SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST, SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT, SOLANA_ERROR__RPC__INTEGER_OVERFLOW, SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR, SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN, SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS, SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER, SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS, SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING, SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED, SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP, SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE, SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED, SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED, SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED, SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS, SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION, SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN, SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT, SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION, SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING, SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES, SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME, SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND, SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE, SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING, SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE, SolanaError, getSolanaErrorFromInstructionError, getSolanaErrorFromJsonRpcError, getSolanaErrorFromTransactionError, isSolanaError, safeCaptureStackTrace };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES } from '@solana/errors';\n\n// src/add-codec-sentinel.ts\n\n// src/bytes.ts\nvar mergeBytes = (byteArrays) => {\n  const nonEmptyByteArrays = byteArrays.filter((arr) => arr.length);\n  if (nonEmptyByteArrays.length === 0) {\n    return byteArrays.length ? byteArrays[0] : new Uint8Array();\n  }\n  if (nonEmptyByteArrays.length === 1) {\n    return nonEmptyByteArrays[0];\n  }\n  const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  nonEmptyByteArrays.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\nvar padBytes = (bytes, length) => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\nvar fixBytes = (bytes, length) => padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\nfunction containsBytes(data, bytes, offset) {\n  const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n  if (slice.length !== bytes.length) return false;\n  return bytes.every((b, i) => b === slice[i]);\n}\nfunction getEncodedSize(value, encoder) {\n  return \"fixedSize\" in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\nfunction createEncoder(encoder) {\n  return Object.freeze({\n    ...encoder,\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, encoder));\n      encoder.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction createDecoder(decoder) {\n  return Object.freeze({\n    ...decoder,\n    decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0]\n  });\n}\nfunction createCodec(codec) {\n  return Object.freeze({\n    ...codec,\n    decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, codec));\n      codec.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction isFixedSize(codec) {\n  return \"fixedSize\" in codec && typeof codec.fixedSize === \"number\";\n}\nfunction assertIsFixedSize(codec) {\n  if (!isFixedSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n  }\n}\nfunction isVariableSize(codec) {\n  return !isFixedSize(codec);\n}\nfunction assertIsVariableSize(codec) {\n  if (!isVariableSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n  }\n}\nfunction combineCodec(encoder, decoder) {\n  if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n  }\n  if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n      decoderFixedSize: decoder.fixedSize,\n      encoderFixedSize: encoder.fixedSize\n    });\n  }\n  if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n      decoderMaxSize: decoder.maxSize,\n      encoderMaxSize: encoder.maxSize\n    });\n  }\n  return {\n    ...decoder,\n    ...encoder,\n    decode: decoder.decode,\n    encode: encoder.encode,\n    read: decoder.read,\n    write: encoder.write\n  };\n}\n\n// src/add-codec-sentinel.ts\nfunction addEncoderSentinel(encoder, sentinel) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n        encodedBytes: encoderBytes,\n        hexEncodedBytes: hexBytes(encoderBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    bytes.set(encoderBytes, offset);\n    offset += encoderBytes.length;\n    bytes.set(sentinel, offset);\n    offset += sentinel.length;\n    return offset;\n  };\n  if (isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n  }\n  return createEncoder({\n    ...encoder,\n    ...encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {},\n    getSizeFromValue: (value) => encoder.getSizeFromValue(value) + sentinel.length,\n    write\n  });\n}\nfunction addDecoderSentinel(decoder, sentinel) {\n  const read = (bytes, offset) => {\n    const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n    const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n    if (sentinelIndex === -1) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n        decodedBytes: candidateBytes,\n        hexDecodedBytes: hexBytes(candidateBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n    return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n  };\n  if (isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n  }\n  return createDecoder({\n    ...decoder,\n    ...decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {},\n    read\n  });\n}\nfunction addCodecSentinel(codec, sentinel) {\n  return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\nfunction findSentinelIndex(bytes, sentinel) {\n  return bytes.findIndex((byte, index, arr) => {\n    if (sentinel.length === 1) return byte === sentinel[0];\n    return containsBytes(arr, sentinel, index);\n  });\n}\nfunction hexBytes(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction assertByteArrayIsNotEmptyForCodec(codecDescription, bytes, offset = 0) {\n  if (bytes.length - offset <= 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n      codecDescription\n    });\n  }\n}\nfunction assertByteArrayHasEnoughBytesForCodec(codecDescription, expected, bytes, offset = 0) {\n  const bytesLength = bytes.length - offset;\n  if (bytesLength < expected) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n      bytesLength,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction assertByteArrayOffsetIsNotOutOfRange(codecDescription, offset, bytesLength) {\n  if (offset < 0 || offset > bytesLength) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n      bytesLength,\n      codecDescription,\n      offset\n    });\n  }\n}\n\n// src/add-codec-size-prefix.ts\nfunction addEncoderSizePrefix(encoder, prefix) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    offset = prefix.write(encoderBytes.length, bytes, offset);\n    bytes.set(encoderBytes, offset);\n    return offset + encoderBytes.length;\n  };\n  if (isFixedSize(prefix) && isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : encoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n  return createEncoder({\n    ...encoder,\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (value) => {\n      const encoderSize = getEncodedSize(value, encoder);\n      return getEncodedSize(encoderSize, prefix) + encoderSize;\n    },\n    write\n  });\n}\nfunction addDecoderSizePrefix(decoder, prefix) {\n  const read = (bytes, offset) => {\n    const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n    const size = Number(bigintSize);\n    offset = decoderOffset;\n    if (offset > 0 || bytes.length > size) {\n      bytes = bytes.slice(offset, offset + size);\n    }\n    assertByteArrayHasEnoughBytesForCodec(\"addDecoderSizePrefix\", size, bytes);\n    return [decoder.decode(bytes), offset + size];\n  };\n  if (isFixedSize(prefix) && isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : decoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n  return createDecoder({ ...decoder, ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction addCodecSizePrefix(codec, prefix) {\n  return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n\n// src/fix-codec-size.ts\nfunction fixEncoderSize(encoder, fixedBytes) {\n  return createEncoder({\n    fixedSize: fixedBytes,\n    write: (value, bytes, offset) => {\n      const variableByteArray = encoder.encode(value);\n      const fixedByteArray = variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n      bytes.set(fixedByteArray, offset);\n      return offset + fixedBytes;\n    }\n  });\n}\nfunction fixDecoderSize(decoder, fixedBytes) {\n  return createDecoder({\n    fixedSize: fixedBytes,\n    read: (bytes, offset) => {\n      assertByteArrayHasEnoughBytesForCodec(\"fixCodecSize\", fixedBytes, bytes, offset);\n      if (offset > 0 || bytes.length > fixedBytes) {\n        bytes = bytes.slice(offset, offset + fixedBytes);\n      }\n      if (isFixedSize(decoder)) {\n        bytes = fixBytes(bytes, decoder.fixedSize);\n      }\n      const [value] = decoder.read(bytes, 0);\n      return [value, offset + fixedBytes];\n    }\n  });\n}\nfunction fixCodecSize(codec, fixedBytes) {\n  return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n\n// src/offset-codec.ts\nfunction offsetEncoder(encoder, config) {\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPreOffset, bytes.length);\n      const postOffset = encoder.write(value, bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPostOffset, bytes.length);\n      return newPostOffset;\n    }\n  });\n}\nfunction offsetDecoder(decoder, config) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPreOffset, bytes.length);\n      const [value, postOffset] = decoder.read(bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPostOffset, bytes.length);\n      return [value, newPostOffset];\n    }\n  });\n}\nfunction offsetCodec(codec, config) {\n  return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config));\n}\nfunction modulo(dividend, divisor) {\n  if (divisor === 0) return 0;\n  return (dividend % divisor + divisor) % divisor;\n}\nfunction resizeEncoder(encoder, resize) {\n  if (isFixedSize(encoder)) {\n    const fixedSize = resize(encoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeEncoder\"\n      });\n    }\n    return createEncoder({ ...encoder, fixedSize });\n  }\n  return createEncoder({\n    ...encoder,\n    getSizeFromValue: (value) => {\n      const newSize = resize(encoder.getSizeFromValue(value));\n      if (newSize < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n          bytesLength: newSize,\n          codecDescription: \"resizeEncoder\"\n        });\n      }\n      return newSize;\n    }\n  });\n}\nfunction resizeDecoder(decoder, resize) {\n  if (isFixedSize(decoder)) {\n    const fixedSize = resize(decoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeDecoder\"\n      });\n    }\n    return createDecoder({ ...decoder, fixedSize });\n  }\n  return decoder;\n}\nfunction resizeCodec(codec, resize) {\n  return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize));\n}\n\n// src/pad-codec.ts\nfunction padLeftEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftCodec(codec, offset) {\n  return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset));\n}\nfunction padRightCodec(codec, offset) {\n  return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset));\n}\n\n// src/reverse-codec.ts\nfunction copySourceToTargetInReverse(source, target_WILL_MUTATE, sourceOffset, sourceLength, targetOffset = 0) {\n  while (sourceOffset < --sourceLength) {\n    const leftValue = source[sourceOffset];\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n    target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n    sourceOffset++;\n  }\n  if (sourceOffset === sourceLength) {\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n  }\n}\nfunction reverseEncoder(encoder) {\n  assertIsFixedSize(encoder);\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, offset) => {\n      const newOffset = encoder.write(value, bytes, offset);\n      copySourceToTargetInReverse(\n        bytes,\n        bytes,\n        offset,\n        offset + encoder.fixedSize\n      );\n      return newOffset;\n    }\n  });\n}\nfunction reverseDecoder(decoder) {\n  assertIsFixedSize(decoder);\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const reversedBytes = bytes.slice();\n      copySourceToTargetInReverse(\n        bytes,\n        reversedBytes,\n        offset,\n        offset + decoder.fixedSize\n      );\n      return decoder.read(reversedBytes, offset);\n    }\n  });\n}\nfunction reverseCodec(codec) {\n  return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n\n// src/transform-codec.ts\nfunction transformEncoder(encoder, unmap) {\n  return createEncoder({\n    ...isVariableSize(encoder) ? { ...encoder, getSizeFromValue: (value) => encoder.getSizeFromValue(unmap(value)) } : encoder,\n    write: (value, bytes, offset) => encoder.write(unmap(value), bytes, offset)\n  });\n}\nfunction transformDecoder(decoder, map) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const [value, newOffset] = decoder.read(bytes, offset);\n      return [map(value, bytes, offset), newOffset];\n    }\n  });\n}\nfunction transformCodec(codec, unmap, map) {\n  return createCodec({\n    ...transformEncoder(codec, unmap),\n    read: map ? transformDecoder(codec, map).read : codec.read\n  });\n}\n\nexport { addCodecSentinel, addCodecSizePrefix, addDecoderSentinel, addDecoderSizePrefix, addEncoderSentinel, addEncoderSizePrefix, assertByteArrayHasEnoughBytesForCodec, assertByteArrayIsNotEmptyForCodec, assertByteArrayOffsetIsNotOutOfRange, assertIsFixedSize, assertIsVariableSize, combineCodec, containsBytes, createCodec, createDecoder, createEncoder, fixBytes, fixCodecSize, fixDecoderSize, fixEncoderSize, getEncodedSize, isFixedSize, isVariableSize, mergeBytes, offsetCodec, offsetDecoder, offsetEncoder, padBytes, padLeftCodec, padLeftDecoder, padLeftEncoder, padRightCodec, padRightDecoder, padRightEncoder, resizeCodec, resizeDecoder, resizeEncoder, reverseCodec, reverseDecoder, reverseEncoder, transformCodec, transformDecoder, transformEncoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE } from '@solana/errors';\nimport { combineCodec, createEncoder, createDecoder, assertByteArrayIsNotEmptyForCodec, assertByteArrayHasEnoughBytesForCodec } from '@solana/codecs-core';\n\n// src/assertions.ts\nfunction assertNumberIsBetweenForCodec(codecDescription, min, max, value) {\n  if (value < min || value > max) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n      codecDescription,\n      max,\n      min,\n      value\n    });\n  }\n}\n\n// src/common.ts\nvar Endian = /* @__PURE__ */ ((Endian2) => {\n  Endian2[Endian2[\"Little\"] = 0] = \"Little\";\n  Endian2[Endian2[\"Big\"] = 1] = \"Big\";\n  return Endian2;\n})(Endian || {});\nfunction isLittleEndian(config) {\n  return config?.endian === 1 /* Big */ ? false : true;\n}\nfunction numberEncoderFactory(input) {\n  return createEncoder({\n    fixedSize: input.size,\n    write(value, bytes, offset) {\n      if (input.range) {\n        assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n      }\n      const arrayBuffer = new ArrayBuffer(input.size);\n      input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n      bytes.set(new Uint8Array(arrayBuffer), offset);\n      return offset + input.size;\n    }\n  });\n}\nfunction numberDecoderFactory(input) {\n  return createDecoder({\n    fixedSize: input.size,\n    read(bytes, offset = 0) {\n      assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n      assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n      const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n      return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n    }\n  });\n}\nfunction toArrayBuffer(bytes, offset, length) {\n  const bytesOffset = bytes.byteOffset + (offset ?? 0);\n  const bytesLength = length ?? bytes.byteLength;\n  return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n\n// src/f32.ts\nvar getF32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f32\",\n  set: (view, value, le) => view.setFloat32(0, Number(value), le),\n  size: 4\n});\nvar getF32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat32(0, le),\n  name: \"f32\",\n  size: 4\n});\nvar getF32Codec = (config = {}) => combineCodec(getF32Encoder(config), getF32Decoder(config));\nvar getF64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f64\",\n  set: (view, value, le) => view.setFloat64(0, Number(value), le),\n  size: 8\n});\nvar getF64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat64(0, le),\n  name: \"f64\",\n  size: 8\n});\nvar getF64Codec = (config = {}) => combineCodec(getF64Encoder(config), getF64Decoder(config));\nvar getI128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i128\",\n  range: [-BigInt(\"0x7fffffffffffffffffffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getI128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"i128\",\n  size: 16\n});\nvar getI128Codec = (config = {}) => combineCodec(getI128Encoder(config), getI128Decoder(config));\nvar getI16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i16\",\n  range: [-Number(\"0x7fff\") - 1, Number(\"0x7fff\")],\n  set: (view, value, le) => view.setInt16(0, Number(value), le),\n  size: 2\n});\nvar getI16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt16(0, le),\n  name: \"i16\",\n  size: 2\n});\nvar getI16Codec = (config = {}) => combineCodec(getI16Encoder(config), getI16Decoder(config));\nvar getI32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i32\",\n  range: [-Number(\"0x7fffffff\") - 1, Number(\"0x7fffffff\")],\n  set: (view, value, le) => view.setInt32(0, Number(value), le),\n  size: 4\n});\nvar getI32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt32(0, le),\n  name: \"i32\",\n  size: 4\n});\nvar getI32Codec = (config = {}) => combineCodec(getI32Encoder(config), getI32Decoder(config));\nvar getI64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i64\",\n  range: [-BigInt(\"0x7fffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffff\")],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  size: 8\n});\nvar getI64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigInt64(0, le),\n  name: \"i64\",\n  size: 8\n});\nvar getI64Codec = (config = {}) => combineCodec(getI64Encoder(config), getI64Decoder(config));\nvar getI8Encoder = () => numberEncoderFactory({\n  name: \"i8\",\n  range: [-Number(\"0x7f\") - 1, Number(\"0x7f\")],\n  set: (view, value) => view.setInt8(0, Number(value)),\n  size: 1\n});\nvar getI8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getInt8(0),\n  name: \"i8\",\n  size: 1\n});\nvar getI8Codec = () => combineCodec(getI8Encoder(), getI8Decoder());\nvar getShortU16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => {\n    if (value <= 127) return 1;\n    if (value <= 16383) return 2;\n    return 3;\n  },\n  maxSize: 3,\n  write: (value, bytes, offset) => {\n    assertNumberIsBetweenForCodec(\"shortU16\", 0, 65535, value);\n    const shortU16Bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      const alignedValue = Number(value) >> ii * 7;\n      if (alignedValue === 0) {\n        break;\n      }\n      const nextSevenBits = 127 & alignedValue;\n      shortU16Bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        shortU16Bytes[ii - 1] |= 128;\n      }\n    }\n    bytes.set(shortU16Bytes, offset);\n    return offset + shortU16Bytes.length;\n  }\n});\nvar getShortU16Decoder = () => createDecoder({\n  maxSize: 3,\n  read: (bytes, offset) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 127 & currentByte;\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 128) === 0) {\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\nvar getShortU16Codec = () => combineCodec(getShortU16Encoder(), getShortU16Decoder());\nvar getU128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u128\",\n  range: [0n, BigInt(\"0xffffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getU128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"u128\",\n  size: 16\n});\nvar getU128Codec = (config = {}) => combineCodec(getU128Encoder(config), getU128Decoder(config));\nvar getU16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u16\",\n  range: [0, Number(\"0xffff\")],\n  set: (view, value, le) => view.setUint16(0, Number(value), le),\n  size: 2\n});\nvar getU16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint16(0, le),\n  name: \"u16\",\n  size: 2\n});\nvar getU16Codec = (config = {}) => combineCodec(getU16Encoder(config), getU16Decoder(config));\nvar getU32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u32\",\n  range: [0, Number(\"0xffffffff\")],\n  set: (view, value, le) => view.setUint32(0, Number(value), le),\n  size: 4\n});\nvar getU32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint32(0, le),\n  name: \"u32\",\n  size: 4\n});\nvar getU32Codec = (config = {}) => combineCodec(getU32Encoder(config), getU32Decoder(config));\nvar getU64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u64\",\n  range: [0n, BigInt(\"0xffffffffffffffff\")],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  size: 8\n});\nvar getU64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigUint64(0, le),\n  name: \"u64\",\n  size: 8\n});\nvar getU64Codec = (config = {}) => combineCodec(getU64Encoder(config), getU64Decoder(config));\nvar getU8Encoder = () => numberEncoderFactory({\n  name: \"u8\",\n  range: [0, Number(\"0xff\")],\n  set: (view, value) => view.setUint8(0, Number(value)),\n  size: 1\n});\nvar getU8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getUint8(0),\n  name: \"u8\",\n  size: 1\n});\nvar getU8Codec = () => combineCodec(getU8Encoder(), getU8Decoder());\n\nexport { Endian, assertNumberIsBetweenForCodec, getF32Codec, getF32Decoder, getF32Encoder, getF64Codec, getF64Decoder, getF64Encoder, getI128Codec, getI128Decoder, getI128Encoder, getI16Codec, getI16Decoder, getI16Encoder, getI32Codec, getI32Decoder, getI32Encoder, getI64Codec, getI64Decoder, getI64Encoder, getI8Codec, getI8Decoder, getI8Encoder, getShortU16Codec, getShortU16Decoder, getShortU16Encoder, getU128Codec, getU128Decoder, getU128Encoder, getU16Codec, getU16Decoder, getU16Encoder, getU32Codec, getU32Decoder, getU32Encoder, getU64Codec, getU64Decoder, getU64Encoder, getU8Codec, getU8Decoder, getU8Encoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { createEncoder, getEncodedSize, createDecoder, combineCodec, assertByteArrayHasEnoughBytesForCodec, transformEncoder, transformDecoder, containsBytes, isFixedSize, assertIsFixedSize, fixEncoderSize, fixDecoderSize } from '@solana/codecs-core';\nimport { getU32Encoder, getU32Decoder, getU8Encoder, getU8Decoder } from '@solana/codecs-numbers';\nimport { SolanaError, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE } from '@solana/errors';\n\n// src/array.ts\nfunction assertValidNumberOfItemsForCodec(codecDescription, expected, actual) {\n  if (expected !== actual) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, {\n      actual,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction maxCodecSizes(sizes) {\n  return sizes.reduce(\n    (all, size) => all === null || size === null ? null : Math.max(all, size),\n    0\n  );\n}\nfunction sumCodecSizes(sizes) {\n  return sizes.reduce((all, size) => all === null || size === null ? null : all + size, 0);\n}\nfunction getFixedSize(codec) {\n  return isFixedSize(codec) ? codec.fixedSize : null;\n}\nfunction getMaxSize(codec) {\n  return isFixedSize(codec) ? codec.fixedSize : codec.maxSize ?? null;\n}\n\n// src/array.ts\nfunction getArrayEncoder(item, config = {}) {\n  const size = config.size ?? getU32Encoder();\n  const fixedSize = computeArrayLikeCodecSize(size, getFixedSize(item));\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return createEncoder({\n    ...fixedSize !== null ? { fixedSize } : {\n      getSizeFromValue: (array) => {\n        const prefixSize = typeof size === \"object\" ? getEncodedSize(array.length, size) : 0;\n        return prefixSize + [...array].reduce((all, value) => all + getEncodedSize(value, item), 0);\n      },\n      maxSize\n    },\n    write: (array, bytes, offset) => {\n      if (typeof size === \"number\") {\n        assertValidNumberOfItemsForCodec(\"array\", size, array.length);\n      }\n      if (typeof size === \"object\") {\n        offset = size.write(array.length, bytes, offset);\n      }\n      array.forEach((value) => {\n        offset = item.write(value, bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getArrayDecoder(item, config = {}) {\n  const size = config.size ?? getU32Decoder();\n  const itemSize = getFixedSize(item);\n  const fixedSize = computeArrayLikeCodecSize(size, itemSize);\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return createDecoder({\n    ...fixedSize !== null ? { fixedSize } : { maxSize },\n    read: (bytes, offset) => {\n      const array = [];\n      if (typeof size === \"object\" && bytes.slice(offset).length === 0) {\n        return [array, offset];\n      }\n      if (size === \"remainder\") {\n        while (offset < bytes.length) {\n          const [value, newOffset2] = item.read(bytes, offset);\n          offset = newOffset2;\n          array.push(value);\n        }\n        return [array, offset];\n      }\n      const [resolvedSize, newOffset] = typeof size === \"number\" ? [size, offset] : size.read(bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset2] = item.read(bytes, offset);\n        offset = newOffset2;\n        array.push(value);\n      }\n      return [array, offset];\n    }\n  });\n}\nfunction getArrayCodec(item, config = {}) {\n  return combineCodec(getArrayEncoder(item, config), getArrayDecoder(item, config));\n}\nfunction computeArrayLikeCodecSize(size, itemSize) {\n  if (typeof size !== \"number\") return null;\n  if (size === 0) return 0;\n  return itemSize === null ? null : itemSize * size;\n}\nfunction getBitArrayEncoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return createEncoder({\n    fixedSize: size,\n    write(value, bytes, offset) {\n      const bytesToAdd = [];\n      for (let i = 0; i < size; i += 1) {\n        let byte = 0;\n        for (let j = 0; j < 8; j += 1) {\n          const feature = Number(value[i * 8 + j] ?? 0);\n          byte |= feature << (backward ? j : 7 - j);\n        }\n        if (backward) {\n          bytesToAdd.unshift(byte);\n        } else {\n          bytesToAdd.push(byte);\n        }\n      }\n      bytes.set(bytesToAdd, offset);\n      return size;\n    }\n  });\n}\nfunction getBitArrayDecoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return createDecoder({\n    fixedSize: size,\n    read(bytes, offset) {\n      assertByteArrayHasEnoughBytesForCodec(\"bitArray\", size, bytes, offset);\n      const booleans = [];\n      let slice = bytes.slice(offset, offset + size);\n      slice = backward ? slice.reverse() : slice;\n      slice.forEach((byte) => {\n        for (let i = 0; i < 8; i += 1) {\n          if (backward) {\n            booleans.push(Boolean(byte & 1));\n            byte >>= 1;\n          } else {\n            booleans.push(Boolean(byte & 128));\n            byte <<= 1;\n          }\n        }\n      });\n      return [booleans, offset + size];\n    }\n  });\n}\nfunction getBitArrayCodec(size, config = {}) {\n  return combineCodec(getBitArrayEncoder(size, config), getBitArrayDecoder(size, config));\n}\nfunction getBooleanEncoder(config = {}) {\n  return transformEncoder(config.size ?? getU8Encoder(), (value) => value ? 1 : 0);\n}\nfunction getBooleanDecoder(config = {}) {\n  return transformDecoder(config.size ?? getU8Decoder(), (value) => Number(value) === 1);\n}\nfunction getBooleanCodec(config = {}) {\n  return combineCodec(getBooleanEncoder(config), getBooleanDecoder(config));\n}\nfunction getBytesEncoder() {\n  return createEncoder({\n    getSizeFromValue: (value) => value.length,\n    write: (value, bytes, offset) => {\n      bytes.set(value, offset);\n      return offset + value.length;\n    }\n  });\n}\nfunction getBytesDecoder() {\n  return createDecoder({\n    read: (bytes, offset) => {\n      const slice = bytes.slice(offset);\n      return [slice, offset + slice.length];\n    }\n  });\n}\nfunction getBytesCodec() {\n  return combineCodec(getBytesEncoder(), getBytesDecoder());\n}\nvar getBase16Decoder = () => createDecoder({\n  read(bytes, offset) {\n    const value = bytes.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n    return [value, bytes.length];\n  }\n});\nfunction getConstantEncoder(constant) {\n  return createEncoder({\n    fixedSize: constant.length,\n    write: (_, bytes, offset) => {\n      bytes.set(constant, offset);\n      return offset + constant.length;\n    }\n  });\n}\nfunction getConstantDecoder(constant) {\n  return createDecoder({\n    fixedSize: constant.length,\n    read: (bytes, offset) => {\n      const base16 = getBase16Decoder();\n      if (!containsBytes(bytes, constant, offset)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_CONSTANT, {\n          constant,\n          data: bytes,\n          hexConstant: base16.decode(constant),\n          hexData: base16.decode(bytes),\n          offset\n        });\n      }\n      return [void 0, offset + constant.length];\n    }\n  });\n}\nfunction getConstantCodec(constant) {\n  return combineCodec(getConstantEncoder(constant), getConstantDecoder(constant));\n}\nfunction getTupleEncoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => items.map((item, index) => getEncodedSize(value[index], item)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (value, bytes, offset) => {\n      assertValidNumberOfItemsForCodec(\"tuple\", items.length, value.length);\n      items.forEach((item, index) => {\n        offset = item.write(value[index], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getTupleDecoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const values = [];\n      items.forEach((item) => {\n        const [newValue, newOffset] = item.read(bytes, offset);\n        values.push(newValue);\n        offset = newOffset;\n      });\n      return [values, offset];\n    }\n  });\n}\nfunction getTupleCodec(items) {\n  return combineCodec(\n    getTupleEncoder(items),\n    getTupleDecoder(items)\n  );\n}\nfunction getUnionEncoder(variants, getIndexFromValue) {\n  const fixedSize = getUnionFixedSize(variants);\n  const write = (variant, bytes, offset) => {\n    const index = getIndexFromValue(variant);\n    assertValidVariantIndex(variants, index);\n    return variants[index].write(variant, bytes, offset);\n  };\n  if (fixedSize !== null) {\n    return createEncoder({ fixedSize, write });\n  }\n  const maxSize = getUnionMaxSize(variants);\n  return createEncoder({\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (variant) => {\n      const index = getIndexFromValue(variant);\n      assertValidVariantIndex(variants, index);\n      return getEncodedSize(variant, variants[index]);\n    },\n    write\n  });\n}\nfunction getUnionDecoder(variants, getIndexFromBytes) {\n  const fixedSize = getUnionFixedSize(variants);\n  const read = (bytes, offset) => {\n    const index = getIndexFromBytes(bytes, offset);\n    assertValidVariantIndex(variants, index);\n    return variants[index].read(bytes, offset);\n  };\n  if (fixedSize !== null) {\n    return createDecoder({ fixedSize, read });\n  }\n  const maxSize = getUnionMaxSize(variants);\n  return createDecoder({ ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction getUnionCodec(variants, getIndexFromValue, getIndexFromBytes) {\n  return combineCodec(\n    getUnionEncoder(variants, getIndexFromValue),\n    getUnionDecoder(variants, getIndexFromBytes)\n  );\n}\nfunction assertValidVariantIndex(variants, index) {\n  if (typeof variants[index] === \"undefined\") {\n    throw new SolanaError(SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, {\n      maxRange: variants.length - 1,\n      minRange: 0,\n      variant: index\n    });\n  }\n}\nfunction getUnionFixedSize(variants) {\n  if (variants.length === 0) return 0;\n  if (!isFixedSize(variants[0])) return null;\n  const variantSize = variants[0].fixedSize;\n  const sameSizedVariants = variants.every((variant) => isFixedSize(variant) && variant.fixedSize === variantSize);\n  return sameSizedVariants ? variantSize : null;\n}\nfunction getUnionMaxSize(variants) {\n  return maxCodecSizes(variants.map((variant) => getMaxSize(variant)));\n}\n\n// src/discriminated-union.ts\nfunction getDiscriminatedUnionEncoder(variants, config = {}) {\n  const discriminatorProperty = config.discriminator ?? \"__kind\";\n  const prefix = config.size ?? getU8Encoder();\n  return getUnionEncoder(\n    variants.map(\n      ([, variant], index) => transformEncoder(getTupleEncoder([prefix, variant]), (value) => [index, value])\n    ),\n    (value) => getVariantDiscriminator(variants, value[discriminatorProperty])\n  );\n}\nfunction getDiscriminatedUnionDecoder(variants, config = {}) {\n  const discriminatorProperty = config.discriminator ?? \"__kind\";\n  const prefix = config.size ?? getU8Decoder();\n  return getUnionDecoder(\n    variants.map(\n      ([discriminator, variant]) => transformDecoder(getTupleDecoder([prefix, variant]), ([, value]) => ({\n        [discriminatorProperty]: discriminator,\n        ...value\n      }))\n    ),\n    (bytes, offset) => Number(prefix.read(bytes, offset)[0])\n  );\n}\nfunction getDiscriminatedUnionCodec(variants, config = {}) {\n  return combineCodec(\n    getDiscriminatedUnionEncoder(variants, config),\n    getDiscriminatedUnionDecoder(variants, config)\n  );\n}\nfunction getVariantDiscriminator(variants, discriminatorValue) {\n  const discriminator = variants.findIndex(([key]) => discriminatorValue === key);\n  if (discriminator < 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, {\n      value: discriminatorValue,\n      variants: variants.map(([key]) => key)\n    });\n  }\n  return discriminator;\n}\nvar getDataEnumEncoder = getDiscriminatedUnionEncoder;\nvar getDataEnumDecoder = getDiscriminatedUnionDecoder;\nvar getDataEnumCodec = getDiscriminatedUnionCodec;\n\n// src/enum-helpers.ts\nfunction getEnumStats(constructor) {\n  const numericalValues = [\n    ...new Set(Object.values(constructor).filter((v) => typeof v === \"number\"))\n  ].sort();\n  const enumRecord = Object.fromEntries(Object.entries(constructor).slice(numericalValues.length));\n  const enumKeys = Object.keys(enumRecord);\n  const enumValues = Object.values(enumRecord);\n  const stringValues = [\n    .../* @__PURE__ */ new Set([...enumKeys, ...enumValues.filter((v) => typeof v === \"string\")])\n  ];\n  return { enumKeys, enumRecord, enumValues, numericalValues, stringValues };\n}\nfunction getEnumIndexFromVariant({\n  enumKeys,\n  enumValues,\n  variant\n}) {\n  const valueIndex = findLastIndex(enumValues, (value) => value === variant);\n  if (valueIndex >= 0) return valueIndex;\n  return enumKeys.findIndex((key) => key === variant);\n}\nfunction getEnumIndexFromDiscriminator({\n  discriminator,\n  enumKeys,\n  enumValues,\n  useValuesAsDiscriminators\n}) {\n  if (!useValuesAsDiscriminators) {\n    return discriminator >= 0 && discriminator < enumKeys.length ? discriminator : -1;\n  }\n  return findLastIndex(enumValues, (value) => value === discriminator);\n}\nfunction findLastIndex(array, predicate) {\n  let l = array.length;\n  while (l--) {\n    if (predicate(array[l], l, array)) return l;\n  }\n  return -1;\n}\nfunction formatNumericalValues(values) {\n  if (values.length === 0) return \"\";\n  let range = [values[0], values[0]];\n  const ranges = [];\n  for (let index = 1; index < values.length; index++) {\n    const value = values[index];\n    if (range[1] + 1 === value) {\n      range[1] = value;\n    } else {\n      ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n      range = [value, value];\n    }\n  }\n  ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n  return ranges.join(\", \");\n}\n\n// src/enum.ts\nfunction getEnumEncoder(constructor, config = {}) {\n  const prefix = config.size ?? getU8Encoder();\n  const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n  const { enumKeys, enumValues, numericalValues, stringValues } = getEnumStats(constructor);\n  if (useValuesAsDiscriminators && enumValues.some((value) => typeof value === \"string\")) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n      stringValues: enumValues.filter((v) => typeof v === \"string\")\n    });\n  }\n  return transformEncoder(prefix, (variant) => {\n    const index = getEnumIndexFromVariant({ enumKeys, enumValues, variant });\n    if (index < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, {\n        formattedNumericalValues: formatNumericalValues(numericalValues),\n        numericalValues,\n        stringValues,\n        variant\n      });\n    }\n    return useValuesAsDiscriminators ? enumValues[index] : index;\n  });\n}\nfunction getEnumDecoder(constructor, config = {}) {\n  const prefix = config.size ?? getU8Decoder();\n  const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n  const { enumKeys, enumValues, numericalValues } = getEnumStats(constructor);\n  if (useValuesAsDiscriminators && enumValues.some((value) => typeof value === \"string\")) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n      stringValues: enumValues.filter((v) => typeof v === \"string\")\n    });\n  }\n  return transformDecoder(prefix, (value) => {\n    const discriminator = Number(value);\n    const index = getEnumIndexFromDiscriminator({\n      discriminator,\n      enumKeys,\n      enumValues,\n      useValuesAsDiscriminators\n    });\n    if (index < 0) {\n      const validDiscriminators = useValuesAsDiscriminators ? numericalValues : [...Array(enumKeys.length).keys()];\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n        discriminator,\n        formattedValidDiscriminators: formatNumericalValues(validDiscriminators),\n        validDiscriminators\n      });\n    }\n    return enumValues[index];\n  });\n}\nfunction getEnumCodec(constructor, config = {}) {\n  return combineCodec(getEnumEncoder(constructor, config), getEnumDecoder(constructor, config));\n}\nvar getScalarEnumEncoder = getEnumEncoder;\nvar getScalarEnumDecoder = getEnumDecoder;\nvar getScalarEnumCodec = getEnumCodec;\nfunction getHiddenPrefixEncoder(encoder, prefixedEncoders) {\n  return transformEncoder(\n    getTupleEncoder([...prefixedEncoders, encoder]),\n    (value) => [...prefixedEncoders.map(() => void 0), value]\n  );\n}\nfunction getHiddenPrefixDecoder(decoder, prefixedDecoders) {\n  return transformDecoder(\n    getTupleDecoder([...prefixedDecoders, decoder]),\n    (tuple) => tuple[tuple.length - 1]\n  );\n}\nfunction getHiddenPrefixCodec(codec, prefixedCodecs) {\n  return combineCodec(getHiddenPrefixEncoder(codec, prefixedCodecs), getHiddenPrefixDecoder(codec, prefixedCodecs));\n}\nfunction getHiddenSuffixEncoder(encoder, suffixedEncoders) {\n  return transformEncoder(\n    getTupleEncoder([encoder, ...suffixedEncoders]),\n    (value) => [value, ...suffixedEncoders.map(() => void 0)]\n  );\n}\nfunction getHiddenSuffixDecoder(decoder, suffixedDecoders) {\n  return transformDecoder(\n    getTupleDecoder([decoder, ...suffixedDecoders]),\n    (tuple) => tuple[0]\n  );\n}\nfunction getHiddenSuffixCodec(codec, suffixedCodecs) {\n  return combineCodec(getHiddenSuffixEncoder(codec, suffixedCodecs), getHiddenSuffixDecoder(codec, suffixedCodecs));\n}\nfunction getMapEncoder(key, value, config = {}) {\n  return transformEncoder(\n    getArrayEncoder(getTupleEncoder([key, value]), config),\n    (map) => [...map.entries()]\n  );\n}\nfunction getMapDecoder(key, value, config = {}) {\n  return transformDecoder(\n    getArrayDecoder(getTupleDecoder([key, value]), config),\n    (entries) => new Map(entries)\n  );\n}\nfunction getMapCodec(key, value, config = {}) {\n  return combineCodec(getMapEncoder(key, value, config), getMapDecoder(key, value, config));\n}\nfunction getUnitEncoder() {\n  return createEncoder({\n    fixedSize: 0,\n    write: (_value, _bytes, offset) => offset\n  });\n}\nfunction getUnitDecoder() {\n  return createDecoder({\n    fixedSize: 0,\n    read: (_bytes, offset) => [void 0, offset]\n  });\n}\nfunction getUnitCodec() {\n  return combineCodec(getUnitEncoder(), getUnitDecoder());\n}\n\n// src/nullable.ts\nfunction getNullableEncoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return transformEncoder(getUnitEncoder(), (_boolean) => void 0);\n    }\n    return getBooleanEncoder({ size: config.prefix ?? getU8Encoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      assertIsFixedSize(item);\n      return fixEncoderSize(getUnitEncoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return getUnitEncoder();\n    }\n    return getConstantEncoder(config.noneValue);\n  })();\n  return getUnionEncoder(\n    [\n      transformEncoder(getTupleEncoder([prefix, noneValue]), (_value) => [\n        false,\n        void 0\n      ]),\n      transformEncoder(getTupleEncoder([prefix, item]), (value) => [true, value])\n    ],\n    (variant) => Number(variant !== null)\n  );\n}\nfunction getNullableDecoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return transformDecoder(getUnitDecoder(), () => false);\n    }\n    return getBooleanDecoder({ size: config.prefix ?? getU8Decoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      assertIsFixedSize(item);\n      return fixDecoderSize(getUnitDecoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return getUnitDecoder();\n    }\n    return getConstantDecoder(config.noneValue);\n  })();\n  return getUnionDecoder(\n    [\n      transformDecoder(getTupleDecoder([prefix, noneValue]), () => null),\n      transformDecoder(getTupleDecoder([prefix, item]), ([, value]) => value)\n    ],\n    (bytes, offset) => {\n      if (config.prefix === null && !config.noneValue) {\n        return Number(offset < bytes.length);\n      }\n      if (config.prefix === null && config.noneValue != null) {\n        const zeroValue = config.noneValue === \"zeroes\" ? new Uint8Array(noneValue.fixedSize).fill(0) : config.noneValue;\n        return containsBytes(bytes, zeroValue, offset) ? 0 : 1;\n      }\n      return Number(prefix.read(bytes, offset)[0]);\n    }\n  );\n}\nfunction getNullableCodec(item, config = {}) {\n  return combineCodec(\n    getNullableEncoder(item, config),\n    getNullableDecoder(item, config)\n  );\n}\nfunction getSetEncoder(item, config = {}) {\n  return transformEncoder(getArrayEncoder(item, config), (set) => [...set]);\n}\nfunction getSetDecoder(item, config = {}) {\n  return transformDecoder(getArrayDecoder(item, config), (entries) => new Set(entries));\n}\nfunction getSetCodec(item, config = {}) {\n  return combineCodec(getSetEncoder(item, config), getSetDecoder(item, config));\n}\nfunction getStructEncoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => fields.map(([key, codec]) => getEncodedSize(value[key], codec)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (struct, bytes, offset) => {\n      fields.forEach(([key, codec]) => {\n        offset = codec.write(struct[key], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getStructDecoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const struct = {};\n      fields.forEach(([key, codec]) => {\n        const [value, newOffset] = codec.read(bytes, offset);\n        offset = newOffset;\n        struct[key] = value;\n      });\n      return [struct, offset];\n    }\n  });\n}\nfunction getStructCodec(fields) {\n  return combineCodec(\n    getStructEncoder(fields),\n    getStructDecoder(fields)\n  );\n}\n\nexport { assertValidNumberOfItemsForCodec, getArrayCodec, getArrayDecoder, getArrayEncoder, getBitArrayCodec, getBitArrayDecoder, getBitArrayEncoder, getBooleanCodec, getBooleanDecoder, getBooleanEncoder, getBytesCodec, getBytesDecoder, getBytesEncoder, getConstantCodec, getConstantDecoder, getConstantEncoder, getDataEnumCodec, getDataEnumDecoder, getDataEnumEncoder, getDiscriminatedUnionCodec, getDiscriminatedUnionDecoder, getDiscriminatedUnionEncoder, getEnumCodec, getEnumDecoder, getEnumEncoder, getHiddenPrefixCodec, getHiddenPrefixDecoder, getHiddenPrefixEncoder, getHiddenSuffixCodec, getHiddenSuffixDecoder, getHiddenSuffixEncoder, getMapCodec, getMapDecoder, getMapEncoder, getNullableCodec, getNullableDecoder, getNullableEncoder, getScalarEnumCodec, getScalarEnumDecoder, getScalarEnumEncoder, getSetCodec, getSetDecoder, getSetEncoder, getStructCodec, getStructDecoder, getStructEncoder, getTupleCodec, getTupleDecoder, getTupleEncoder, getUnionCodec, getUnionDecoder, getUnionEncoder, getUnitCodec, getUnitDecoder, getUnitEncoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { PublicKey } from '@solana/web3.js';\nimport { fixCodecSize, getBytesCodec, getStructCodec, getU64Codec } from '@solana/codecs';\nconst tokenGroupCodec = getStructCodec([\n    ['updateAuthority', fixCodecSize(getBytesCodec(), 32)],\n    ['mint', fixCodecSize(getBytesCodec(), 32)],\n    ['size', getU64Codec()],\n    ['maxSize', getU64Codec()],\n]);\nexport const TOKEN_GROUP_SIZE = tokenGroupCodec.fixedSize;\n// Checks if all elements in the array are 0\nfunction isNonePubkey(buffer) {\n    for (let i = 0; i < buffer.length; i++) {\n        if (buffer[i] !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\n// Pack TokenGroup into byte slab\nexport function packTokenGroup(group) {\n    // If no updateAuthority given, set it to the None/Zero PublicKey for encoding\n    const updateAuthority = group.updateAuthority ?? PublicKey.default;\n    return tokenGroupCodec.encode({\n        updateAuthority: updateAuthority.toBuffer(),\n        mint: group.mint.toBuffer(),\n        size: group.size,\n        maxSize: group.maxSize,\n    });\n}\n// unpack byte slab into TokenGroup\nexport function unpackTokenGroup(buffer) {\n    const data = tokenGroupCodec.decode(buffer);\n    return isNonePubkey(data.updateAuthority)\n        ? {\n            mint: new PublicKey(data.mint),\n            size: data.size,\n            maxSize: data.maxSize,\n        }\n        : {\n            updateAuthority: new PublicKey(data.updateAuthority),\n            mint: new PublicKey(data.mint),\n            size: data.size,\n            maxSize: data.maxSize,\n        };\n}\n//# sourceMappingURL=tokenGroup.js.map","import { PublicKey } from '@solana/web3.js';\nimport { fixCodecSize, getBytesCodec, getStructCodec, getU64Codec } from '@solana/codecs';\nconst tokenGroupMemberCodec = getStructCodec([\n    ['mint', fixCodecSize(getBytesCodec(), 32)],\n    ['group', fixCodecSize(getBytesCodec(), 32)],\n    ['memberNumber', getU64Codec()],\n]);\nexport const TOKEN_GROUP_MEMBER_SIZE = tokenGroupMemberCodec.fixedSize;\n// Pack TokenGroupMember into byte slab\nexport function packTokenGroupMember(member) {\n    return tokenGroupMemberCodec.encode({\n        mint: member.mint.toBuffer(),\n        group: member.group.toBuffer(),\n        memberNumber: member.memberNumber,\n    });\n}\n// unpack byte slab into TokenGroupMember\nexport function unpackTokenGroupMember(buffer) {\n    const data = tokenGroupMemberCodec.decode(buffer);\n    return {\n        mint: new PublicKey(data.mint),\n        group: new PublicKey(data.group),\n        memberNumber: data.memberNumber,\n    };\n}\n//# sourceMappingURL=tokenGroupMember.js.map","import { struct } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a Group Pointer extension */\nexport const GroupMemberPointerLayout = struct([\n    publicKey('authority'),\n    publicKey('memberAddress'),\n]);\nexport const GROUP_MEMBER_POINTER_SIZE = GroupMemberPointerLayout.span;\nexport function getGroupMemberPointerState(mint) {\n    const extensionData = getExtensionData(ExtensionType.GroupMemberPointer, mint.tlvData);\n    if (extensionData !== null) {\n        const { authority, memberAddress } = GroupMemberPointerLayout.decode(extensionData);\n        // Explicitly set None/Zero keys to null\n        return {\n            authority: authority.equals(PublicKey.default) ? null : authority,\n            memberAddress: memberAddress.equals(PublicKey.default) ? null : memberAddress,\n        };\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map","import { struct } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a GroupPointer extension */\nexport const GroupPointerLayout = struct([\n    publicKey('authority'),\n    publicKey('groupAddress'),\n]);\nexport const GROUP_POINTER_SIZE = GroupPointerLayout.span;\nexport function getGroupPointerState(mint) {\n    const extensionData = getExtensionData(ExtensionType.GroupPointer, mint.tlvData);\n    if (extensionData !== null) {\n        const { authority, groupAddress } = GroupPointerLayout.decode(extensionData);\n        // Explicitly set None/Zero keys to null\n        return {\n            authority: authority.equals(PublicKey.default) ? null : authority,\n            groupAddress: groupAddress.equals(PublicKey.default) ? null : groupAddress,\n        };\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map","import { struct } from '@solana/buffer-layout';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n/** Buffer layout for de/serializing an account */\nexport const ImmutableOwnerLayout = struct([]);\nexport const IMMUTABLE_OWNER_SIZE = ImmutableOwnerLayout.span;\nexport function getImmutableOwner(account) {\n    const extensionData = getExtensionData(ExtensionType.ImmutableOwner, account.tlvData);\n    if (extensionData !== null) {\n        return ImmutableOwnerLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=immutableOwner.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions, TOKEN_2022_PROGRAM_ID } from '../../constants.js';\nimport { TokenUnsupportedInstructionError } from '../../errors.js';\nimport { addSigners } from '../../instructions/internal.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nexport var MemoTransferInstruction;\n(function (MemoTransferInstruction) {\n    MemoTransferInstruction[MemoTransferInstruction[\"Enable\"] = 0] = \"Enable\";\n    MemoTransferInstruction[MemoTransferInstruction[\"Disable\"] = 1] = \"Disable\";\n})(MemoTransferInstruction || (MemoTransferInstruction = {}));\n/** TODO: docs */\nexport const memoTransferInstructionData = struct([\n    u8('instruction'),\n    u8('memoTransferInstruction'),\n]);\n/**\n * Construct an EnableRequiredMemoTransfers instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createEnableRequiredMemoTransfersInstruction(account, authority, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    return createMemoTransferInstruction(MemoTransferInstruction.Enable, account, authority, multiSigners, programId);\n}\n/**\n * Construct a DisableMemoTransfer instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createDisableRequiredMemoTransfersInstruction(account, authority, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    return createMemoTransferInstruction(MemoTransferInstruction.Disable, account, authority, multiSigners, programId);\n}\nfunction createMemoTransferInstruction(memoTransferInstruction, account, authority, multiSigners, programId) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = addSigners([{ pubkey: account, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(memoTransferInstructionData.span);\n    memoTransferInstructionData.encode({\n        instruction: TokenInstruction.MemoTransferExtension,\n        memoTransferInstruction,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map","import { ns64, s16, struct } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\nexport const InterestBearingMintConfigStateLayout = struct([\n    publicKey('rateAuthority'),\n    ns64('initializationTimestamp'),\n    s16('preUpdateAverageRate'),\n    ns64('lastUpdateTimestamp'),\n    s16('currentRate'),\n]);\nexport const INTEREST_BEARING_MINT_CONFIG_STATE_SIZE = InterestBearingMintConfigStateLayout.span;\nexport function getInterestBearingMintConfigState(mint) {\n    const extensionData = getExtensionData(ExtensionType.InterestBearingConfig, mint.tlvData);\n    if (extensionData !== null) {\n        return InterestBearingMintConfigStateLayout.decode(extensionData);\n    }\n    return null;\n}\n//# sourceMappingURL=state.js.map","import { struct } from '@solana/buffer-layout';\nimport { bool } from '@solana/buffer-layout-utils';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a memo transfer extension */\nexport const MemoTransferLayout = struct([bool('requireIncomingTransferMemos')]);\nexport const MEMO_TRANSFER_SIZE = MemoTransferLayout.span;\nexport function getMemoTransfer(account) {\n    const extensionData = getExtensionData(ExtensionType.MemoTransfer, account.tlvData);\n    if (extensionData !== null) {\n        return MemoTransferLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map","import { struct } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a Metadata Pointer extension */\nexport const MetadataPointerLayout = struct([\n    publicKey('authority'),\n    publicKey('metadataAddress'),\n]);\nexport const METADATA_POINTER_SIZE = MetadataPointerLayout.span;\nexport function getMetadataPointerState(mint) {\n    const extensionData = getExtensionData(ExtensionType.MetadataPointer, mint.tlvData);\n    if (extensionData !== null) {\n        const { authority, metadataAddress } = MetadataPointerLayout.decode(extensionData);\n        // Explicitly set None/Zero keys to null\n        return {\n            authority: authority.equals(PublicKey.default) ? null : authority,\n            metadataAddress: metadataAddress.equals(PublicKey.default) ? null : metadataAddress,\n        };\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map","import { struct } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n/** Buffer layout for de/serializing a mint */\nexport const MintCloseAuthorityLayout = struct([publicKey('closeAuthority')]);\nexport const MINT_CLOSE_AUTHORITY_SIZE = MintCloseAuthorityLayout.span;\nexport function getMintCloseAuthority(mint) {\n    const extensionData = getExtensionData(ExtensionType.MintCloseAuthority, mint.tlvData);\n    if (extensionData !== null) {\n        return MintCloseAuthorityLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=mintCloseAuthority.js.map","import { struct } from '@solana/buffer-layout';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n/** Buffer layout for de/serializing an account */\nexport const NonTransferableLayout = struct([]);\nexport const NON_TRANSFERABLE_SIZE = NonTransferableLayout.span;\nexport const NON_TRANSFERABLE_ACCOUNT_SIZE = NonTransferableLayout.span;\nexport function getNonTransferable(mint) {\n    const extensionData = getExtensionData(ExtensionType.NonTransferable, mint.tlvData);\n    if (extensionData !== null) {\n        return NonTransferableLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\nexport function getNonTransferableAccount(account) {\n    const extensionData = getExtensionData(ExtensionType.NonTransferableAccount, account.tlvData);\n    if (extensionData !== null) {\n        return NonTransferableLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=nonTransferable.js.map","import { struct } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n/** Buffer layout for de/serializing a mint */\nexport const PermanentDelegateLayout = struct([publicKey('delegate')]);\nexport const PERMANENT_DELEGATE_SIZE = PermanentDelegateLayout.span;\nexport function getPermanentDelegate(mint) {\n    const extensionData = getExtensionData(ExtensionType.PermanentDelegate, mint.tlvData);\n    if (extensionData !== null) {\n        return PermanentDelegateLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=permanentDelegate.js.map","import { Layout } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nexport class COptionPublicKeyLayout extends Layout {\n    constructor(property) {\n        super(-1, property);\n        this.publicKeyLayout = publicKey();\n    }\n    decode(buffer, offset = 0) {\n        const option = buffer[offset];\n        if (option === 0) {\n            return null;\n        }\n        return this.publicKeyLayout.decode(buffer, offset + 1);\n    }\n    encode(src, buffer, offset = 0) {\n        if (src === null) {\n            buffer[offset] = 0;\n            return 1;\n        }\n        else {\n            buffer[offset] = 1;\n            this.publicKeyLayout.encode(src, buffer, offset + 1);\n            return 33;\n        }\n    }\n    getSpan(buffer, offset = 0) {\n        if (buffer) {\n            const option = buffer[offset];\n            return option === 0 ? 1 : 1 + this.publicKeyLayout.span;\n        }\n        return 1 + this.publicKeyLayout.span;\n    }\n}\n//# sourceMappingURL=serialization.js.map","import { struct, u16, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions, TOKEN_2022_PROGRAM_ID } from '../../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, TokenUnsupportedInstructionError, } from '../../errors.js';\nimport { addSigners } from '../../instructions/internal.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nimport { COptionPublicKeyLayout } from '../../serialization.js';\nexport var TransferFeeInstruction;\n(function (TransferFeeInstruction) {\n    TransferFeeInstruction[TransferFeeInstruction[\"InitializeTransferFeeConfig\"] = 0] = \"InitializeTransferFeeConfig\";\n    TransferFeeInstruction[TransferFeeInstruction[\"TransferCheckedWithFee\"] = 1] = \"TransferCheckedWithFee\";\n    TransferFeeInstruction[TransferFeeInstruction[\"WithdrawWithheldTokensFromMint\"] = 2] = \"WithdrawWithheldTokensFromMint\";\n    TransferFeeInstruction[TransferFeeInstruction[\"WithdrawWithheldTokensFromAccounts\"] = 3] = \"WithdrawWithheldTokensFromAccounts\";\n    TransferFeeInstruction[TransferFeeInstruction[\"HarvestWithheldTokensToMint\"] = 4] = \"HarvestWithheldTokensToMint\";\n    TransferFeeInstruction[TransferFeeInstruction[\"SetTransferFee\"] = 5] = \"SetTransferFee\";\n})(TransferFeeInstruction || (TransferFeeInstruction = {}));\n/** TODO: docs */\nexport const initializeTransferFeeConfigInstructionData = struct([\n    u8('instruction'),\n    u8('transferFeeInstruction'),\n    new COptionPublicKeyLayout('transferFeeConfigAuthority'),\n    new COptionPublicKeyLayout('withdrawWithheldAuthority'),\n    u16('transferFeeBasisPoints'),\n    u64('maximumFee'),\n]);\n/**\n * Construct an InitializeTransferFeeConfig instruction\n *\n * @param mint            Token mint account\n * @param transferFeeConfigAuthority  Optional authority that can update the fees\n * @param withdrawWithheldAuthority Optional authority that can withdraw fees\n * @param transferFeeBasisPoints Amount of transfer collected as fees, expressed as basis points of the transfer amount\n * @param maximumFee        Maximum fee assessed on transfers\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeTransferFeeConfigInstruction(mint, transferFeeConfigAuthority, withdrawWithheldAuthority, transferFeeBasisPoints, maximumFee, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeTransferFeeConfigInstructionData.span);\n    initializeTransferFeeConfigInstructionData.encode({\n        instruction: TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.InitializeTransferFeeConfig,\n        transferFeeConfigAuthority: transferFeeConfigAuthority,\n        withdrawWithheldAuthority: withdrawWithheldAuthority,\n        transferFeeBasisPoints: transferFeeBasisPoints,\n        maximumFee: maximumFee,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeTransferFeeConfig instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeTransferFeeConfigInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeTransferFeeConfigInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializeTransferFeeConfigInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.InitializeTransferFeeConfig)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeTransferFeeConfig instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeTransferFeeConfigInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, transferFeeInstruction, transferFeeConfigAuthority, withdrawWithheldAuthority, transferFeeBasisPoints, maximumFee, } = initializeTransferFeeConfigInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n            transferFeeConfigAuthority,\n            withdrawWithheldAuthority,\n            transferFeeBasisPoints,\n            maximumFee,\n        },\n    };\n}\nexport const transferCheckedWithFeeInstructionData = struct([\n    u8('instruction'),\n    u8('transferFeeInstruction'),\n    u64('amount'),\n    u8('decimals'),\n    u64('fee'),\n]);\n/**\n * Construct an TransferCheckedWithFee instruction\n *\n * @param source          The source account\n * @param mint            The token mint\n * @param destination     The destination account\n * @param authority       The source account's owner/delegate\n * @param signers         The signer account(s)\n * @param amount          The amount of tokens to transfer\n * @param decimals        The expected number of base 10 digits to the right of the decimal place\n * @param fee             The expected fee assesed on this transfer, calculated off-chain based on the transferFeeBasisPoints and maximumFee of the mint.\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createTransferCheckedWithFeeInstruction(source, mint, destination, authority, amount, decimals, fee, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(transferCheckedWithFeeInstructionData.span);\n    transferCheckedWithFeeInstructionData.encode({\n        instruction: TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.TransferCheckedWithFee,\n        amount,\n        decimals,\n        fee,\n    }, data);\n    const keys = addSigners([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a TransferCheckedWithFee instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeTransferCheckedWithFeeInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferCheckedWithFeeInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { source, mint, destination, authority, signers }, data, } = decodeTransferCheckedWithFeeInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.TransferCheckedWithFee)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            authority,\n            signers: signers ? signers : null,\n        },\n        data,\n    };\n}\n/**\n * Decode a TransferCheckedWithFees instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeTransferCheckedWithFeeInstructionUnchecked({ programId, keys: [source, mint, destination, authority, ...signers], data, }) {\n    const { instruction, transferFeeInstruction, amount, decimals, fee } = transferCheckedWithFeeInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            authority,\n            signers,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n            amount,\n            decimals,\n            fee,\n        },\n    };\n}\nexport const withdrawWithheldTokensFromMintInstructionData = struct([\n    u8('instruction'),\n    u8('transferFeeInstruction'),\n]);\n/**\n * Construct a WithdrawWithheldTokensFromMint instruction\n *\n * @param mint              The token mint\n * @param destination       The destination account\n * @param authority         The source account's owner/delegate\n * @param signers           The signer account(s)\n * @param programID         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createWithdrawWithheldTokensFromMintInstruction(mint, destination, authority, signers = [], programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(withdrawWithheldTokensFromMintInstructionData.span);\n    withdrawWithheldTokensFromMintInstructionData.encode({\n        instruction: TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.WithdrawWithheldTokensFromMint,\n    }, data);\n    const keys = addSigners([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, signers);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a WithdrawWithheldTokensFromMint instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeWithdrawWithheldTokensFromMintInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== withdrawWithheldTokensFromMintInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, signers }, data, } = decodeWithdrawWithheldTokensFromMintInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.WithdrawWithheldTokensFromMint)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers: signers ? signers : null,\n        },\n        data,\n    };\n}\n/**\n * Decode a WithdrawWithheldTokensFromMint instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeWithdrawWithheldTokensFromMintInstructionUnchecked({ programId, keys: [mint, destination, authority, ...signers], data, }) {\n    const { instruction, transferFeeInstruction } = withdrawWithheldTokensFromMintInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n        },\n    };\n}\nexport const withdrawWithheldTokensFromAccountsInstructionData = struct([\n    u8('instruction'),\n    u8('transferFeeInstruction'),\n    u8('numTokenAccounts'),\n]);\n/**\n * Construct a WithdrawWithheldTokensFromAccounts instruction\n *\n * @param mint              The token mint\n * @param destination       The destination account\n * @param authority         The source account's owner/delegate\n * @param signers           The signer account(s)\n * @param sources           The source accounts to withdraw from\n * @param programID         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createWithdrawWithheldTokensFromAccountsInstruction(mint, destination, authority, signers, sources, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(withdrawWithheldTokensFromAccountsInstructionData.span);\n    withdrawWithheldTokensFromAccountsInstructionData.encode({\n        instruction: TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.WithdrawWithheldTokensFromAccounts,\n        numTokenAccounts: sources.length,\n    }, data);\n    const keys = addSigners([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, signers);\n    for (const source of sources) {\n        keys.push({ pubkey: source, isSigner: false, isWritable: true });\n    }\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a WithdrawWithheldTokensFromAccounts instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeWithdrawWithheldTokensFromAccountsInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== withdrawWithheldTokensFromAccountsInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, signers, sources }, data, } = decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.WithdrawWithheldTokensFromAccounts)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers: signers ? signers : null,\n            sources: sources ? sources : null,\n        },\n        data,\n    };\n}\n/**\n * Decode a WithdrawWithheldTokensFromAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked({ programId, keys, data, }) {\n    const { instruction, transferFeeInstruction, numTokenAccounts } = withdrawWithheldTokensFromAccountsInstructionData.decode(data);\n    const [mint, destination, authority, signers, sources] = [\n        keys[0],\n        keys[1],\n        keys[2],\n        keys.slice(3, 3 + numTokenAccounts),\n        keys.slice(-1 * numTokenAccounts),\n    ];\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            signers,\n            sources,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n            numTokenAccounts,\n        },\n    };\n}\nexport const harvestWithheldTokensToMintInstructionData = struct([\n    u8('instruction'),\n    u8('transferFeeInstruction'),\n]);\n/**\n * Construct a HarvestWithheldTokensToMint instruction\n *\n * @param mint              The token mint\n * @param sources           The source accounts to withdraw from\n * @param programID         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createHarvestWithheldTokensToMintInstruction(mint, sources, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(harvestWithheldTokensToMintInstructionData.span);\n    harvestWithheldTokensToMintInstructionData.encode({\n        instruction: TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.HarvestWithheldTokensToMint,\n    }, data);\n    const keys = [];\n    keys.push({ pubkey: mint, isSigner: false, isWritable: true });\n    for (const source of sources) {\n        keys.push({ pubkey: source, isSigner: false, isWritable: true });\n    }\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a HarvestWithheldTokensToMint instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeHarvestWithheldTokensToMintInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== harvestWithheldTokensToMintInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, sources }, data, } = decodeHarvestWithheldTokensToMintInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.HarvestWithheldTokensToMint)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n            sources,\n        },\n        data,\n    };\n}\n/**\n * Decode a HarvestWithheldTokensToMint instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeHarvestWithheldTokensToMintInstructionUnchecked({ programId, keys: [mint, ...sources], data, }) {\n    const { instruction, transferFeeInstruction } = harvestWithheldTokensToMintInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            sources,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n        },\n    };\n}\nexport const setTransferFeeInstructionData = struct([\n    u8('instruction'),\n    u8('transferFeeInstruction'),\n    u16('transferFeeBasisPoints'),\n    u64('maximumFee'),\n]);\n/**\n * Construct a SetTransferFeeInstruction instruction\n *\n * @param mint                      The token mint\n * @param authority                 The authority of the transfer fee\n * @param signers                   The signer account(s)\n * @param transferFeeBasisPoints    Amount of transfer collected as fees, expressed as basis points of the transfer amount\n * @param maximumFee                Maximum fee assessed on transfers\n * @param programID                 SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createSetTransferFeeInstruction(mint, authority, signers, transferFeeBasisPoints, maximumFee, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const data = Buffer.alloc(setTransferFeeInstructionData.span);\n    setTransferFeeInstructionData.encode({\n        instruction: TokenInstruction.TransferFeeExtension,\n        transferFeeInstruction: TransferFeeInstruction.SetTransferFee,\n        transferFeeBasisPoints: transferFeeBasisPoints,\n        maximumFee: maximumFee,\n    }, data);\n    const keys = addSigners([{ pubkey: mint, isSigner: false, isWritable: true }], authority, signers);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an SetTransferFee instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeSetTransferFeeInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== setTransferFeeInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, authority, signers }, data, } = decodeSetTransferFeeInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferFeeExtension ||\n        data.transferFeeInstruction !== TransferFeeInstruction.SetTransferFee)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n            authority,\n            signers: signers ? signers : null,\n        },\n        data,\n    };\n}\n/**\n * Decode a SetTransferFee instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeSetTransferFeeInstructionUnchecked({ programId, keys: [mint, authority, ...signers], data, }) {\n    const { instruction, transferFeeInstruction, transferFeeBasisPoints, maximumFee } = setTransferFeeInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            authority,\n            signers,\n        },\n        data: {\n            instruction,\n            transferFeeInstruction,\n            transferFeeBasisPoints,\n            maximumFee,\n        },\n    };\n}\n//# sourceMappingURL=instructions.js.map","import { struct, u16 } from '@solana/buffer-layout';\nimport { publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\nexport const MAX_FEE_BASIS_POINTS = 10000;\nexport const ONE_IN_BASIS_POINTS = BigInt(MAX_FEE_BASIS_POINTS);\n/** Buffer layout for de/serializing a transfer fee */\nexport function transferFeeLayout(property) {\n    return struct([u64('epoch'), u64('maximumFee'), u16('transferFeeBasisPoints')], property);\n}\n/** Calculate the transfer fee */\nexport function calculateFee(transferFee, preFeeAmount) {\n    const transferFeeBasisPoints = transferFee.transferFeeBasisPoints;\n    if (transferFeeBasisPoints === 0 || preFeeAmount === BigInt(0)) {\n        return BigInt(0);\n    }\n    else {\n        const numerator = preFeeAmount * BigInt(transferFeeBasisPoints);\n        const rawFee = (numerator + ONE_IN_BASIS_POINTS - BigInt(1)) / ONE_IN_BASIS_POINTS;\n        const fee = rawFee > transferFee.maximumFee ? transferFee.maximumFee : rawFee;\n        return BigInt(fee);\n    }\n}\n/** Buffer layout for de/serializing a transfer fee config extension */\nexport const TransferFeeConfigLayout = struct([\n    publicKey('transferFeeConfigAuthority'),\n    publicKey('withdrawWithheldAuthority'),\n    u64('withheldAmount'),\n    transferFeeLayout('olderTransferFee'),\n    transferFeeLayout('newerTransferFee'),\n]);\nexport const TRANSFER_FEE_CONFIG_SIZE = TransferFeeConfigLayout.span;\n/** Get the fee for given epoch */\nexport function getEpochFee(transferFeeConfig, epoch) {\n    if (epoch >= transferFeeConfig.newerTransferFee.epoch) {\n        return transferFeeConfig.newerTransferFee;\n    }\n    else {\n        return transferFeeConfig.olderTransferFee;\n    }\n}\n/** Calculate the fee for the given epoch and input amount */\nexport function calculateEpochFee(transferFeeConfig, epoch, preFeeAmount) {\n    const transferFee = getEpochFee(transferFeeConfig, epoch);\n    return calculateFee(transferFee, preFeeAmount);\n}\n/** Buffer layout for de/serializing */\nexport const TransferFeeAmountLayout = struct([u64('withheldAmount')]);\nexport const TRANSFER_FEE_AMOUNT_SIZE = TransferFeeAmountLayout.span;\nexport function getTransferFeeConfig(mint) {\n    const extensionData = getExtensionData(ExtensionType.TransferFeeConfig, mint.tlvData);\n    if (extensionData !== null) {\n        return TransferFeeConfigLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\nexport function getTransferFeeAmount(account) {\n    const extensionData = getExtensionData(ExtensionType.TransferFeeAmount, account.tlvData);\n    if (extensionData !== null) {\n        return TransferFeeAmountLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=state.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const transferCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct a TransferChecked instruction\n *\n * @param source       Source account\n * @param mint         Mint account\n * @param destination  Destination account\n * @param owner        Owner of the source account\n * @param amount       Number of tokens to transfer\n * @param decimals     Number of decimals in transfer amount\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createTransferCheckedInstruction(source, mint, destination, owner, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(transferCheckedInstructionData.span);\n    transferCheckedInstructionData.encode({\n        instruction: TokenInstruction.TransferChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a TransferChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeTransferCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { source, mint, destination, owner, multiSigners }, data, } = decodeTransferCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.TransferChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!source || !mint || !destination || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a TransferChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeTransferCheckedInstructionUnchecked({ programId, keys: [source, mint, destination, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            source,\n            mint,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data: transferCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=transferChecked.js.map","import { blob, greedy, seq, struct, u32, u8 } from '@solana/buffer-layout';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\nimport { PublicKey } from '@solana/web3.js';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { TokenTransferHookAccountNotFound } from '../../errors.js';\nimport { unpackSeeds } from './seeds.js';\n/** Buffer layout for de/serializing a transfer hook extension */\nexport const TransferHookLayout = struct([publicKey('authority'), publicKey('programId')]);\nexport const TRANSFER_HOOK_SIZE = TransferHookLayout.span;\nexport function getTransferHook(mint) {\n    const extensionData = getExtensionData(ExtensionType.TransferHook, mint.tlvData);\n    if (extensionData !== null) {\n        return TransferHookLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\n/** Buffer layout for de/serializing a transfer hook account extension */\nexport const TransferHookAccountLayout = struct([bool('transferring')]);\nexport const TRANSFER_HOOK_ACCOUNT_SIZE = TransferHookAccountLayout.span;\nexport function getTransferHookAccount(account) {\n    const extensionData = getExtensionData(ExtensionType.TransferHookAccount, account.tlvData);\n    if (extensionData !== null) {\n        return TransferHookAccountLayout.decode(extensionData);\n    }\n    else {\n        return null;\n    }\n}\nexport function getExtraAccountMetaAddress(mint, programId) {\n    const seeds = [Buffer.from('extra-account-metas'), mint.toBuffer()];\n    return PublicKey.findProgramAddressSync(seeds, programId)[0];\n}\n/** Buffer layout for de/serializing an ExtraAccountMeta */\nexport const ExtraAccountMetaLayout = struct([\n    u8('discriminator'),\n    blob(32, 'addressConfig'),\n    bool('isSigner'),\n    bool('isWritable'),\n]);\n/** Buffer layout for de/serializing a list of ExtraAccountMeta prefixed by a u32 length */\nexport const ExtraAccountMetaListLayout = struct([\n    u32('count'),\n    seq(ExtraAccountMetaLayout, greedy(ExtraAccountMetaLayout.span), 'extraAccounts'),\n]);\n/** Buffer layout for de/serializing an ExtraAccountMetaAccountData */\nexport const ExtraAccountMetaAccountDataLayout = struct([\n    u64('instructionDiscriminator'),\n    u32('length'),\n    ExtraAccountMetaListLayout.replicate('extraAccountsList'),\n]);\n/** Unpack an extra account metas account and parse the data into a list of ExtraAccountMetas */\nexport function getExtraAccountMetas(account) {\n    const extraAccountsList = ExtraAccountMetaAccountDataLayout.decode(account.data).extraAccountsList;\n    return extraAccountsList.extraAccounts.slice(0, extraAccountsList.count);\n}\n/** Take an ExtraAccountMeta and construct that into an actual AccountMeta */\nexport async function resolveExtraAccountMeta(connection, extraMeta, previousMetas, instructionData, transferHookProgramId) {\n    if (extraMeta.discriminator === 0) {\n        return {\n            pubkey: new PublicKey(extraMeta.addressConfig),\n            isSigner: extraMeta.isSigner,\n            isWritable: extraMeta.isWritable,\n        };\n    }\n    let programId = PublicKey.default;\n    if (extraMeta.discriminator === 1) {\n        programId = transferHookProgramId;\n    }\n    else {\n        const accountIndex = extraMeta.discriminator - (1 << 7);\n        if (previousMetas.length <= accountIndex) {\n            throw new TokenTransferHookAccountNotFound();\n        }\n        programId = previousMetas[accountIndex].pubkey;\n    }\n    const seeds = await unpackSeeds(extraMeta.addressConfig, previousMetas, instructionData, connection);\n    const pubkey = PublicKey.findProgramAddressSync(seeds, programId)[0];\n    return { pubkey, isSigner: extraMeta.isSigner, isWritable: extraMeta.isWritable };\n}\n//# sourceMappingURL=state.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions, TOKEN_2022_PROGRAM_ID, TOKEN_PROGRAM_ID } from '../../constants.js';\nimport { TokenUnsupportedInstructionError } from '../../errors.js';\nimport { addSigners } from '../../instructions/internal.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { createTransferCheckedInstruction } from '../../instructions/transferChecked.js';\nimport { createTransferCheckedWithFeeInstruction } from '../transferFee/instructions.js';\nimport { getMint } from '../../state/mint.js';\nimport { getExtraAccountMetaAddress, getExtraAccountMetas, getTransferHook, resolveExtraAccountMeta } from './state.js';\nexport var TransferHookInstruction;\n(function (TransferHookInstruction) {\n    TransferHookInstruction[TransferHookInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    TransferHookInstruction[TransferHookInstruction[\"Update\"] = 1] = \"Update\";\n})(TransferHookInstruction || (TransferHookInstruction = {}));\n/** The struct that represents the instruction data as it is read by the program */\nexport const initializeTransferHookInstructionData = struct([\n    u8('instruction'),\n    u8('transferHookInstruction'),\n    publicKey('authority'),\n    publicKey('transferHookProgramId'),\n]);\n/**\n * Construct an InitializeTransferHook instruction\n *\n * @param mint                  Token mint account\n * @param authority             Transfer hook authority account\n * @param transferHookProgramId Transfer hook program account\n * @param programId             SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeTransferHookInstruction(mint, authority, transferHookProgramId, programId) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeTransferHookInstructionData.span);\n    initializeTransferHookInstructionData.encode({\n        instruction: TokenInstruction.TransferHookExtension,\n        transferHookInstruction: TransferHookInstruction.Initialize,\n        authority,\n        transferHookProgramId,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/** The struct that represents the instruction data as it is read by the program */\nexport const updateTransferHookInstructionData = struct([\n    u8('instruction'),\n    u8('transferHookInstruction'),\n    publicKey('transferHookProgramId'),\n]);\n/**\n * Construct an UpdateTransferHook instruction\n *\n * @param mint                  Mint to update\n * @param authority             The mint's transfer hook authority\n * @param transferHookProgramId The new transfer hook program account\n * @param signers               The signer account(s) for a multisig\n * @param tokenProgramId        SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createUpdateTransferHookInstruction(mint, authority, transferHookProgramId, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = addSigners([{ pubkey: mint, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(updateTransferHookInstructionData.span);\n    updateTransferHookInstructionData.encode({\n        instruction: TokenInstruction.TransferHookExtension,\n        transferHookInstruction: TransferHookInstruction.Update,\n        transferHookProgramId,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\nfunction deEscalateAccountMeta(accountMeta, accountMetas) {\n    const maybeHighestPrivileges = accountMetas\n        .filter(x => x.pubkey.equals(accountMeta.pubkey))\n        .reduce((acc, x) => {\n        if (!acc)\n            return { isSigner: x.isSigner, isWritable: x.isWritable };\n        return { isSigner: acc.isSigner || x.isSigner, isWritable: acc.isWritable || x.isWritable };\n    }, undefined);\n    if (maybeHighestPrivileges) {\n        const { isSigner, isWritable } = maybeHighestPrivileges;\n        if (!isSigner && isSigner !== accountMeta.isSigner) {\n            accountMeta.isSigner = false;\n        }\n        if (!isWritable && isWritable !== accountMeta.isWritable) {\n            accountMeta.isWritable = false;\n        }\n    }\n    return accountMeta;\n}\n/**\n * Construct an `ExecuteInstruction` for a transfer hook program, without the\n * additional accounts\n *\n * @param programId             The program ID of the transfer hook program\n * @param source                The source account\n * @param mint                  The mint account\n * @param destination           The destination account\n * @param owner                 Owner of the source account\n * @param validateStatePubkey   The validate state pubkey\n * @param amount                The amount of tokens to transfer\n * @returns Instruction to add to a transaction\n */\nexport function createExecuteInstruction(programId, source, mint, destination, owner, validateStatePubkey, amount) {\n    const keys = [source, mint, destination, owner, validateStatePubkey].map(pubkey => ({\n        pubkey,\n        isSigner: false,\n        isWritable: false,\n    }));\n    const data = Buffer.alloc(16);\n    data.set(Buffer.from([105, 37, 101, 197, 75, 251, 102, 26]), 0); // `ExecuteInstruction` discriminator\n    data.writeBigUInt64LE(BigInt(amount), 8);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Adds all the extra accounts needed for a transfer hook to an instruction.\n *\n * Note this will modify the instruction passed in.\n *\n * @param connection            Connection to use\n * @param instruction           The instruction to add accounts to\n * @param programId             Transfer hook program ID\n * @param source                The source account\n * @param mint                  The mint account\n * @param destination           The destination account\n * @param owner                 Owner of the source account\n * @param amount                The amount of tokens to transfer\n * @param commitment            Commitment to use\n */\nexport async function addExtraAccountMetasForExecute(connection, instruction, programId, source, mint, destination, owner, amount, commitment) {\n    const validateStatePubkey = getExtraAccountMetaAddress(mint, programId);\n    const validateStateAccount = await connection.getAccountInfo(validateStatePubkey, commitment);\n    if (validateStateAccount == null) {\n        return instruction;\n    }\n    const validateStateData = getExtraAccountMetas(validateStateAccount);\n    // Check to make sure the provided keys are in the instruction\n    if (![source, mint, destination, owner].every(key => instruction.keys.some(meta => meta.pubkey.equals(key)))) {\n        throw new Error('Missing required account in instruction');\n    }\n    const executeInstruction = createExecuteInstruction(programId, source, mint, destination, owner, validateStatePubkey, BigInt(amount));\n    for (const extraAccountMeta of validateStateData) {\n        executeInstruction.keys.push(deEscalateAccountMeta(await resolveExtraAccountMeta(connection, extraAccountMeta, executeInstruction.keys, executeInstruction.data, executeInstruction.programId), executeInstruction.keys));\n    }\n    // Add only the extra accounts resolved from the validation state\n    instruction.keys.push(...executeInstruction.keys.slice(5));\n    // Add the transfer hook program ID and the validation state account\n    instruction.keys.push({ pubkey: programId, isSigner: false, isWritable: false });\n    instruction.keys.push({ pubkey: validateStatePubkey, isSigner: false, isWritable: false });\n}\n/**\n * Construct an transferChecked instruction with extra accounts for transfer hook\n *\n * @param connection            Connection to use\n * @param source                Source account\n * @param mint                  Mint to update\n * @param destination           Destination account\n * @param owner                 Owner of the source account\n * @param amount                The amount of tokens to transfer\n * @param decimals              Number of decimals in transfer amount\n * @param multiSigners          The signer account(s) for a multisig\n * @param commitment            Commitment to use\n * @param programId             SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport async function createTransferCheckedWithTransferHookInstruction(connection, source, mint, destination, owner, amount, decimals, multiSigners = [], commitment, programId = TOKEN_PROGRAM_ID) {\n    const instruction = createTransferCheckedInstruction(source, mint, destination, owner, amount, decimals, multiSigners, programId);\n    const mintInfo = await getMint(connection, mint, commitment, programId);\n    const transferHook = getTransferHook(mintInfo);\n    if (transferHook) {\n        await addExtraAccountMetasForExecute(connection, instruction, transferHook.programId, source, mint, destination, owner, amount, commitment);\n    }\n    return instruction;\n}\n/**\n * Construct an transferChecked instruction with extra accounts for transfer hook\n *\n * @param connection            Connection to use\n * @param source                Source account\n * @param mint                  Mint to update\n * @param destination           Destination account\n * @param owner                 Owner of the source account\n * @param amount                The amount of tokens to transfer\n * @param decimals              Number of decimals in transfer amount\n * @param fee                   The calculated fee for the transfer fee extension\n * @param multiSigners          The signer account(s) for a multisig\n * @param commitment            Commitment to use\n * @param programId             SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport async function createTransferCheckedWithFeeAndTransferHookInstruction(connection, source, mint, destination, owner, amount, decimals, fee, multiSigners = [], commitment, programId = TOKEN_PROGRAM_ID) {\n    const instruction = createTransferCheckedWithFeeInstruction(source, mint, destination, owner, amount, decimals, fee, multiSigners, programId);\n    const mintInfo = await getMint(connection, mint, commitment, programId);\n    const transferHook = getTransferHook(mintInfo);\n    if (transferHook) {\n        await addExtraAccountMetasForExecute(connection, instruction, transferHook.programId, source, mint, destination, owner, amount, commitment);\n    }\n    return instruction;\n}\n//# sourceMappingURL=instructions.js.map","import { ACCOUNT_SIZE } from '../state/account.js';\nimport { MINT_SIZE, unpackMint } from '../state/mint.js';\nimport { MULTISIG_SIZE } from '../state/multisig.js';\nimport { ACCOUNT_TYPE_SIZE } from './accountType.js';\nimport { CPI_GUARD_SIZE } from './cpiGuard/index.js';\nimport { DEFAULT_ACCOUNT_STATE_SIZE } from './defaultAccountState/index.js';\nimport { TOKEN_GROUP_SIZE, TOKEN_GROUP_MEMBER_SIZE } from './tokenGroup/index.js';\nimport { GROUP_MEMBER_POINTER_SIZE } from './groupMemberPointer/state.js';\nimport { GROUP_POINTER_SIZE } from './groupPointer/state.js';\nimport { IMMUTABLE_OWNER_SIZE } from './immutableOwner.js';\nimport { INTEREST_BEARING_MINT_CONFIG_STATE_SIZE } from './interestBearingMint/state.js';\nimport { MEMO_TRANSFER_SIZE } from './memoTransfer/index.js';\nimport { METADATA_POINTER_SIZE } from './metadataPointer/state.js';\nimport { MINT_CLOSE_AUTHORITY_SIZE } from './mintCloseAuthority.js';\nimport { NON_TRANSFERABLE_SIZE, NON_TRANSFERABLE_ACCOUNT_SIZE } from './nonTransferable.js';\nimport { PERMANENT_DELEGATE_SIZE } from './permanentDelegate.js';\nimport { TRANSFER_FEE_AMOUNT_SIZE, TRANSFER_FEE_CONFIG_SIZE } from './transferFee/index.js';\nimport { TRANSFER_HOOK_ACCOUNT_SIZE, TRANSFER_HOOK_SIZE } from './transferHook/index.js';\nimport { TOKEN_2022_PROGRAM_ID } from '../constants.js';\n// Sequence from https://github.com/solana-labs/solana-program-library/blob/master/token/program-2022/src/extension/mod.rs#L903\nexport var ExtensionType;\n(function (ExtensionType) {\n    ExtensionType[ExtensionType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    ExtensionType[ExtensionType[\"TransferFeeConfig\"] = 1] = \"TransferFeeConfig\";\n    ExtensionType[ExtensionType[\"TransferFeeAmount\"] = 2] = \"TransferFeeAmount\";\n    ExtensionType[ExtensionType[\"MintCloseAuthority\"] = 3] = \"MintCloseAuthority\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferMint\"] = 4] = \"ConfidentialTransferMint\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferAccount\"] = 5] = \"ConfidentialTransferAccount\";\n    ExtensionType[ExtensionType[\"DefaultAccountState\"] = 6] = \"DefaultAccountState\";\n    ExtensionType[ExtensionType[\"ImmutableOwner\"] = 7] = \"ImmutableOwner\";\n    ExtensionType[ExtensionType[\"MemoTransfer\"] = 8] = \"MemoTransfer\";\n    ExtensionType[ExtensionType[\"NonTransferable\"] = 9] = \"NonTransferable\";\n    ExtensionType[ExtensionType[\"InterestBearingConfig\"] = 10] = \"InterestBearingConfig\";\n    ExtensionType[ExtensionType[\"CpiGuard\"] = 11] = \"CpiGuard\";\n    ExtensionType[ExtensionType[\"PermanentDelegate\"] = 12] = \"PermanentDelegate\";\n    ExtensionType[ExtensionType[\"NonTransferableAccount\"] = 13] = \"NonTransferableAccount\";\n    ExtensionType[ExtensionType[\"TransferHook\"] = 14] = \"TransferHook\";\n    ExtensionType[ExtensionType[\"TransferHookAccount\"] = 15] = \"TransferHookAccount\";\n    // ConfidentialTransferFee, // Not implemented yet\n    // ConfidentialTransferFeeAmount, // Not implemented yet\n    ExtensionType[ExtensionType[\"MetadataPointer\"] = 18] = \"MetadataPointer\";\n    ExtensionType[ExtensionType[\"TokenMetadata\"] = 19] = \"TokenMetadata\";\n    ExtensionType[ExtensionType[\"GroupPointer\"] = 20] = \"GroupPointer\";\n    ExtensionType[ExtensionType[\"TokenGroup\"] = 21] = \"TokenGroup\";\n    ExtensionType[ExtensionType[\"GroupMemberPointer\"] = 22] = \"GroupMemberPointer\";\n    ExtensionType[ExtensionType[\"TokenGroupMember\"] = 23] = \"TokenGroupMember\";\n})(ExtensionType || (ExtensionType = {}));\nexport const TYPE_SIZE = 2;\nexport const LENGTH_SIZE = 2;\nfunction addTypeAndLengthToLen(len) {\n    return len + TYPE_SIZE + LENGTH_SIZE;\n}\nfunction isVariableLengthExtension(e) {\n    switch (e) {\n        case ExtensionType.TokenMetadata:\n            return true;\n        default:\n            return false;\n    }\n}\n// NOTE: All of these should eventually use their type's Span instead of these\n// constants.  This is provided for at least creation to work.\nexport function getTypeLen(e) {\n    switch (e) {\n        case ExtensionType.Uninitialized:\n            return 0;\n        case ExtensionType.TransferFeeConfig:\n            return TRANSFER_FEE_CONFIG_SIZE;\n        case ExtensionType.TransferFeeAmount:\n            return TRANSFER_FEE_AMOUNT_SIZE;\n        case ExtensionType.MintCloseAuthority:\n            return MINT_CLOSE_AUTHORITY_SIZE;\n        case ExtensionType.ConfidentialTransferMint:\n            return 65;\n        case ExtensionType.ConfidentialTransferAccount:\n            return 295;\n        case ExtensionType.CpiGuard:\n            return CPI_GUARD_SIZE;\n        case ExtensionType.DefaultAccountState:\n            return DEFAULT_ACCOUNT_STATE_SIZE;\n        case ExtensionType.ImmutableOwner:\n            return IMMUTABLE_OWNER_SIZE;\n        case ExtensionType.MemoTransfer:\n            return MEMO_TRANSFER_SIZE;\n        case ExtensionType.MetadataPointer:\n            return METADATA_POINTER_SIZE;\n        case ExtensionType.NonTransferable:\n            return NON_TRANSFERABLE_SIZE;\n        case ExtensionType.InterestBearingConfig:\n            return INTEREST_BEARING_MINT_CONFIG_STATE_SIZE;\n        case ExtensionType.PermanentDelegate:\n            return PERMANENT_DELEGATE_SIZE;\n        case ExtensionType.NonTransferableAccount:\n            return NON_TRANSFERABLE_ACCOUNT_SIZE;\n        case ExtensionType.TransferHook:\n            return TRANSFER_HOOK_SIZE;\n        case ExtensionType.TransferHookAccount:\n            return TRANSFER_HOOK_ACCOUNT_SIZE;\n        case ExtensionType.GroupPointer:\n            return GROUP_POINTER_SIZE;\n        case ExtensionType.GroupMemberPointer:\n            return GROUP_MEMBER_POINTER_SIZE;\n        case ExtensionType.TokenGroup:\n            return TOKEN_GROUP_SIZE;\n        case ExtensionType.TokenGroupMember:\n            return TOKEN_GROUP_MEMBER_SIZE;\n        case ExtensionType.TokenMetadata:\n            throw Error(`Cannot get type length for variable extension type: ${e}`);\n        default:\n            throw Error(`Unknown extension type: ${e}`);\n    }\n}\nexport function isMintExtension(e) {\n    switch (e) {\n        case ExtensionType.TransferFeeConfig:\n        case ExtensionType.MintCloseAuthority:\n        case ExtensionType.ConfidentialTransferMint:\n        case ExtensionType.DefaultAccountState:\n        case ExtensionType.NonTransferable:\n        case ExtensionType.InterestBearingConfig:\n        case ExtensionType.PermanentDelegate:\n        case ExtensionType.TransferHook:\n        case ExtensionType.MetadataPointer:\n        case ExtensionType.TokenMetadata:\n        case ExtensionType.GroupPointer:\n        case ExtensionType.GroupMemberPointer:\n        case ExtensionType.TokenGroup:\n        case ExtensionType.TokenGroupMember:\n            return true;\n        case ExtensionType.Uninitialized:\n        case ExtensionType.TransferFeeAmount:\n        case ExtensionType.ConfidentialTransferAccount:\n        case ExtensionType.ImmutableOwner:\n        case ExtensionType.MemoTransfer:\n        case ExtensionType.CpiGuard:\n        case ExtensionType.NonTransferableAccount:\n        case ExtensionType.TransferHookAccount:\n            return false;\n        default:\n            throw Error(`Unknown extension type: ${e}`);\n    }\n}\nexport function isAccountExtension(e) {\n    switch (e) {\n        case ExtensionType.TransferFeeAmount:\n        case ExtensionType.ConfidentialTransferAccount:\n        case ExtensionType.ImmutableOwner:\n        case ExtensionType.MemoTransfer:\n        case ExtensionType.CpiGuard:\n        case ExtensionType.NonTransferableAccount:\n        case ExtensionType.TransferHookAccount:\n            return true;\n        case ExtensionType.Uninitialized:\n        case ExtensionType.TransferFeeConfig:\n        case ExtensionType.MintCloseAuthority:\n        case ExtensionType.ConfidentialTransferMint:\n        case ExtensionType.DefaultAccountState:\n        case ExtensionType.NonTransferable:\n        case ExtensionType.InterestBearingConfig:\n        case ExtensionType.PermanentDelegate:\n        case ExtensionType.TransferHook:\n        case ExtensionType.MetadataPointer:\n        case ExtensionType.TokenMetadata:\n        case ExtensionType.GroupPointer:\n        case ExtensionType.GroupMemberPointer:\n        case ExtensionType.TokenGroup:\n        case ExtensionType.TokenGroupMember:\n            return false;\n        default:\n            throw Error(`Unknown extension type: ${e}`);\n    }\n}\nexport function getAccountTypeOfMintType(e) {\n    switch (e) {\n        case ExtensionType.TransferFeeConfig:\n            return ExtensionType.TransferFeeAmount;\n        case ExtensionType.ConfidentialTransferMint:\n            return ExtensionType.ConfidentialTransferAccount;\n        case ExtensionType.NonTransferable:\n            return ExtensionType.NonTransferableAccount;\n        case ExtensionType.TransferHook:\n            return ExtensionType.TransferHookAccount;\n        case ExtensionType.TransferFeeAmount:\n        case ExtensionType.ConfidentialTransferAccount:\n        case ExtensionType.CpiGuard:\n        case ExtensionType.DefaultAccountState:\n        case ExtensionType.ImmutableOwner:\n        case ExtensionType.MemoTransfer:\n        case ExtensionType.MintCloseAuthority:\n        case ExtensionType.MetadataPointer:\n        case ExtensionType.TokenMetadata:\n        case ExtensionType.Uninitialized:\n        case ExtensionType.InterestBearingConfig:\n        case ExtensionType.PermanentDelegate:\n        case ExtensionType.NonTransferableAccount:\n        case ExtensionType.TransferHookAccount:\n        case ExtensionType.GroupPointer:\n        case ExtensionType.GroupMemberPointer:\n        case ExtensionType.TokenGroup:\n        case ExtensionType.TokenGroupMember:\n            return ExtensionType.Uninitialized;\n    }\n}\nfunction getLen(extensionTypes, baseSize, variableLengthExtensions = {}) {\n    if (extensionTypes.length === 0 && Object.keys(variableLengthExtensions).length === 0) {\n        return baseSize;\n    }\n    else {\n        const accountLength = ACCOUNT_SIZE +\n            ACCOUNT_TYPE_SIZE +\n            extensionTypes\n                .filter((element, i) => i === extensionTypes.indexOf(element))\n                .map(element => addTypeAndLengthToLen(getTypeLen(element)))\n                .reduce((a, b) => a + b, 0) +\n            Object.entries(variableLengthExtensions)\n                .map(([extension, len]) => {\n                if (!isVariableLengthExtension(Number(extension))) {\n                    throw Error(`Extension ${extension} is not variable length`);\n                }\n                return addTypeAndLengthToLen(len);\n            })\n                .reduce((a, b) => a + b, 0);\n        if (accountLength === MULTISIG_SIZE) {\n            return accountLength + TYPE_SIZE;\n        }\n        else {\n            return accountLength;\n        }\n    }\n}\nexport function getMintLen(extensionTypes, variableLengthExtensions = {}) {\n    return getLen(extensionTypes, MINT_SIZE, variableLengthExtensions);\n}\nexport function getAccountLen(extensionTypes) {\n    // There are currently no variable length extensions for accounts\n    return getLen(extensionTypes, ACCOUNT_SIZE);\n}\nexport function getExtensionData(extension, tlvData) {\n    let extensionTypeIndex = 0;\n    while (addTypeAndLengthToLen(extensionTypeIndex) <= tlvData.length) {\n        const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n        const entryLength = tlvData.readUInt16LE(extensionTypeIndex + TYPE_SIZE);\n        const typeIndex = addTypeAndLengthToLen(extensionTypeIndex);\n        if (entryType == extension) {\n            return tlvData.slice(typeIndex, typeIndex + entryLength);\n        }\n        extensionTypeIndex = typeIndex + entryLength;\n    }\n    return null;\n}\nexport function getExtensionTypes(tlvData) {\n    const extensionTypes = [];\n    let extensionTypeIndex = 0;\n    while (extensionTypeIndex < tlvData.length) {\n        const entryType = tlvData.readUInt16LE(extensionTypeIndex);\n        extensionTypes.push(entryType);\n        const entryLength = tlvData.readUInt16LE(extensionTypeIndex + TYPE_SIZE);\n        extensionTypeIndex += addTypeAndLengthToLen(entryLength);\n    }\n    return extensionTypes;\n}\nexport function getAccountLenForMint(mint) {\n    const extensionTypes = getExtensionTypes(mint.tlvData);\n    const accountExtensions = extensionTypes.map(getAccountTypeOfMintType);\n    return getAccountLen(accountExtensions);\n}\nexport function getNewAccountLenForExtensionLen(info, address, extensionType, extensionLen, programId = TOKEN_2022_PROGRAM_ID) {\n    const mint = unpackMint(address, info, programId);\n    const extensionData = getExtensionData(extensionType, mint.tlvData);\n    const currentExtensionLen = extensionData ? addTypeAndLengthToLen(extensionData.length) : 0;\n    const newExtensionLen = addTypeAndLengthToLen(extensionLen);\n    return info.data.length + newExtensionLen - currentExtensionLen;\n}\n//# sourceMappingURL=extensionType.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const initializeAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct an InitializeAccount instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     Owner of the new account\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeAccountInstruction(account, mint, owner, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeAccountInstructionData.span);\n    initializeAccountInstructionData.encode({ instruction: TokenInstruction.InitializeAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, owner, rent }, data, } = decodeInitializeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !owner || !rent)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeAccountInstructionUnchecked({ programId, keys: [account, mint, owner, rent], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            owner,\n            rent,\n        },\n        data: initializeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeAccount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\nimport { COptionPublicKeyLayout } from '../serialization.js';\n/** TODO: docs */\nexport const initializeMint2InstructionData = struct([\n    u8('instruction'),\n    u8('decimals'),\n    publicKey('mintAuthority'),\n    new COptionPublicKeyLayout('freezeAuthority'),\n]);\n/**\n * Construct an InitializeMint2 instruction\n *\n * @param mint            Token mint account\n * @param decimals        Number of decimals in token account amounts\n * @param mintAuthority   Minting authority\n * @param freezeAuthority Optional authority that can freeze token accounts\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeMint2Instruction(mint, decimals, mintAuthority, freezeAuthority, programId = TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeMint2InstructionData.span);\n    initializeMint2InstructionData.encode({\n        instruction: TokenInstruction.InitializeMint2,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMint2 instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeMint2Instruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMint2InstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializeMint2InstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeMint2)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMint2 instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeMint2InstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, decimals, mintAuthority, freezeAuthority } = initializeMint2InstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            decimals,\n            mintAuthority,\n            freezeAuthority,\n        },\n    };\n}\n//# sourceMappingURL=initializeMint2.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { PublicKey, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const initializeMultisigInstructionData = struct([\n    u8('instruction'),\n    u8('m'),\n]);\n/**\n * Construct an InitializeMultisig instruction\n *\n * @param account   Multisig account\n * @param signers   Full set of signers\n * @param m         Number of required signatures\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeMultisigInstruction(account, signers, m, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    for (const signer of signers) {\n        keys.push({\n            pubkey: signer instanceof PublicKey ? signer : signer.publicKey,\n            isSigner: false,\n            isWritable: false,\n        });\n    }\n    const data = Buffer.alloc(initializeMultisigInstructionData.span);\n    initializeMultisigInstructionData.encode({\n        instruction: TokenInstruction.InitializeMultisig,\n        m,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMultisig instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeMultisigInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMultisigInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, rent, signers }, data, } = decodeInitializeMultisigInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeMultisig)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !rent || !signers.length)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            rent,\n            signers,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMultisig instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeMultisigInstructionUnchecked({ programId, keys: [account, rent, ...signers], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            rent,\n            signers,\n        },\n        data: initializeMultisigInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeMultisig.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { SystemProgram, TransactionInstruction } from '@solana/web3.js';\nimport { NATIVE_MINT_2022, programSupportsExtensions, TOKEN_2022_PROGRAM_ID } from '../constants.js';\nimport { TokenUnsupportedInstructionError } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const createNativeMintInstructionData = struct([u8('instruction')]);\n/**\n * Construct a CreateNativeMint instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     Owner of the new account\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createCreateNativeMintInstruction(payer, nativeMintId = NATIVE_MINT_2022, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: nativeMintId, isSigner: false, isWritable: true },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(createNativeMintInstructionData.span);\n    createNativeMintInstructionData.encode({ instruction: TokenInstruction.CreateNativeMint }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=createNativeMint.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const syncNativeInstructionData = struct([u8('instruction')]);\n/**\n * Construct a SyncNative instruction\n *\n * @param account   Native account to sync lamports from\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createSyncNativeInstruction(account, programId = TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: account, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(syncNativeInstructionData.span);\n    syncNativeInstructionData.encode({ instruction: TokenInstruction.SyncNative }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a SyncNative instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeSyncNativeInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== syncNativeInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account }, data, } = decodeSyncNativeInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.SyncNative)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n        },\n        data,\n    };\n}\n/**\n * Decode a SyncNative instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeSyncNativeInstructionUnchecked({ programId, keys: [account], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n        },\n        data: syncNativeInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=syncNative.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const freezeAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct a FreezeAccount instruction\n *\n * @param account      Account to freeze\n * @param mint         Mint account\n * @param authority    Mint freeze authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createFreezeAccountInstruction(account, mint, authority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(freezeAccountInstructionData.span);\n    freezeAccountInstructionData.encode({ instruction: TokenInstruction.FreezeAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a FreezeAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeFreezeAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== freezeAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, authority, multiSigners }, data, } = decodeFreezeAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.FreezeAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a FreezeAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeFreezeAccountInstructionUnchecked({ programId, keys: [account, mint, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data: freezeAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=freezeAccount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const mintToInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct a MintTo instruction\n *\n * @param mint         Public key of the mint\n * @param destination  Address of the token account to mint to\n * @param authority    The mint authority\n * @param amount       Amount to mint\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createMintToInstruction(mint, destination, authority, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(mintToInstructionData.span);\n    mintToInstructionData.encode({\n        instruction: TokenInstruction.MintTo,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a MintTo instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeMintToInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== mintToInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, multiSigners }, data, } = decodeMintToInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.MintTo)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint || !destination || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a MintTo instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeMintToInstructionUnchecked({ programId, keys: [mint, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: mintToInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=mintTo.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const mintToCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals'),\n]);\n/**\n * Construct a MintToChecked instruction\n *\n * @param mint         Public key of the mint\n * @param destination  Address of the token account to mint to\n * @param authority    The mint authority\n * @param amount       Amount to mint\n * @param decimals     Number of decimals in amount to mint\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createMintToCheckedInstruction(mint, destination, authority, amount, decimals, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(mintToCheckedInstructionData.span);\n    mintToCheckedInstructionData.encode({\n        instruction: TokenInstruction.MintToChecked,\n        amount: BigInt(amount),\n        decimals,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a MintToChecked instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeMintToCheckedInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== mintToCheckedInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, destination, authority, multiSigners }, data, } = decodeMintToCheckedInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.MintToChecked)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint || !destination || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a MintToChecked instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeMintToCheckedInstructionUnchecked({ programId, keys: [mint, destination, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            mint,\n            destination,\n            authority,\n            multiSigners,\n        },\n        data: mintToCheckedInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=mintToChecked.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const revokeInstructionData = struct([u8('instruction')]);\n/**\n * Construct a Revoke instruction\n *\n * @param account      Address of the token account\n * @param owner        Owner of the account\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createRevokeInstruction(account, owner, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([{ pubkey: account, isSigner: false, isWritable: true }], owner, multiSigners);\n    const data = Buffer.alloc(revokeInstructionData.span);\n    revokeInstructionData.encode({ instruction: TokenInstruction.Revoke }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Revoke instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeRevokeInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== revokeInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, owner, multiSigners }, data, } = decodeRevokeInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Revoke)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Revoke instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeRevokeInstructionUnchecked({ programId, keys: [account, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            owner,\n            multiSigners,\n        },\n        data: revokeInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=revoke.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\nimport { COptionPublicKeyLayout } from '../serialization.js';\n/** Authority types defined by the program */\nexport var AuthorityType;\n(function (AuthorityType) {\n    AuthorityType[AuthorityType[\"MintTokens\"] = 0] = \"MintTokens\";\n    AuthorityType[AuthorityType[\"FreezeAccount\"] = 1] = \"FreezeAccount\";\n    AuthorityType[AuthorityType[\"AccountOwner\"] = 2] = \"AccountOwner\";\n    AuthorityType[AuthorityType[\"CloseAccount\"] = 3] = \"CloseAccount\";\n    AuthorityType[AuthorityType[\"TransferFeeConfig\"] = 4] = \"TransferFeeConfig\";\n    AuthorityType[AuthorityType[\"WithheldWithdraw\"] = 5] = \"WithheldWithdraw\";\n    AuthorityType[AuthorityType[\"CloseMint\"] = 6] = \"CloseMint\";\n    AuthorityType[AuthorityType[\"InterestRate\"] = 7] = \"InterestRate\";\n    AuthorityType[AuthorityType[\"PermanentDelegate\"] = 8] = \"PermanentDelegate\";\n    AuthorityType[AuthorityType[\"ConfidentialTransferMint\"] = 9] = \"ConfidentialTransferMint\";\n    AuthorityType[AuthorityType[\"TransferHookProgramId\"] = 10] = \"TransferHookProgramId\";\n    AuthorityType[AuthorityType[\"ConfidentialTransferFeeConfig\"] = 11] = \"ConfidentialTransferFeeConfig\";\n    AuthorityType[AuthorityType[\"MetadataPointer\"] = 12] = \"MetadataPointer\";\n    AuthorityType[AuthorityType[\"GroupPointer\"] = 13] = \"GroupPointer\";\n    AuthorityType[AuthorityType[\"GroupMemberPointer\"] = 14] = \"GroupMemberPointer\";\n})(AuthorityType || (AuthorityType = {}));\n/** TODO: docs */\nexport const setAuthorityInstructionData = struct([\n    u8('instruction'),\n    u8('authorityType'),\n    new COptionPublicKeyLayout('newAuthority'),\n]);\n/**\n * Construct a SetAuthority instruction\n *\n * @param account          Address of the token account\n * @param currentAuthority Current authority of the specified type\n * @param authorityType    Type of authority to set\n * @param newAuthority     New authority of the account\n * @param multiSigners     Signing accounts if `currentAuthority` is a multisig\n * @param programId        SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createSetAuthorityInstruction(account, currentAuthority, authorityType, newAuthority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([{ pubkey: account, isSigner: false, isWritable: true }], currentAuthority, multiSigners);\n    const data = Buffer.alloc(setAuthorityInstructionData.span);\n    setAuthorityInstructionData.encode({\n        instruction: TokenInstruction.SetAuthority,\n        authorityType,\n        newAuthority,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a SetAuthority instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeSetAuthorityInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== setAuthorityInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, currentAuthority, multiSigners }, data, } = decodeSetAuthorityInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.SetAuthority)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !currentAuthority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            currentAuthority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a SetAuthority instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeSetAuthorityInstructionUnchecked({ programId, keys: [account, currentAuthority, ...multiSigners], data, }) {\n    const { instruction, authorityType, newAuthority } = setAuthorityInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            account,\n            currentAuthority,\n            multiSigners,\n        },\n        data: {\n            instruction,\n            authorityType,\n            newAuthority,\n        },\n    };\n}\n//# sourceMappingURL=setAuthority.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const thawAccountInstructionData = struct([u8('instruction')]);\n/**\n * Construct a ThawAccount instruction\n *\n * @param account      Account to thaw\n * @param mint         Mint account\n * @param authority    Mint freeze authority\n * @param multiSigners Signing accounts if `authority` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createThawAccountInstruction(account, mint, authority, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ], authority, multiSigners);\n    const data = Buffer.alloc(thawAccountInstructionData.span);\n    thawAccountInstructionData.encode({ instruction: TokenInstruction.ThawAccount }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a ThawAccount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeThawAccountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== thawAccountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, authority, multiSigners }, data, } = decodeThawAccountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.ThawAccount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !authority)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a ThawAccount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeThawAccountInstructionUnchecked({ programId, keys: [account, mint, authority, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            authority,\n            multiSigners,\n        },\n        data: thawAccountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=thawAccount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { u64 } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { addSigners } from './internal.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const transferInstructionData = struct([u8('instruction'), u64('amount')]);\n/**\n * Construct a Transfer instruction\n *\n * @param source       Source account\n * @param destination  Destination account\n * @param owner        Owner of the source account\n * @param amount       Number of tokens to transfer\n * @param multiSigners Signing accounts if `owner` is a multisig\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createTransferInstruction(source, destination, owner, amount, multiSigners = [], programId = TOKEN_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true },\n    ], owner, multiSigners);\n    const data = Buffer.alloc(transferInstructionData.span);\n    transferInstructionData.encode({\n        instruction: TokenInstruction.Transfer,\n        amount: BigInt(amount),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a Transfer instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeTransferInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== transferInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { source, destination, owner, multiSigners }, data, } = decodeTransferInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.Transfer)\n        throw new TokenInvalidInstructionTypeError();\n    if (!source || !destination || !owner)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            source,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data,\n    };\n}\n/**\n * Decode a Transfer instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeTransferInstructionUnchecked({ programId, keys: [source, destination, owner, ...multiSigners], data, }) {\n    return {\n        programId,\n        keys: {\n            source,\n            destination,\n            owner,\n            multiSigners,\n        },\n        data: transferInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=transfer.js.map","import { blob, struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\n/**\n * Construct a UiAmountToAmount instruction\n *\n * @param mint         Public key of the mint\n * @param amount       UiAmount of tokens to be converted to Amount\n * @param programId    SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createUiAmountToAmountInstruction(mint, amount, programId = TOKEN_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: false }];\n    const buf = Buffer.from(amount, 'utf8');\n    const uiAmountToAmountInstructionData = struct([\n        u8('instruction'),\n        blob(buf.length, 'amount'),\n    ]);\n    const data = Buffer.alloc(uiAmountToAmountInstructionData.span);\n    uiAmountToAmountInstructionData.encode({\n        instruction: TokenInstruction.UiAmountToAmount,\n        amount: buf,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode a UiAmountToAmount instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeUiAmountToAmountInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    const uiAmountToAmountInstructionData = struct([\n        u8('instruction'),\n        blob(instruction.data.length - 1, 'amount'),\n    ]);\n    if (instruction.data.length !== uiAmountToAmountInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeUiAmountToAmountInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.UiAmountToAmount)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode a UiAmountToAmount instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeUiAmountToAmountInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const uiAmountToAmountInstructionData = struct([\n        u8('instruction'),\n        blob(data.length - 1, 'amount'),\n    ]);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: uiAmountToAmountInstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=uiAmountToAmount.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_2022_PROGRAM_ID, programSupportsExtensions } from '../../constants.js';\nimport { TokenUnsupportedInstructionError } from '../../errors.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nimport { addSigners } from '../../instructions/internal.js';\nexport var GroupMemberPointerInstruction;\n(function (GroupMemberPointerInstruction) {\n    GroupMemberPointerInstruction[GroupMemberPointerInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    GroupMemberPointerInstruction[GroupMemberPointerInstruction[\"Update\"] = 1] = \"Update\";\n})(GroupMemberPointerInstruction || (GroupMemberPointerInstruction = {}));\nexport const initializeGroupMemberPointerData = struct([\n    // prettier-ignore\n    u8('instruction'),\n    u8('groupMemberPointerInstruction'),\n    publicKey('authority'),\n    publicKey('memberAddress'),\n]);\n/**\n * Construct an Initialize GroupMemberPointer instruction\n *\n * @param mint            Token mint account\n * @param authority       Optional Authority that can set the member address\n * @param memberAddress   Optional Account address that holds the member\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeGroupMemberPointerInstruction(mint, authority, memberAddress, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeGroupMemberPointerData.span);\n    initializeGroupMemberPointerData.encode({\n        instruction: TokenInstruction.GroupMemberPointerExtension,\n        groupMemberPointerInstruction: GroupMemberPointerInstruction.Initialize,\n        authority: authority ?? PublicKey.default,\n        memberAddress: memberAddress ?? PublicKey.default,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data: data });\n}\nexport const updateGroupMemberPointerData = struct([\n    // prettier-ignore\n    u8('instruction'),\n    u8('groupMemberPointerInstruction'),\n    publicKey('memberAddress'),\n]);\nexport function createUpdateGroupMemberPointerInstruction(mint, authority, memberAddress, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = addSigners([{ pubkey: mint, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(updateGroupMemberPointerData.span);\n    updateGroupMemberPointerData.encode({\n        instruction: TokenInstruction.GroupMemberPointerExtension,\n        groupMemberPointerInstruction: GroupMemberPointerInstruction.Update,\n        memberAddress: memberAddress ?? PublicKey.default,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data: data });\n}\n//# sourceMappingURL=instructions.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_2022_PROGRAM_ID, programSupportsExtensions } from '../../constants.js';\nimport { TokenUnsupportedInstructionError } from '../../errors.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nimport { addSigners } from '../../instructions/internal.js';\nexport var GroupPointerInstruction;\n(function (GroupPointerInstruction) {\n    GroupPointerInstruction[GroupPointerInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    GroupPointerInstruction[GroupPointerInstruction[\"Update\"] = 1] = \"Update\";\n})(GroupPointerInstruction || (GroupPointerInstruction = {}));\nexport const initializeGroupPointerData = struct([\n    // prettier-ignore\n    u8('instruction'),\n    u8('groupPointerInstruction'),\n    publicKey('authority'),\n    publicKey('groupAddress'),\n]);\n/**\n * Construct an Initialize GroupPointer instruction\n *\n * @param mint            Token mint account\n * @param authority       Optional Authority that can set the group address\n * @param groupAddress    Optional Account address that holds the group\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeGroupPointerInstruction(mint, authority, groupAddress, programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeGroupPointerData.span);\n    initializeGroupPointerData.encode({\n        instruction: TokenInstruction.GroupPointerExtension,\n        groupPointerInstruction: GroupPointerInstruction.Initialize,\n        authority: authority ?? PublicKey.default,\n        groupAddress: groupAddress ?? PublicKey.default,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data: data });\n}\nexport const updateGroupPointerData = struct([\n    // prettier-ignore\n    u8('instruction'),\n    u8('groupPointerInstruction'),\n    publicKey('groupAddress'),\n]);\nexport function createUpdateGroupPointerInstruction(mint, authority, groupAddress, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = addSigners([{ pubkey: mint, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(updateGroupPointerData.span);\n    updateGroupPointerData.encode({\n        instruction: TokenInstruction.GroupPointerExtension,\n        groupPointerInstruction: GroupPointerInstruction.Update,\n        groupAddress: groupAddress ?? PublicKey.default,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data: data });\n}\n//# sourceMappingURL=instructions.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\nimport { COptionPublicKeyLayout } from '../serialization.js';\n/** TODO: docs */\nexport const initializeMintInstructionData = struct([\n    u8('instruction'),\n    u8('decimals'),\n    publicKey('mintAuthority'),\n    new COptionPublicKeyLayout('freezeAuthority'),\n]);\n/**\n * Construct an InitializeMint instruction\n *\n * @param mint            Token mint account\n * @param decimals        Number of decimals in token account amounts\n * @param mintAuthority   Minting authority\n * @param freezeAuthority Optional authority that can freeze token accounts\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeMintInstruction(mint, decimals, mintAuthority, freezeAuthority, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeMintInstructionData.span);\n    initializeMintInstructionData.encode({\n        instruction: TokenInstruction.InitializeMint,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMint instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeMintInstruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMintInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint, rent }, data, } = decodeInitializeMintInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeMint)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint || !rent)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            mint,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMint instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeMintInstructionUnchecked({ programId, keys: [mint, rent], data, }) {\n    const { instruction, decimals, mintAuthority, freezeAuthority } = initializeMintInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n            rent,\n        },\n        data: {\n            instruction,\n            decimals,\n            mintAuthority,\n            freezeAuthority,\n        },\n    };\n}\n//# sourceMappingURL=initializeMint.js.map","import { s16, struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_2022_PROGRAM_ID } from '../../constants.js';\nimport { addSigners } from '../../instructions/internal.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nexport var InterestBearingMintInstruction;\n(function (InterestBearingMintInstruction) {\n    InterestBearingMintInstruction[InterestBearingMintInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    InterestBearingMintInstruction[InterestBearingMintInstruction[\"UpdateRate\"] = 1] = \"UpdateRate\";\n})(InterestBearingMintInstruction || (InterestBearingMintInstruction = {}));\nexport const interestBearingMintInitializeInstructionData = struct([\n    u8('instruction'),\n    u8('interestBearingMintInstruction'),\n    // TODO: Make this an optional public key\n    publicKey('rateAuthority'),\n    s16('rate'),\n]);\nexport const interestBearingMintUpdateRateInstructionData = struct([\n    u8('instruction'),\n    u8('interestBearingMintInstruction'),\n    s16('rate'),\n]);\n/**\n * Construct an InitializeInterestBearingMint instruction\n *\n * @param mint           Mint to initialize\n * @param rateAuthority  The public key for the account that can update the rate\n * @param rate           The initial interest rate\n * @param programId      SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeInterestBearingMintInstruction(mint, rateAuthority, rate, programId = TOKEN_2022_PROGRAM_ID) {\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(interestBearingMintInitializeInstructionData.span);\n    interestBearingMintInitializeInstructionData.encode({\n        instruction: TokenInstruction.InterestBearingMintExtension,\n        interestBearingMintInstruction: InterestBearingMintInstruction.Initialize,\n        rateAuthority,\n        rate,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Construct an UpdateRateInterestBearingMint instruction\n *\n * @param mint           Mint to initialize\n * @param rateAuthority  The public key for the account that can update the rate\n * @param rate           The updated interest rate\n * @param multiSigners   Signing accounts if `rateAuthority` is a multisig\n * @param programId      SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createUpdateRateInterestBearingMintInstruction(mint, rateAuthority, rate, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    const keys = addSigners([\n        { pubkey: mint, isSigner: false, isWritable: true },\n        { pubkey: rateAuthority, isSigner: !multiSigners.length, isWritable: false },\n    ], rateAuthority, multiSigners);\n    const data = Buffer.alloc(interestBearingMintUpdateRateInstructionData.span);\n    interestBearingMintUpdateRateInstructionData.encode({\n        instruction: TokenInstruction.InterestBearingMintExtension,\n        interestBearingMintInstruction: InterestBearingMintInstruction.UpdateRate,\n        rate,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=instructions.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_2022_PROGRAM_ID, programSupportsExtensions } from '../../constants.js';\nimport { TokenUnsupportedInstructionError } from '../../errors.js';\nimport { TokenInstruction } from '../../instructions/types.js';\nimport { addSigners } from '../../instructions/internal.js';\nexport var MetadataPointerInstruction;\n(function (MetadataPointerInstruction) {\n    MetadataPointerInstruction[MetadataPointerInstruction[\"Initialize\"] = 0] = \"Initialize\";\n    MetadataPointerInstruction[MetadataPointerInstruction[\"Update\"] = 1] = \"Update\";\n})(MetadataPointerInstruction || (MetadataPointerInstruction = {}));\nexport const initializeMetadataPointerData = struct([\n    // prettier-ignore\n    u8('instruction'),\n    u8('metadataPointerInstruction'),\n    publicKey('authority'),\n    publicKey('metadataAddress'),\n]);\n/**\n * Construct an Initialize MetadataPointer instruction\n *\n * @param mint            Token mint account\n * @param authority       Optional Authority that can set the metadata address\n * @param metadataAddress Optional Account address that holds the metadata\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeMetadataPointerInstruction(mint, authority, metadataAddress, programId) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeMetadataPointerData.span);\n    initializeMetadataPointerData.encode({\n        instruction: TokenInstruction.MetadataPointerExtension,\n        metadataPointerInstruction: MetadataPointerInstruction.Initialize,\n        authority: authority ?? PublicKey.default,\n        metadataAddress: metadataAddress ?? PublicKey.default,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data: data });\n}\nexport const updateMetadataPointerData = struct([\n    // prettier-ignore\n    u8('instruction'),\n    u8('metadataPointerInstruction'),\n    publicKey('metadataAddress'),\n]);\nexport function createUpdateMetadataPointerInstruction(mint, authority, metadataAddress, multiSigners = [], programId = TOKEN_2022_PROGRAM_ID) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = addSigners([{ pubkey: mint, isSigner: false, isWritable: true }], authority, multiSigners);\n    const data = Buffer.alloc(updateMetadataPointerData.span);\n    updateMetadataPointerData.encode({\n        instruction: TokenInstruction.MetadataPointerExtension,\n        metadataPointerInstruction: MetadataPointerInstruction.Update,\n        metadataAddress: metadataAddress ?? PublicKey.default,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data: data });\n}\n//# sourceMappingURL=instructions.js.map","// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\nvar SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611e3;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nvar SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nvar SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nvar SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nvar SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nvar SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nvar SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nvar SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nvar SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nvar SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\n\n// src/context.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    const commaSeparatedValues = value.map(encodeValue).join(\n      \"%2C%20\"\n      /* \", \" */\n    );\n    return \"%5B\" + commaSeparatedValues + /* \"]\" */\n    \"%5D\";\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no prototype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n  return btoa(searchParamsString);\n}\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: \"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.\",\n  [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: \"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: \"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: \"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].\",\n  [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: \"Invalid discriminated union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: \"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.\",\n  [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: \"Invalid literal union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: \"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: \"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].\",\n  [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: \"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.\",\n  [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: \"No random values implementation could be found.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]: \"The provided private key does not match the provided public key.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST]: \"Either the notification name must end in 'Notifications' or the API must supply a subscription creator function for the notification '$notificationName' to map between the notification name and the subscribe/unsubscribe method names.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]: \"Wallet account signers do not support signing multiple messages/transactions in a single operation\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: \"Cannot export a non-extractable key.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: \"Attempted to sign a transaction with an address that is not a signer for it\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]: \"Transaction has no expected signers therefore it cannot be encoded\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]: \"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: \"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nvar START_INDEX = \"i\";\nvar TYPE = \"t\";\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  if (messageFormatString.length === 0) {\n    return \"\";\n  }\n  let state;\n  function commitStateUpTo(endIndex) {\n    if (state[TYPE] === 2 /* Variable */) {\n      const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n      fragments.push(\n        variableName in context ? `${context[variableName]}` : `$${variableName}`\n      );\n    } else if (state[TYPE] === 1 /* Text */) {\n      fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n    }\n  }\n  const fragments = [];\n  messageFormatString.split(\"\").forEach((char, ii) => {\n    if (ii === 0) {\n      state = {\n        [START_INDEX]: 0,\n        [TYPE]: messageFormatString[0] === \"\\\\\" ? 0 /* EscapeSequence */ : messageFormatString[0] === \"$\" ? 2 /* Variable */ : 1 /* Text */\n      };\n      return;\n    }\n    let nextState;\n    switch (state[TYPE]) {\n      case 0 /* EscapeSequence */:\n        nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        break;\n      case 1 /* Text */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        }\n        break;\n      case 2 /* Variable */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        } else if (!char.match(/\\w/)) {\n          nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        }\n        break;\n    }\n    if (nextState) {\n      if (state !== nextState) {\n        commitStateUpTo(ii);\n      }\n      state = nextState;\n    }\n  });\n  commitStateUpTo();\n  return fragments.join(\"\");\n}\nfunction getErrorMessage(code, context = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== void 0) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  cause = this.cause;\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index,\n            ...rpcErrorContext !== void 0 ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: rpcErrorContext,\n            index\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index\n          };\n        }\n        return { index };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== void 0 ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: rpcErrorContext\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: rpcErrorContext.account_index\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError({ code, data, message }) {\n  let out;\n  if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n    const { err, ...preflightErrorContext } = data;\n    const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n    out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n      ...preflightErrorContext,\n      ...causeObject\n    });\n  } else {\n    let errorContext;\n    switch (code) {\n      case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n      case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n      case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n      case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n      case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n        errorContext = { __serverMessage: message };\n        break;\n      default:\n        if (typeof data === \"object\" && !Array.isArray(data)) {\n          errorContext = data;\n        }\n    }\n    out = new SolanaError(code, errorContext);\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\n\nexport { SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND, SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED, SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT, SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT, SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND, SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED, SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH, SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY, SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE, SOLANA_ERROR__ADDRESSES__MALFORMED_PDA, SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED, SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE, SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER, SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW, SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS, SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH, SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND, SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE, SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS, SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED, SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION, SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA, SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH, SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH, SOLANA_ERROR__INVALID_NONCE, SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE, SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE, SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING, SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR, SOLANA_ERROR__JSON_RPC__INVALID_PARAMS, SOLANA_ERROR__JSON_RPC__INVALID_REQUEST, SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND, SOLANA_ERROR__JSON_RPC__PARSE_ERROR, SOLANA_ERROR__JSON_RPC__SCAN_ERROR, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION, SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH, SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY, SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE, SOLANA_ERROR__MALFORMED_BIGINT_STRING, SOLANA_ERROR__MALFORMED_NUMBER_STRING, SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST, SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT, SOLANA_ERROR__RPC__INTEGER_OVERFLOW, SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR, SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN, SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS, SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER, SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS, SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING, SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED, SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP, SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE, SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED, SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED, SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED, SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS, SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION, SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN, SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT, SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION, SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING, SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES, SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME, SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND, SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE, SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING, SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE, SolanaError, getSolanaErrorFromInstructionError, getSolanaErrorFromJsonRpcError, getSolanaErrorFromTransactionError, isSolanaError, safeCaptureStackTrace };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES } from '@solana/errors';\n\n// src/add-codec-sentinel.ts\n\n// src/bytes.ts\nvar mergeBytes = (byteArrays) => {\n  const nonEmptyByteArrays = byteArrays.filter((arr) => arr.length);\n  if (nonEmptyByteArrays.length === 0) {\n    return byteArrays.length ? byteArrays[0] : new Uint8Array();\n  }\n  if (nonEmptyByteArrays.length === 1) {\n    return nonEmptyByteArrays[0];\n  }\n  const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  nonEmptyByteArrays.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\nvar padBytes = (bytes, length) => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\nvar fixBytes = (bytes, length) => padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\nfunction containsBytes(data, bytes, offset) {\n  const slice = offset === 0 && data.length === bytes.length ? data : data.slice(offset, offset + bytes.length);\n  if (slice.length !== bytes.length) return false;\n  return bytes.every((b, i) => b === slice[i]);\n}\nfunction getEncodedSize(value, encoder) {\n  return \"fixedSize\" in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\nfunction createEncoder(encoder) {\n  return Object.freeze({\n    ...encoder,\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, encoder));\n      encoder.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction createDecoder(decoder) {\n  return Object.freeze({\n    ...decoder,\n    decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0]\n  });\n}\nfunction createCodec(codec) {\n  return Object.freeze({\n    ...codec,\n    decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, codec));\n      codec.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction isFixedSize(codec) {\n  return \"fixedSize\" in codec && typeof codec.fixedSize === \"number\";\n}\nfunction assertIsFixedSize(codec) {\n  if (!isFixedSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n  }\n}\nfunction isVariableSize(codec) {\n  return !isFixedSize(codec);\n}\nfunction assertIsVariableSize(codec) {\n  if (!isVariableSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n  }\n}\nfunction combineCodec(encoder, decoder) {\n  if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n  }\n  if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n      decoderFixedSize: decoder.fixedSize,\n      encoderFixedSize: encoder.fixedSize\n    });\n  }\n  if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n      decoderMaxSize: decoder.maxSize,\n      encoderMaxSize: encoder.maxSize\n    });\n  }\n  return {\n    ...decoder,\n    ...encoder,\n    decode: decoder.decode,\n    encode: encoder.encode,\n    read: decoder.read,\n    write: encoder.write\n  };\n}\n\n// src/add-codec-sentinel.ts\nfunction addEncoderSentinel(encoder, sentinel) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    if (findSentinelIndex(encoderBytes, sentinel) >= 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, {\n        encodedBytes: encoderBytes,\n        hexEncodedBytes: hexBytes(encoderBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    bytes.set(encoderBytes, offset);\n    offset += encoderBytes.length;\n    bytes.set(sentinel, offset);\n    offset += sentinel.length;\n    return offset;\n  };\n  if (isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: encoder.fixedSize + sentinel.length, write });\n  }\n  return createEncoder({\n    ...encoder,\n    ...encoder.maxSize != null ? { maxSize: encoder.maxSize + sentinel.length } : {},\n    getSizeFromValue: (value) => encoder.getSizeFromValue(value) + sentinel.length,\n    write\n  });\n}\nfunction addDecoderSentinel(decoder, sentinel) {\n  const read = (bytes, offset) => {\n    const candidateBytes = offset === 0 ? bytes : bytes.slice(offset);\n    const sentinelIndex = findSentinelIndex(candidateBytes, sentinel);\n    if (sentinelIndex === -1) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, {\n        decodedBytes: candidateBytes,\n        hexDecodedBytes: hexBytes(candidateBytes),\n        hexSentinel: hexBytes(sentinel),\n        sentinel\n      });\n    }\n    const preSentinelBytes = candidateBytes.slice(0, sentinelIndex);\n    return [decoder.decode(preSentinelBytes), offset + preSentinelBytes.length + sentinel.length];\n  };\n  if (isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: decoder.fixedSize + sentinel.length, read });\n  }\n  return createDecoder({\n    ...decoder,\n    ...decoder.maxSize != null ? { maxSize: decoder.maxSize + sentinel.length } : {},\n    read\n  });\n}\nfunction addCodecSentinel(codec, sentinel) {\n  return combineCodec(addEncoderSentinel(codec, sentinel), addDecoderSentinel(codec, sentinel));\n}\nfunction findSentinelIndex(bytes, sentinel) {\n  return bytes.findIndex((byte, index, arr) => {\n    if (sentinel.length === 1) return byte === sentinel[0];\n    return containsBytes(arr, sentinel, index);\n  });\n}\nfunction hexBytes(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction assertByteArrayIsNotEmptyForCodec(codecDescription, bytes, offset = 0) {\n  if (bytes.length - offset <= 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n      codecDescription\n    });\n  }\n}\nfunction assertByteArrayHasEnoughBytesForCodec(codecDescription, expected, bytes, offset = 0) {\n  const bytesLength = bytes.length - offset;\n  if (bytesLength < expected) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n      bytesLength,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction assertByteArrayOffsetIsNotOutOfRange(codecDescription, offset, bytesLength) {\n  if (offset < 0 || offset > bytesLength) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n      bytesLength,\n      codecDescription,\n      offset\n    });\n  }\n}\n\n// src/add-codec-size-prefix.ts\nfunction addEncoderSizePrefix(encoder, prefix) {\n  const write = (value, bytes, offset) => {\n    const encoderBytes = encoder.encode(value);\n    offset = prefix.write(encoderBytes.length, bytes, offset);\n    bytes.set(encoderBytes, offset);\n    return offset + encoderBytes.length;\n  };\n  if (isFixedSize(prefix) && isFixedSize(encoder)) {\n    return createEncoder({ ...encoder, fixedSize: prefix.fixedSize + encoder.fixedSize, write });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const encoderMaxSize = isFixedSize(encoder) ? encoder.fixedSize : encoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && encoderMaxSize !== null ? prefixMaxSize + encoderMaxSize : null;\n  return createEncoder({\n    ...encoder,\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (value) => {\n      const encoderSize = getEncodedSize(value, encoder);\n      return getEncodedSize(encoderSize, prefix) + encoderSize;\n    },\n    write\n  });\n}\nfunction addDecoderSizePrefix(decoder, prefix) {\n  const read = (bytes, offset) => {\n    const [bigintSize, decoderOffset] = prefix.read(bytes, offset);\n    const size = Number(bigintSize);\n    offset = decoderOffset;\n    if (offset > 0 || bytes.length > size) {\n      bytes = bytes.slice(offset, offset + size);\n    }\n    assertByteArrayHasEnoughBytesForCodec(\"addDecoderSizePrefix\", size, bytes);\n    return [decoder.decode(bytes), offset + size];\n  };\n  if (isFixedSize(prefix) && isFixedSize(decoder)) {\n    return createDecoder({ ...decoder, fixedSize: prefix.fixedSize + decoder.fixedSize, read });\n  }\n  const prefixMaxSize = isFixedSize(prefix) ? prefix.fixedSize : prefix.maxSize ?? null;\n  const decoderMaxSize = isFixedSize(decoder) ? decoder.fixedSize : decoder.maxSize ?? null;\n  const maxSize = prefixMaxSize !== null && decoderMaxSize !== null ? prefixMaxSize + decoderMaxSize : null;\n  return createDecoder({ ...decoder, ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction addCodecSizePrefix(codec, prefix) {\n  return combineCodec(addEncoderSizePrefix(codec, prefix), addDecoderSizePrefix(codec, prefix));\n}\n\n// src/fix-codec-size.ts\nfunction fixEncoderSize(encoder, fixedBytes) {\n  return createEncoder({\n    fixedSize: fixedBytes,\n    write: (value, bytes, offset) => {\n      const variableByteArray = encoder.encode(value);\n      const fixedByteArray = variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n      bytes.set(fixedByteArray, offset);\n      return offset + fixedBytes;\n    }\n  });\n}\nfunction fixDecoderSize(decoder, fixedBytes) {\n  return createDecoder({\n    fixedSize: fixedBytes,\n    read: (bytes, offset) => {\n      assertByteArrayHasEnoughBytesForCodec(\"fixCodecSize\", fixedBytes, bytes, offset);\n      if (offset > 0 || bytes.length > fixedBytes) {\n        bytes = bytes.slice(offset, offset + fixedBytes);\n      }\n      if (isFixedSize(decoder)) {\n        bytes = fixBytes(bytes, decoder.fixedSize);\n      }\n      const [value] = decoder.read(bytes, 0);\n      return [value, offset + fixedBytes];\n    }\n  });\n}\nfunction fixCodecSize(codec, fixedBytes) {\n  return combineCodec(fixEncoderSize(codec, fixedBytes), fixDecoderSize(codec, fixedBytes));\n}\n\n// src/offset-codec.ts\nfunction offsetEncoder(encoder, config) {\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPreOffset, bytes.length);\n      const postOffset = encoder.write(value, bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPostOffset, bytes.length);\n      return newPostOffset;\n    }\n  });\n}\nfunction offsetDecoder(decoder, config) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPreOffset, bytes.length);\n      const [value, postOffset] = decoder.read(bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPostOffset, bytes.length);\n      return [value, newPostOffset];\n    }\n  });\n}\nfunction offsetCodec(codec, config) {\n  return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config));\n}\nfunction modulo(dividend, divisor) {\n  if (divisor === 0) return 0;\n  return (dividend % divisor + divisor) % divisor;\n}\nfunction resizeEncoder(encoder, resize) {\n  if (isFixedSize(encoder)) {\n    const fixedSize = resize(encoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeEncoder\"\n      });\n    }\n    return createEncoder({ ...encoder, fixedSize });\n  }\n  return createEncoder({\n    ...encoder,\n    getSizeFromValue: (value) => {\n      const newSize = resize(encoder.getSizeFromValue(value));\n      if (newSize < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n          bytesLength: newSize,\n          codecDescription: \"resizeEncoder\"\n        });\n      }\n      return newSize;\n    }\n  });\n}\nfunction resizeDecoder(decoder, resize) {\n  if (isFixedSize(decoder)) {\n    const fixedSize = resize(decoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeDecoder\"\n      });\n    }\n    return createDecoder({ ...decoder, fixedSize });\n  }\n  return decoder;\n}\nfunction resizeCodec(codec, resize) {\n  return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize));\n}\n\n// src/pad-codec.ts\nfunction padLeftEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftCodec(codec, offset) {\n  return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset));\n}\nfunction padRightCodec(codec, offset) {\n  return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset));\n}\n\n// src/reverse-codec.ts\nfunction copySourceToTargetInReverse(source, target_WILL_MUTATE, sourceOffset, sourceLength, targetOffset = 0) {\n  while (sourceOffset < --sourceLength) {\n    const leftValue = source[sourceOffset];\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceLength];\n    target_WILL_MUTATE[sourceLength + targetOffset] = leftValue;\n    sourceOffset++;\n  }\n  if (sourceOffset === sourceLength) {\n    target_WILL_MUTATE[sourceOffset + targetOffset] = source[sourceOffset];\n  }\n}\nfunction reverseEncoder(encoder) {\n  assertIsFixedSize(encoder);\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, offset) => {\n      const newOffset = encoder.write(value, bytes, offset);\n      copySourceToTargetInReverse(\n        bytes,\n        bytes,\n        offset,\n        offset + encoder.fixedSize\n      );\n      return newOffset;\n    }\n  });\n}\nfunction reverseDecoder(decoder) {\n  assertIsFixedSize(decoder);\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const reversedBytes = bytes.slice();\n      copySourceToTargetInReverse(\n        bytes,\n        reversedBytes,\n        offset,\n        offset + decoder.fixedSize\n      );\n      return decoder.read(reversedBytes, offset);\n    }\n  });\n}\nfunction reverseCodec(codec) {\n  return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n\n// src/transform-codec.ts\nfunction transformEncoder(encoder, unmap) {\n  return createEncoder({\n    ...isVariableSize(encoder) ? { ...encoder, getSizeFromValue: (value) => encoder.getSizeFromValue(unmap(value)) } : encoder,\n    write: (value, bytes, offset) => encoder.write(unmap(value), bytes, offset)\n  });\n}\nfunction transformDecoder(decoder, map) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const [value, newOffset] = decoder.read(bytes, offset);\n      return [map(value, bytes, offset), newOffset];\n    }\n  });\n}\nfunction transformCodec(codec, unmap, map) {\n  return createCodec({\n    ...transformEncoder(codec, unmap),\n    read: map ? transformDecoder(codec, map).read : codec.read\n  });\n}\n\nexport { addCodecSentinel, addCodecSizePrefix, addDecoderSentinel, addDecoderSizePrefix, addEncoderSentinel, addEncoderSizePrefix, assertByteArrayHasEnoughBytesForCodec, assertByteArrayIsNotEmptyForCodec, assertByteArrayOffsetIsNotOutOfRange, assertIsFixedSize, assertIsVariableSize, combineCodec, containsBytes, createCodec, createDecoder, createEncoder, fixBytes, fixCodecSize, fixDecoderSize, fixEncoderSize, getEncodedSize, isFixedSize, isVariableSize, mergeBytes, offsetCodec, offsetDecoder, offsetEncoder, padBytes, padLeftCodec, padLeftDecoder, padLeftEncoder, padRightCodec, padRightDecoder, padRightEncoder, resizeCodec, resizeDecoder, resizeEncoder, reverseCodec, reverseDecoder, reverseEncoder, transformCodec, transformDecoder, transformEncoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE } from '@solana/errors';\nimport { combineCodec, createEncoder, createDecoder, assertByteArrayIsNotEmptyForCodec, assertByteArrayHasEnoughBytesForCodec } from '@solana/codecs-core';\n\n// src/assertions.ts\nfunction assertNumberIsBetweenForCodec(codecDescription, min, max, value) {\n  if (value < min || value > max) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n      codecDescription,\n      max,\n      min,\n      value\n    });\n  }\n}\n\n// src/common.ts\nvar Endian = /* @__PURE__ */ ((Endian2) => {\n  Endian2[Endian2[\"Little\"] = 0] = \"Little\";\n  Endian2[Endian2[\"Big\"] = 1] = \"Big\";\n  return Endian2;\n})(Endian || {});\nfunction isLittleEndian(config) {\n  return config?.endian === 1 /* Big */ ? false : true;\n}\nfunction numberEncoderFactory(input) {\n  return createEncoder({\n    fixedSize: input.size,\n    write(value, bytes, offset) {\n      if (input.range) {\n        assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n      }\n      const arrayBuffer = new ArrayBuffer(input.size);\n      input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n      bytes.set(new Uint8Array(arrayBuffer), offset);\n      return offset + input.size;\n    }\n  });\n}\nfunction numberDecoderFactory(input) {\n  return createDecoder({\n    fixedSize: input.size,\n    read(bytes, offset = 0) {\n      assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n      assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n      const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n      return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n    }\n  });\n}\nfunction toArrayBuffer(bytes, offset, length) {\n  const bytesOffset = bytes.byteOffset + (offset ?? 0);\n  const bytesLength = length ?? bytes.byteLength;\n  return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n\n// src/f32.ts\nvar getF32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f32\",\n  set: (view, value, le) => view.setFloat32(0, Number(value), le),\n  size: 4\n});\nvar getF32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat32(0, le),\n  name: \"f32\",\n  size: 4\n});\nvar getF32Codec = (config = {}) => combineCodec(getF32Encoder(config), getF32Decoder(config));\nvar getF64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f64\",\n  set: (view, value, le) => view.setFloat64(0, Number(value), le),\n  size: 8\n});\nvar getF64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat64(0, le),\n  name: \"f64\",\n  size: 8\n});\nvar getF64Codec = (config = {}) => combineCodec(getF64Encoder(config), getF64Decoder(config));\nvar getI128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i128\",\n  range: [-BigInt(\"0x7fffffffffffffffffffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getI128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"i128\",\n  size: 16\n});\nvar getI128Codec = (config = {}) => combineCodec(getI128Encoder(config), getI128Decoder(config));\nvar getI16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i16\",\n  range: [-Number(\"0x7fff\") - 1, Number(\"0x7fff\")],\n  set: (view, value, le) => view.setInt16(0, Number(value), le),\n  size: 2\n});\nvar getI16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt16(0, le),\n  name: \"i16\",\n  size: 2\n});\nvar getI16Codec = (config = {}) => combineCodec(getI16Encoder(config), getI16Decoder(config));\nvar getI32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i32\",\n  range: [-Number(\"0x7fffffff\") - 1, Number(\"0x7fffffff\")],\n  set: (view, value, le) => view.setInt32(0, Number(value), le),\n  size: 4\n});\nvar getI32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt32(0, le),\n  name: \"i32\",\n  size: 4\n});\nvar getI32Codec = (config = {}) => combineCodec(getI32Encoder(config), getI32Decoder(config));\nvar getI64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i64\",\n  range: [-BigInt(\"0x7fffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffff\")],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  size: 8\n});\nvar getI64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigInt64(0, le),\n  name: \"i64\",\n  size: 8\n});\nvar getI64Codec = (config = {}) => combineCodec(getI64Encoder(config), getI64Decoder(config));\nvar getI8Encoder = () => numberEncoderFactory({\n  name: \"i8\",\n  range: [-Number(\"0x7f\") - 1, Number(\"0x7f\")],\n  set: (view, value) => view.setInt8(0, Number(value)),\n  size: 1\n});\nvar getI8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getInt8(0),\n  name: \"i8\",\n  size: 1\n});\nvar getI8Codec = () => combineCodec(getI8Encoder(), getI8Decoder());\nvar getShortU16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => {\n    if (value <= 127) return 1;\n    if (value <= 16383) return 2;\n    return 3;\n  },\n  maxSize: 3,\n  write: (value, bytes, offset) => {\n    assertNumberIsBetweenForCodec(\"shortU16\", 0, 65535, value);\n    const shortU16Bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      const alignedValue = Number(value) >> ii * 7;\n      if (alignedValue === 0) {\n        break;\n      }\n      const nextSevenBits = 127 & alignedValue;\n      shortU16Bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        shortU16Bytes[ii - 1] |= 128;\n      }\n    }\n    bytes.set(shortU16Bytes, offset);\n    return offset + shortU16Bytes.length;\n  }\n});\nvar getShortU16Decoder = () => createDecoder({\n  maxSize: 3,\n  read: (bytes, offset) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 127 & currentByte;\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 128) === 0) {\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\nvar getShortU16Codec = () => combineCodec(getShortU16Encoder(), getShortU16Decoder());\nvar getU128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u128\",\n  range: [0n, BigInt(\"0xffffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getU128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"u128\",\n  size: 16\n});\nvar getU128Codec = (config = {}) => combineCodec(getU128Encoder(config), getU128Decoder(config));\nvar getU16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u16\",\n  range: [0, Number(\"0xffff\")],\n  set: (view, value, le) => view.setUint16(0, Number(value), le),\n  size: 2\n});\nvar getU16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint16(0, le),\n  name: \"u16\",\n  size: 2\n});\nvar getU16Codec = (config = {}) => combineCodec(getU16Encoder(config), getU16Decoder(config));\nvar getU32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u32\",\n  range: [0, Number(\"0xffffffff\")],\n  set: (view, value, le) => view.setUint32(0, Number(value), le),\n  size: 4\n});\nvar getU32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint32(0, le),\n  name: \"u32\",\n  size: 4\n});\nvar getU32Codec = (config = {}) => combineCodec(getU32Encoder(config), getU32Decoder(config));\nvar getU64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u64\",\n  range: [0n, BigInt(\"0xffffffffffffffff\")],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  size: 8\n});\nvar getU64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigUint64(0, le),\n  name: \"u64\",\n  size: 8\n});\nvar getU64Codec = (config = {}) => combineCodec(getU64Encoder(config), getU64Decoder(config));\nvar getU8Encoder = () => numberEncoderFactory({\n  name: \"u8\",\n  range: [0, Number(\"0xff\")],\n  set: (view, value) => view.setUint8(0, Number(value)),\n  size: 1\n});\nvar getU8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getUint8(0),\n  name: \"u8\",\n  size: 1\n});\nvar getU8Codec = () => combineCodec(getU8Encoder(), getU8Decoder());\n\nexport { Endian, assertNumberIsBetweenForCodec, getF32Codec, getF32Decoder, getF32Encoder, getF64Codec, getF64Decoder, getF64Encoder, getI128Codec, getI128Decoder, getI128Encoder, getI16Codec, getI16Decoder, getI16Encoder, getI32Codec, getI32Decoder, getI32Encoder, getI64Codec, getI64Decoder, getI64Encoder, getI8Codec, getI8Decoder, getI8Encoder, getShortU16Codec, getShortU16Decoder, getShortU16Encoder, getU128Codec, getU128Decoder, getU128Encoder, getU16Codec, getU16Decoder, getU16Encoder, getU32Codec, getU32Decoder, getU32Encoder, getU64Codec, getU64Decoder, getU64Encoder, getU8Codec, getU8Decoder, getU8Encoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { createEncoder, getEncodedSize, createDecoder, combineCodec, assertByteArrayHasEnoughBytesForCodec, transformEncoder, transformDecoder, containsBytes, isFixedSize, assertIsFixedSize, fixEncoderSize, fixDecoderSize } from '@solana/codecs-core';\nimport { getU32Encoder, getU32Decoder, getU8Encoder, getU8Decoder } from '@solana/codecs-numbers';\nimport { SolanaError, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE } from '@solana/errors';\n\n// src/array.ts\nfunction assertValidNumberOfItemsForCodec(codecDescription, expected, actual) {\n  if (expected !== actual) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, {\n      actual,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction maxCodecSizes(sizes) {\n  return sizes.reduce(\n    (all, size) => all === null || size === null ? null : Math.max(all, size),\n    0\n  );\n}\nfunction sumCodecSizes(sizes) {\n  return sizes.reduce((all, size) => all === null || size === null ? null : all + size, 0);\n}\nfunction getFixedSize(codec) {\n  return isFixedSize(codec) ? codec.fixedSize : null;\n}\nfunction getMaxSize(codec) {\n  return isFixedSize(codec) ? codec.fixedSize : codec.maxSize ?? null;\n}\n\n// src/array.ts\nfunction getArrayEncoder(item, config = {}) {\n  const size = config.size ?? getU32Encoder();\n  const fixedSize = computeArrayLikeCodecSize(size, getFixedSize(item));\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return createEncoder({\n    ...fixedSize !== null ? { fixedSize } : {\n      getSizeFromValue: (array) => {\n        const prefixSize = typeof size === \"object\" ? getEncodedSize(array.length, size) : 0;\n        return prefixSize + [...array].reduce((all, value) => all + getEncodedSize(value, item), 0);\n      },\n      maxSize\n    },\n    write: (array, bytes, offset) => {\n      if (typeof size === \"number\") {\n        assertValidNumberOfItemsForCodec(\"array\", size, array.length);\n      }\n      if (typeof size === \"object\") {\n        offset = size.write(array.length, bytes, offset);\n      }\n      array.forEach((value) => {\n        offset = item.write(value, bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getArrayDecoder(item, config = {}) {\n  const size = config.size ?? getU32Decoder();\n  const itemSize = getFixedSize(item);\n  const fixedSize = computeArrayLikeCodecSize(size, itemSize);\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return createDecoder({\n    ...fixedSize !== null ? { fixedSize } : { maxSize },\n    read: (bytes, offset) => {\n      const array = [];\n      if (typeof size === \"object\" && bytes.slice(offset).length === 0) {\n        return [array, offset];\n      }\n      if (size === \"remainder\") {\n        while (offset < bytes.length) {\n          const [value, newOffset2] = item.read(bytes, offset);\n          offset = newOffset2;\n          array.push(value);\n        }\n        return [array, offset];\n      }\n      const [resolvedSize, newOffset] = typeof size === \"number\" ? [size, offset] : size.read(bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset2] = item.read(bytes, offset);\n        offset = newOffset2;\n        array.push(value);\n      }\n      return [array, offset];\n    }\n  });\n}\nfunction getArrayCodec(item, config = {}) {\n  return combineCodec(getArrayEncoder(item, config), getArrayDecoder(item, config));\n}\nfunction computeArrayLikeCodecSize(size, itemSize) {\n  if (typeof size !== \"number\") return null;\n  if (size === 0) return 0;\n  return itemSize === null ? null : itemSize * size;\n}\nfunction getBitArrayEncoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return createEncoder({\n    fixedSize: size,\n    write(value, bytes, offset) {\n      const bytesToAdd = [];\n      for (let i = 0; i < size; i += 1) {\n        let byte = 0;\n        for (let j = 0; j < 8; j += 1) {\n          const feature = Number(value[i * 8 + j] ?? 0);\n          byte |= feature << (backward ? j : 7 - j);\n        }\n        if (backward) {\n          bytesToAdd.unshift(byte);\n        } else {\n          bytesToAdd.push(byte);\n        }\n      }\n      bytes.set(bytesToAdd, offset);\n      return size;\n    }\n  });\n}\nfunction getBitArrayDecoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return createDecoder({\n    fixedSize: size,\n    read(bytes, offset) {\n      assertByteArrayHasEnoughBytesForCodec(\"bitArray\", size, bytes, offset);\n      const booleans = [];\n      let slice = bytes.slice(offset, offset + size);\n      slice = backward ? slice.reverse() : slice;\n      slice.forEach((byte) => {\n        for (let i = 0; i < 8; i += 1) {\n          if (backward) {\n            booleans.push(Boolean(byte & 1));\n            byte >>= 1;\n          } else {\n            booleans.push(Boolean(byte & 128));\n            byte <<= 1;\n          }\n        }\n      });\n      return [booleans, offset + size];\n    }\n  });\n}\nfunction getBitArrayCodec(size, config = {}) {\n  return combineCodec(getBitArrayEncoder(size, config), getBitArrayDecoder(size, config));\n}\nfunction getBooleanEncoder(config = {}) {\n  return transformEncoder(config.size ?? getU8Encoder(), (value) => value ? 1 : 0);\n}\nfunction getBooleanDecoder(config = {}) {\n  return transformDecoder(config.size ?? getU8Decoder(), (value) => Number(value) === 1);\n}\nfunction getBooleanCodec(config = {}) {\n  return combineCodec(getBooleanEncoder(config), getBooleanDecoder(config));\n}\nfunction getBytesEncoder() {\n  return createEncoder({\n    getSizeFromValue: (value) => value.length,\n    write: (value, bytes, offset) => {\n      bytes.set(value, offset);\n      return offset + value.length;\n    }\n  });\n}\nfunction getBytesDecoder() {\n  return createDecoder({\n    read: (bytes, offset) => {\n      const slice = bytes.slice(offset);\n      return [slice, offset + slice.length];\n    }\n  });\n}\nfunction getBytesCodec() {\n  return combineCodec(getBytesEncoder(), getBytesDecoder());\n}\nvar getBase16Decoder = () => createDecoder({\n  read(bytes, offset) {\n    const value = bytes.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n    return [value, bytes.length];\n  }\n});\nfunction getConstantEncoder(constant) {\n  return createEncoder({\n    fixedSize: constant.length,\n    write: (_, bytes, offset) => {\n      bytes.set(constant, offset);\n      return offset + constant.length;\n    }\n  });\n}\nfunction getConstantDecoder(constant) {\n  return createDecoder({\n    fixedSize: constant.length,\n    read: (bytes, offset) => {\n      const base16 = getBase16Decoder();\n      if (!containsBytes(bytes, constant, offset)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_CONSTANT, {\n          constant,\n          data: bytes,\n          hexConstant: base16.decode(constant),\n          hexData: base16.decode(bytes),\n          offset\n        });\n      }\n      return [void 0, offset + constant.length];\n    }\n  });\n}\nfunction getConstantCodec(constant) {\n  return combineCodec(getConstantEncoder(constant), getConstantDecoder(constant));\n}\nfunction getTupleEncoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => items.map((item, index) => getEncodedSize(value[index], item)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (value, bytes, offset) => {\n      assertValidNumberOfItemsForCodec(\"tuple\", items.length, value.length);\n      items.forEach((item, index) => {\n        offset = item.write(value[index], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getTupleDecoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const values = [];\n      items.forEach((item) => {\n        const [newValue, newOffset] = item.read(bytes, offset);\n        values.push(newValue);\n        offset = newOffset;\n      });\n      return [values, offset];\n    }\n  });\n}\nfunction getTupleCodec(items) {\n  return combineCodec(\n    getTupleEncoder(items),\n    getTupleDecoder(items)\n  );\n}\nfunction getUnionEncoder(variants, getIndexFromValue) {\n  const fixedSize = getUnionFixedSize(variants);\n  const write = (variant, bytes, offset) => {\n    const index = getIndexFromValue(variant);\n    assertValidVariantIndex(variants, index);\n    return variants[index].write(variant, bytes, offset);\n  };\n  if (fixedSize !== null) {\n    return createEncoder({ fixedSize, write });\n  }\n  const maxSize = getUnionMaxSize(variants);\n  return createEncoder({\n    ...maxSize !== null ? { maxSize } : {},\n    getSizeFromValue: (variant) => {\n      const index = getIndexFromValue(variant);\n      assertValidVariantIndex(variants, index);\n      return getEncodedSize(variant, variants[index]);\n    },\n    write\n  });\n}\nfunction getUnionDecoder(variants, getIndexFromBytes) {\n  const fixedSize = getUnionFixedSize(variants);\n  const read = (bytes, offset) => {\n    const index = getIndexFromBytes(bytes, offset);\n    assertValidVariantIndex(variants, index);\n    return variants[index].read(bytes, offset);\n  };\n  if (fixedSize !== null) {\n    return createDecoder({ fixedSize, read });\n  }\n  const maxSize = getUnionMaxSize(variants);\n  return createDecoder({ ...maxSize !== null ? { maxSize } : {}, read });\n}\nfunction getUnionCodec(variants, getIndexFromValue, getIndexFromBytes) {\n  return combineCodec(\n    getUnionEncoder(variants, getIndexFromValue),\n    getUnionDecoder(variants, getIndexFromBytes)\n  );\n}\nfunction assertValidVariantIndex(variants, index) {\n  if (typeof variants[index] === \"undefined\") {\n    throw new SolanaError(SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, {\n      maxRange: variants.length - 1,\n      minRange: 0,\n      variant: index\n    });\n  }\n}\nfunction getUnionFixedSize(variants) {\n  if (variants.length === 0) return 0;\n  if (!isFixedSize(variants[0])) return null;\n  const variantSize = variants[0].fixedSize;\n  const sameSizedVariants = variants.every((variant) => isFixedSize(variant) && variant.fixedSize === variantSize);\n  return sameSizedVariants ? variantSize : null;\n}\nfunction getUnionMaxSize(variants) {\n  return maxCodecSizes(variants.map((variant) => getMaxSize(variant)));\n}\n\n// src/discriminated-union.ts\nfunction getDiscriminatedUnionEncoder(variants, config = {}) {\n  const discriminatorProperty = config.discriminator ?? \"__kind\";\n  const prefix = config.size ?? getU8Encoder();\n  return getUnionEncoder(\n    variants.map(\n      ([, variant], index) => transformEncoder(getTupleEncoder([prefix, variant]), (value) => [index, value])\n    ),\n    (value) => getVariantDiscriminator(variants, value[discriminatorProperty])\n  );\n}\nfunction getDiscriminatedUnionDecoder(variants, config = {}) {\n  const discriminatorProperty = config.discriminator ?? \"__kind\";\n  const prefix = config.size ?? getU8Decoder();\n  return getUnionDecoder(\n    variants.map(\n      ([discriminator, variant]) => transformDecoder(getTupleDecoder([prefix, variant]), ([, value]) => ({\n        [discriminatorProperty]: discriminator,\n        ...value\n      }))\n    ),\n    (bytes, offset) => Number(prefix.read(bytes, offset)[0])\n  );\n}\nfunction getDiscriminatedUnionCodec(variants, config = {}) {\n  return combineCodec(\n    getDiscriminatedUnionEncoder(variants, config),\n    getDiscriminatedUnionDecoder(variants, config)\n  );\n}\nfunction getVariantDiscriminator(variants, discriminatorValue) {\n  const discriminator = variants.findIndex(([key]) => discriminatorValue === key);\n  if (discriminator < 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, {\n      value: discriminatorValue,\n      variants: variants.map(([key]) => key)\n    });\n  }\n  return discriminator;\n}\nvar getDataEnumEncoder = getDiscriminatedUnionEncoder;\nvar getDataEnumDecoder = getDiscriminatedUnionDecoder;\nvar getDataEnumCodec = getDiscriminatedUnionCodec;\n\n// src/enum-helpers.ts\nfunction getEnumStats(constructor) {\n  const numericalValues = [\n    ...new Set(Object.values(constructor).filter((v) => typeof v === \"number\"))\n  ].sort();\n  const enumRecord = Object.fromEntries(Object.entries(constructor).slice(numericalValues.length));\n  const enumKeys = Object.keys(enumRecord);\n  const enumValues = Object.values(enumRecord);\n  const stringValues = [\n    .../* @__PURE__ */ new Set([...enumKeys, ...enumValues.filter((v) => typeof v === \"string\")])\n  ];\n  return { enumKeys, enumRecord, enumValues, numericalValues, stringValues };\n}\nfunction getEnumIndexFromVariant({\n  enumKeys,\n  enumValues,\n  variant\n}) {\n  const valueIndex = findLastIndex(enumValues, (value) => value === variant);\n  if (valueIndex >= 0) return valueIndex;\n  return enumKeys.findIndex((key) => key === variant);\n}\nfunction getEnumIndexFromDiscriminator({\n  discriminator,\n  enumKeys,\n  enumValues,\n  useValuesAsDiscriminators\n}) {\n  if (!useValuesAsDiscriminators) {\n    return discriminator >= 0 && discriminator < enumKeys.length ? discriminator : -1;\n  }\n  return findLastIndex(enumValues, (value) => value === discriminator);\n}\nfunction findLastIndex(array, predicate) {\n  let l = array.length;\n  while (l--) {\n    if (predicate(array[l], l, array)) return l;\n  }\n  return -1;\n}\nfunction formatNumericalValues(values) {\n  if (values.length === 0) return \"\";\n  let range = [values[0], values[0]];\n  const ranges = [];\n  for (let index = 1; index < values.length; index++) {\n    const value = values[index];\n    if (range[1] + 1 === value) {\n      range[1] = value;\n    } else {\n      ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n      range = [value, value];\n    }\n  }\n  ranges.push(range[0] === range[1] ? `${range[0]}` : `${range[0]}-${range[1]}`);\n  return ranges.join(\", \");\n}\n\n// src/enum.ts\nfunction getEnumEncoder(constructor, config = {}) {\n  const prefix = config.size ?? getU8Encoder();\n  const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n  const { enumKeys, enumValues, numericalValues, stringValues } = getEnumStats(constructor);\n  if (useValuesAsDiscriminators && enumValues.some((value) => typeof value === \"string\")) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n      stringValues: enumValues.filter((v) => typeof v === \"string\")\n    });\n  }\n  return transformEncoder(prefix, (variant) => {\n    const index = getEnumIndexFromVariant({ enumKeys, enumValues, variant });\n    if (index < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, {\n        formattedNumericalValues: formatNumericalValues(numericalValues),\n        numericalValues,\n        stringValues,\n        variant\n      });\n    }\n    return useValuesAsDiscriminators ? enumValues[index] : index;\n  });\n}\nfunction getEnumDecoder(constructor, config = {}) {\n  const prefix = config.size ?? getU8Decoder();\n  const useValuesAsDiscriminators = config.useValuesAsDiscriminators ?? false;\n  const { enumKeys, enumValues, numericalValues } = getEnumStats(constructor);\n  if (useValuesAsDiscriminators && enumValues.some((value) => typeof value === \"string\")) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, {\n      stringValues: enumValues.filter((v) => typeof v === \"string\")\n    });\n  }\n  return transformDecoder(prefix, (value) => {\n    const discriminator = Number(value);\n    const index = getEnumIndexFromDiscriminator({\n      discriminator,\n      enumKeys,\n      enumValues,\n      useValuesAsDiscriminators\n    });\n    if (index < 0) {\n      const validDiscriminators = useValuesAsDiscriminators ? numericalValues : [...Array(enumKeys.length).keys()];\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n        discriminator,\n        formattedValidDiscriminators: formatNumericalValues(validDiscriminators),\n        validDiscriminators\n      });\n    }\n    return enumValues[index];\n  });\n}\nfunction getEnumCodec(constructor, config = {}) {\n  return combineCodec(getEnumEncoder(constructor, config), getEnumDecoder(constructor, config));\n}\nvar getScalarEnumEncoder = getEnumEncoder;\nvar getScalarEnumDecoder = getEnumDecoder;\nvar getScalarEnumCodec = getEnumCodec;\nfunction getHiddenPrefixEncoder(encoder, prefixedEncoders) {\n  return transformEncoder(\n    getTupleEncoder([...prefixedEncoders, encoder]),\n    (value) => [...prefixedEncoders.map(() => void 0), value]\n  );\n}\nfunction getHiddenPrefixDecoder(decoder, prefixedDecoders) {\n  return transformDecoder(\n    getTupleDecoder([...prefixedDecoders, decoder]),\n    (tuple) => tuple[tuple.length - 1]\n  );\n}\nfunction getHiddenPrefixCodec(codec, prefixedCodecs) {\n  return combineCodec(getHiddenPrefixEncoder(codec, prefixedCodecs), getHiddenPrefixDecoder(codec, prefixedCodecs));\n}\nfunction getHiddenSuffixEncoder(encoder, suffixedEncoders) {\n  return transformEncoder(\n    getTupleEncoder([encoder, ...suffixedEncoders]),\n    (value) => [value, ...suffixedEncoders.map(() => void 0)]\n  );\n}\nfunction getHiddenSuffixDecoder(decoder, suffixedDecoders) {\n  return transformDecoder(\n    getTupleDecoder([decoder, ...suffixedDecoders]),\n    (tuple) => tuple[0]\n  );\n}\nfunction getHiddenSuffixCodec(codec, suffixedCodecs) {\n  return combineCodec(getHiddenSuffixEncoder(codec, suffixedCodecs), getHiddenSuffixDecoder(codec, suffixedCodecs));\n}\nfunction getMapEncoder(key, value, config = {}) {\n  return transformEncoder(\n    getArrayEncoder(getTupleEncoder([key, value]), config),\n    (map) => [...map.entries()]\n  );\n}\nfunction getMapDecoder(key, value, config = {}) {\n  return transformDecoder(\n    getArrayDecoder(getTupleDecoder([key, value]), config),\n    (entries) => new Map(entries)\n  );\n}\nfunction getMapCodec(key, value, config = {}) {\n  return combineCodec(getMapEncoder(key, value, config), getMapDecoder(key, value, config));\n}\nfunction getUnitEncoder() {\n  return createEncoder({\n    fixedSize: 0,\n    write: (_value, _bytes, offset) => offset\n  });\n}\nfunction getUnitDecoder() {\n  return createDecoder({\n    fixedSize: 0,\n    read: (_bytes, offset) => [void 0, offset]\n  });\n}\nfunction getUnitCodec() {\n  return combineCodec(getUnitEncoder(), getUnitDecoder());\n}\n\n// src/nullable.ts\nfunction getNullableEncoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return transformEncoder(getUnitEncoder(), (_boolean) => void 0);\n    }\n    return getBooleanEncoder({ size: config.prefix ?? getU8Encoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      assertIsFixedSize(item);\n      return fixEncoderSize(getUnitEncoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return getUnitEncoder();\n    }\n    return getConstantEncoder(config.noneValue);\n  })();\n  return getUnionEncoder(\n    [\n      transformEncoder(getTupleEncoder([prefix, noneValue]), (_value) => [\n        false,\n        void 0\n      ]),\n      transformEncoder(getTupleEncoder([prefix, item]), (value) => [true, value])\n    ],\n    (variant) => Number(variant !== null)\n  );\n}\nfunction getNullableDecoder(item, config = {}) {\n  const prefix = (() => {\n    if (config.prefix === null) {\n      return transformDecoder(getUnitDecoder(), () => false);\n    }\n    return getBooleanDecoder({ size: config.prefix ?? getU8Decoder() });\n  })();\n  const noneValue = (() => {\n    if (config.noneValue === \"zeroes\") {\n      assertIsFixedSize(item);\n      return fixDecoderSize(getUnitDecoder(), item.fixedSize);\n    }\n    if (!config.noneValue) {\n      return getUnitDecoder();\n    }\n    return getConstantDecoder(config.noneValue);\n  })();\n  return getUnionDecoder(\n    [\n      transformDecoder(getTupleDecoder([prefix, noneValue]), () => null),\n      transformDecoder(getTupleDecoder([prefix, item]), ([, value]) => value)\n    ],\n    (bytes, offset) => {\n      if (config.prefix === null && !config.noneValue) {\n        return Number(offset < bytes.length);\n      }\n      if (config.prefix === null && config.noneValue != null) {\n        const zeroValue = config.noneValue === \"zeroes\" ? new Uint8Array(noneValue.fixedSize).fill(0) : config.noneValue;\n        return containsBytes(bytes, zeroValue, offset) ? 0 : 1;\n      }\n      return Number(prefix.read(bytes, offset)[0]);\n    }\n  );\n}\nfunction getNullableCodec(item, config = {}) {\n  return combineCodec(\n    getNullableEncoder(item, config),\n    getNullableDecoder(item, config)\n  );\n}\nfunction getSetEncoder(item, config = {}) {\n  return transformEncoder(getArrayEncoder(item, config), (set) => [...set]);\n}\nfunction getSetDecoder(item, config = {}) {\n  return transformDecoder(getArrayDecoder(item, config), (entries) => new Set(entries));\n}\nfunction getSetCodec(item, config = {}) {\n  return combineCodec(getSetEncoder(item, config), getSetDecoder(item, config));\n}\nfunction getStructEncoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => fields.map(([key, codec]) => getEncodedSize(value[key], codec)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (struct, bytes, offset) => {\n      fields.forEach(([key, codec]) => {\n        offset = codec.write(struct[key], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getStructDecoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const struct = {};\n      fields.forEach(([key, codec]) => {\n        const [value, newOffset] = codec.read(bytes, offset);\n        offset = newOffset;\n        struct[key] = value;\n      });\n      return [struct, offset];\n    }\n  });\n}\nfunction getStructCodec(fields) {\n  return combineCodec(\n    getStructEncoder(fields),\n    getStructDecoder(fields)\n  );\n}\n\nexport { assertValidNumberOfItemsForCodec, getArrayCodec, getArrayDecoder, getArrayEncoder, getBitArrayCodec, getBitArrayDecoder, getBitArrayEncoder, getBooleanCodec, getBooleanDecoder, getBooleanEncoder, getBytesCodec, getBytesDecoder, getBytesEncoder, getConstantCodec, getConstantDecoder, getConstantEncoder, getDataEnumCodec, getDataEnumDecoder, getDataEnumEncoder, getDiscriminatedUnionCodec, getDiscriminatedUnionDecoder, getDiscriminatedUnionEncoder, getEnumCodec, getEnumDecoder, getEnumEncoder, getHiddenPrefixCodec, getHiddenPrefixDecoder, getHiddenPrefixEncoder, getHiddenSuffixCodec, getHiddenSuffixDecoder, getHiddenSuffixEncoder, getMapCodec, getMapDecoder, getMapEncoder, getNullableCodec, getNullableDecoder, getNullableEncoder, getScalarEnumCodec, getScalarEnumDecoder, getScalarEnumEncoder, getSetCodec, getSetDecoder, getSetEncoder, getStructCodec, getStructDecoder, getStructEncoder, getTupleCodec, getTupleDecoder, getTupleEncoder, getUnionCodec, getUnionDecoder, getUnionEncoder, getUnitCodec, getUnitDecoder, getUnitEncoder };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE } from '@solana/errors';\nimport { createEncoder, createDecoder, combineCodec } from '@solana/codecs-core';\n\n// src/assertions.ts\nfunction assertValidBaseString(alphabet4, testValue, givenValue = testValue) {\n  if (!testValue.match(new RegExp(`^[${alphabet4}]*$`))) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n      alphabet: alphabet4,\n      base: alphabet4.length,\n      value: givenValue\n    });\n  }\n}\nvar getBaseXEncoder = (alphabet4) => {\n  return createEncoder({\n    getSizeFromValue: (value) => {\n      const [leadingZeroes, tailChars] = partitionLeadingZeroes(value, alphabet4[0]);\n      if (!tailChars) return value.length;\n      const base10Number = getBigIntFromBaseX(tailChars, alphabet4);\n      return leadingZeroes.length + Math.ceil(base10Number.toString(16).length / 2);\n    },\n    write(value, bytes, offset) {\n      assertValidBaseString(alphabet4, value);\n      if (value === \"\") return offset;\n      const [leadingZeroes, tailChars] = partitionLeadingZeroes(value, alphabet4[0]);\n      if (!tailChars) {\n        bytes.set(new Uint8Array(leadingZeroes.length).fill(0), offset);\n        return offset + leadingZeroes.length;\n      }\n      let base10Number = getBigIntFromBaseX(tailChars, alphabet4);\n      const tailBytes = [];\n      while (base10Number > 0n) {\n        tailBytes.unshift(Number(base10Number % 256n));\n        base10Number /= 256n;\n      }\n      const bytesToAdd = [...Array(leadingZeroes.length).fill(0), ...tailBytes];\n      bytes.set(bytesToAdd, offset);\n      return offset + bytesToAdd.length;\n    }\n  });\n};\nvar getBaseXDecoder = (alphabet4) => {\n  return createDecoder({\n    read(rawBytes, offset) {\n      const bytes = offset === 0 ? rawBytes : rawBytes.slice(offset);\n      if (bytes.length === 0) return [\"\", 0];\n      let trailIndex = bytes.findIndex((n) => n !== 0);\n      trailIndex = trailIndex === -1 ? bytes.length : trailIndex;\n      const leadingZeroes = alphabet4[0].repeat(trailIndex);\n      if (trailIndex === bytes.length) return [leadingZeroes, rawBytes.length];\n      const base10Number = bytes.slice(trailIndex).reduce((sum, byte) => sum * 256n + BigInt(byte), 0n);\n      const tailChars = getBaseXFromBigInt(base10Number, alphabet4);\n      return [leadingZeroes + tailChars, rawBytes.length];\n    }\n  });\n};\nvar getBaseXCodec = (alphabet4) => combineCodec(getBaseXEncoder(alphabet4), getBaseXDecoder(alphabet4));\nfunction partitionLeadingZeroes(value, zeroCharacter) {\n  const [leadingZeros, tailChars] = value.split(new RegExp(`((?!${zeroCharacter}).*)`));\n  return [leadingZeros, tailChars];\n}\nfunction getBigIntFromBaseX(value, alphabet4) {\n  const base = BigInt(alphabet4.length);\n  let sum = 0n;\n  for (const char of value) {\n    sum *= base;\n    sum += BigInt(alphabet4.indexOf(char));\n  }\n  return sum;\n}\nfunction getBaseXFromBigInt(value, alphabet4) {\n  const base = BigInt(alphabet4.length);\n  const tailChars = [];\n  while (value > 0n) {\n    tailChars.unshift(alphabet4[Number(value % base)]);\n    value /= base;\n  }\n  return tailChars.join(\"\");\n}\n\n// src/base10.ts\nvar alphabet = \"0123456789\";\nvar getBase10Encoder = () => getBaseXEncoder(alphabet);\nvar getBase10Decoder = () => getBaseXDecoder(alphabet);\nvar getBase10Codec = () => getBaseXCodec(alphabet);\nvar INVALID_STRING_ERROR_BASE_CONFIG = {\n  alphabet: \"0123456789abcdef\",\n  base: 16\n};\nfunction charCodeToBase16(char) {\n  if (char >= 48 /* ZERO */ && char <= 57 /* NINE */) return char - 48 /* ZERO */;\n  if (char >= 65 /* A_UP */ && char <= 70 /* F_UP */) return char - (65 /* A_UP */ - 10);\n  if (char >= 97 /* A_LO */ && char <= 102 /* F_LO */) return char - (97 /* A_LO */ - 10);\n}\nvar getBase16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => Math.ceil(value.length / 2),\n  write(value, bytes, offset) {\n    const len = value.length;\n    const al = len / 2;\n    if (len === 1) {\n      const c = value.charCodeAt(0);\n      const n = charCodeToBase16(c);\n      if (n === void 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n          ...INVALID_STRING_ERROR_BASE_CONFIG,\n          value\n        });\n      }\n      bytes.set([n], offset);\n      return 1 + offset;\n    }\n    const hexBytes = new Uint8Array(al);\n    for (let i = 0, j = 0; i < al; i++) {\n      const c1 = value.charCodeAt(j++);\n      const c2 = value.charCodeAt(j++);\n      const n1 = charCodeToBase16(c1);\n      const n2 = charCodeToBase16(c2);\n      if (n1 === void 0 || n2 === void 0 && !Number.isNaN(c2)) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n          ...INVALID_STRING_ERROR_BASE_CONFIG,\n          value\n        });\n      }\n      hexBytes[i] = !Number.isNaN(c2) ? n1 << 4 | (n2 ?? 0) : n1;\n    }\n    bytes.set(hexBytes, offset);\n    return hexBytes.length + offset;\n  }\n});\nvar getBase16Decoder = () => createDecoder({\n  read(bytes, offset) {\n    const value = bytes.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n    return [value, bytes.length];\n  }\n});\nvar getBase16Codec = () => combineCodec(getBase16Encoder(), getBase16Decoder());\n\n// src/base58.ts\nvar alphabet2 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nvar getBase58Encoder = () => getBaseXEncoder(alphabet2);\nvar getBase58Decoder = () => getBaseXDecoder(alphabet2);\nvar getBase58Codec = () => getBaseXCodec(alphabet2);\nvar getBaseXResliceEncoder = (alphabet4, bits) => createEncoder({\n  getSizeFromValue: (value) => Math.floor(value.length * bits / 8),\n  write(value, bytes, offset) {\n    assertValidBaseString(alphabet4, value);\n    if (value === \"\") return offset;\n    const charIndices = [...value].map((c) => alphabet4.indexOf(c));\n    const reslicedBytes = reslice(charIndices, bits, 8, false);\n    bytes.set(reslicedBytes, offset);\n    return reslicedBytes.length + offset;\n  }\n});\nvar getBaseXResliceDecoder = (alphabet4, bits) => createDecoder({\n  read(rawBytes, offset = 0) {\n    const bytes = offset === 0 ? rawBytes : rawBytes.slice(offset);\n    if (bytes.length === 0) return [\"\", rawBytes.length];\n    const charIndices = reslice([...bytes], 8, bits, true);\n    return [charIndices.map((i) => alphabet4[i]).join(\"\"), rawBytes.length];\n  }\n});\nvar getBaseXResliceCodec = (alphabet4, bits) => combineCodec(getBaseXResliceEncoder(alphabet4, bits), getBaseXResliceDecoder(alphabet4, bits));\nfunction reslice(input, inputBits, outputBits, useRemainder) {\n  const output = [];\n  let accumulator = 0;\n  let bitsInAccumulator = 0;\n  const mask = (1 << outputBits) - 1;\n  for (const value of input) {\n    accumulator = accumulator << inputBits | value;\n    bitsInAccumulator += inputBits;\n    while (bitsInAccumulator >= outputBits) {\n      bitsInAccumulator -= outputBits;\n      output.push(accumulator >> bitsInAccumulator & mask);\n    }\n  }\n  if (useRemainder && bitsInAccumulator > 0) {\n    output.push(accumulator << outputBits - bitsInAccumulator & mask);\n  }\n  return output;\n}\n\n// src/base64.ts\nvar alphabet3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar getBase64Encoder = () => {\n  {\n    return createEncoder({\n      getSizeFromValue: (value) => {\n        try {\n          return atob(value).length;\n        } catch (e2) {\n          throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n            alphabet: alphabet3,\n            base: 64,\n            value\n          });\n        }\n      },\n      write(value, bytes, offset) {\n        try {\n          const bytesToAdd = atob(value).split(\"\").map((c) => c.charCodeAt(0));\n          bytes.set(bytesToAdd, offset);\n          return bytesToAdd.length + offset;\n        } catch (e2) {\n          throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n            alphabet: alphabet3,\n            base: 64,\n            value\n          });\n        }\n      }\n    });\n  }\n};\nvar getBase64Decoder = () => {\n  {\n    return createDecoder({\n      read(bytes, offset = 0) {\n        const slice = bytes.slice(offset);\n        const value = btoa(String.fromCharCode(...slice));\n        return [value, bytes.length];\n      }\n    });\n  }\n};\nvar getBase64Codec = () => combineCodec(getBase64Encoder(), getBase64Decoder());\n\n// src/null-characters.ts\nvar removeNullCharacters = (value) => (\n  // eslint-disable-next-line no-control-regex\n  value.replace(/\\u0000/g, \"\")\n);\nvar padNullCharacters = (value, chars) => value.padEnd(chars, \"\\0\");\n\n// ../text-encoding-impl/dist/index.browser.mjs\nvar e = globalThis.TextDecoder;\nvar o = globalThis.TextEncoder;\n\n// src/utf8.ts\nvar getUtf8Encoder = () => {\n  let textEncoder;\n  return createEncoder({\n    getSizeFromValue: (value) => (textEncoder ||= new o()).encode(value).length,\n    write: (value, bytes, offset) => {\n      const bytesToAdd = (textEncoder ||= new o()).encode(value);\n      bytes.set(bytesToAdd, offset);\n      return offset + bytesToAdd.length;\n    }\n  });\n};\nvar getUtf8Decoder = () => {\n  let textDecoder;\n  return createDecoder({\n    read(bytes, offset) {\n      const value = (textDecoder ||= new e()).decode(bytes.slice(offset));\n      return [removeNullCharacters(value), bytes.length];\n    }\n  });\n};\nvar getUtf8Codec = () => combineCodec(getUtf8Encoder(), getUtf8Decoder());\n\nexport { assertValidBaseString, getBase10Codec, getBase10Decoder, getBase10Encoder, getBase16Codec, getBase16Decoder, getBase16Encoder, getBase58Codec, getBase58Decoder, getBase58Encoder, getBase64Codec, getBase64Decoder, getBase64Encoder, getBaseXCodec, getBaseXDecoder, getBaseXEncoder, getBaseXResliceCodec, getBaseXResliceDecoder, getBaseXResliceEncoder, getUtf8Codec, getUtf8Decoder, getUtf8Encoder, padNullCharacters, removeNullCharacters };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { addCodecSizePrefix, getU32Codec, getUtf8Codec, getStructCodec, getTupleCodec, getUnitCodec, } from '@solana/codecs';\nexport var Field;\n(function (Field) {\n    Field[Field[\"Name\"] = 0] = \"Name\";\n    Field[Field[\"Symbol\"] = 1] = \"Symbol\";\n    Field[Field[\"Uri\"] = 2] = \"Uri\";\n})(Field || (Field = {}));\nexport const getFieldCodec = () => [\n    ['Name', getUnitCodec()],\n    ['Symbol', getUnitCodec()],\n    ['Uri', getUnitCodec()],\n    ['Key', getStructCodec([['value', getTupleCodec([addCodecSizePrefix(getUtf8Codec(), getU32Codec())])]])],\n];\nexport function getFieldConfig(field) {\n    if (field === Field.Name || field === 'Name' || field === 'name') {\n        return { __kind: 'Name' };\n    }\n    else if (field === Field.Symbol || field === 'Symbol' || field === 'symbol') {\n        return { __kind: 'Symbol' };\n    }\n    else if (field === Field.Uri || field === 'Uri' || field === 'uri') {\n        return { __kind: 'Uri' };\n    }\n    else {\n        return { __kind: 'Key', value: [field] };\n    }\n}\n//# sourceMappingURL=field.js.map","import { PublicKey } from '@solana/web3.js';\nimport { addCodecSizePrefix, fixCodecSize, getArrayCodec, getBytesCodec, getUtf8Codec, getU32Codec, getStructCodec, getTupleCodec, } from '@solana/codecs';\nexport const TOKEN_METADATA_DISCRIMINATOR = Buffer.from([112, 132, 90, 90, 11, 88, 157, 87]);\nfunction getStringCodec() {\n    return addCodecSizePrefix(getUtf8Codec(), getU32Codec());\n}\nconst tokenMetadataCodec = getStructCodec([\n    ['updateAuthority', fixCodecSize(getBytesCodec(), 32)],\n    ['mint', fixCodecSize(getBytesCodec(), 32)],\n    ['name', getStringCodec()],\n    ['symbol', getStringCodec()],\n    ['uri', getStringCodec()],\n    ['additionalMetadata', getArrayCodec(getTupleCodec([getStringCodec(), getStringCodec()]))],\n]);\n// Checks if all elements in the array are 0\nfunction isNonePubkey(buffer) {\n    for (let i = 0; i < buffer.length; i++) {\n        if (buffer[i] !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\n// Pack TokenMetadata into byte slab\nexport function pack(meta) {\n    // If no updateAuthority given, set it to the None/Zero PublicKey for encoding\n    const updateAuthority = meta.updateAuthority ?? PublicKey.default;\n    return tokenMetadataCodec.encode({\n        ...meta,\n        updateAuthority: updateAuthority.toBuffer(),\n        mint: meta.mint.toBuffer(),\n    });\n}\n// unpack byte slab into TokenMetadata\nexport function unpack(buffer) {\n    const data = tokenMetadataCodec.decode(buffer);\n    return isNonePubkey(data.updateAuthority)\n        ? {\n            mint: new PublicKey(data.mint),\n            name: data.name,\n            symbol: data.symbol,\n            uri: data.uri,\n            additionalMetadata: data.additionalMetadata,\n        }\n        : {\n            updateAuthority: new PublicKey(data.updateAuthority),\n            mint: new PublicKey(data.mint),\n            name: data.name,\n            symbol: data.symbol,\n            uri: data.uri,\n            additionalMetadata: data.additionalMetadata,\n        };\n}\n//# sourceMappingURL=state.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\nexport const initializeAccount2InstructionData = struct([\n    u8('instruction'),\n    publicKey('owner'),\n]);\n/**\n * Construct an InitializeAccount2 instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     New account's owner/multisignature\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeAccount2Instruction(account, mint, owner, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeAccount2InstructionData.span);\n    initializeAccount2InstructionData.encode({ instruction: TokenInstruction.InitializeAccount2, owner }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeAccount2 instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeAccount2Instruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccount2InstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint, rent }, data, } = decodeInitializeAccount2InstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeAccount2)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint || !rent)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            rent,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeAccount2 instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeAccount2InstructionUnchecked({ programId, keys: [account, mint, rent], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n            rent,\n        },\n        data: initializeAccount2InstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeAccount2.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\nexport const initializeAccount3InstructionData = struct([\n    u8('instruction'),\n    publicKey('owner'),\n]);\n/**\n * Construct an InitializeAccount3 instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     New account's owner/multisignature\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeAccount3Instruction(account, mint, owner, programId = TOKEN_PROGRAM_ID) {\n    const keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n    ];\n    const data = Buffer.alloc(initializeAccount3InstructionData.span);\n    initializeAccount3InstructionData.encode({ instruction: TokenInstruction.InitializeAccount3, owner }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeAccount3 instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeAccount3Instruction(instruction, programId = TOKEN_PROGRAM_ID) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeAccount3InstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account, mint }, data, } = decodeInitializeAccount3InstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeAccount3)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account || !mint)\n        throw new TokenInvalidInstructionKeysError();\n    // TODO: key checks?\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeAccount3 instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeAccount3InstructionUnchecked({ programId, keys: [account, mint], data, }) {\n    return {\n        programId,\n        keys: {\n            account,\n            mint,\n        },\n        data: initializeAccount3InstructionData.decode(data),\n    };\n}\n//# sourceMappingURL=initializeAccount3.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** The struct that represents the instruction data as it is read by the program */\nexport const initializeImmutableOwnerInstructionData = struct([\n    u8('instruction'),\n]);\n/**\n * Construct an InitializeImmutableOwner instruction\n *\n * @param account           Immutable Owner Account\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeImmutableOwnerInstruction(account, programId) {\n    const keys = [{ pubkey: account, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeImmutableOwnerInstructionData.span);\n    initializeImmutableOwnerInstructionData.encode({\n        instruction: TokenInstruction.InitializeImmutableOwner,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeImmutableOwner instruction and validate it\n *\n * @param instruction InitializeImmutableOwner instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeImmutableOwnerInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeImmutableOwnerInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { account }, data, } = decodeInitializeImmutableOwnerInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeImmutableOwner)\n        throw new TokenInvalidInstructionTypeError();\n    if (!account)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            account,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeImmutableOwner instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeImmutableOwnerInstructionUnchecked({ programId, keys: [account], data, }) {\n    const { instruction } = initializeImmutableOwnerInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            account: account,\n        },\n        data: {\n            instruction,\n        },\n    };\n}\n//# sourceMappingURL=initializeImmutableOwner.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, TokenUnsupportedInstructionError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\nimport { COptionPublicKeyLayout } from '../serialization.js';\n/** TODO: docs */\nexport const initializeMintCloseAuthorityInstructionData = struct([\n    u8('instruction'),\n    new COptionPublicKeyLayout('closeAuthority'),\n]);\n/**\n * Construct an InitializeMintCloseAuthority instruction\n *\n * @param mint            Token mint account\n * @param closeAuthority  Optional authority that can close the mint\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeMintCloseAuthorityInstruction(mint, closeAuthority, programId) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeMintCloseAuthorityInstructionData.span);\n    initializeMintCloseAuthorityInstructionData.encode({\n        instruction: TokenInstruction.InitializeMintCloseAuthority,\n        closeAuthority,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializeMintCloseAuthority instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializeMintCloseAuthorityInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializeMintCloseAuthorityInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializeMintCloseAuthorityInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializeMintCloseAuthority)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializeMintCloseAuthority instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializeMintCloseAuthorityInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, closeAuthority } = initializeMintCloseAuthorityInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            closeAuthority,\n        },\n    };\n}\n//# sourceMappingURL=initializeMintCloseAuthority.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions } from '../constants.js';\nimport { TokenUnsupportedInstructionError } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** The struct that represents the instruction data as it is read by the program */\nexport const initializeNonTransferableMintInstructionData = struct([\n    u8('instruction'),\n]);\n/**\n * Construct an InitializeNonTransferableMint instruction\n *\n * @param mint           Mint Account to make non-transferable\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializeNonTransferableMintInstruction(mint, programId) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializeNonTransferableMintInstructionData.span);\n    initializeNonTransferableMintInstructionData.encode({\n        instruction: TokenInstruction.InitializeNonTransferableMint,\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n//# sourceMappingURL=initializeNonTransferableMint.js.map","import { struct, u8 } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { programSupportsExtensions } from '../constants.js';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionKeysError, TokenInvalidInstructionProgramError, TokenInvalidInstructionTypeError, TokenUnsupportedInstructionError, } from '../errors.js';\nimport { TokenInstruction } from './types.js';\n/** TODO: docs */\nexport const initializePermanentDelegateInstructionData = struct([\n    u8('instruction'),\n    publicKey('delegate'),\n]);\n/**\n * Construct an InitializePermanentDelegate instruction\n *\n * @param mint               Token mint account\n * @param permanentDelegate  Authority that may sign for `Transfer`s and `Burn`s on any account\n * @param programId          SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nexport function createInitializePermanentDelegateInstruction(mint, permanentDelegate, programId) {\n    if (!programSupportsExtensions(programId)) {\n        throw new TokenUnsupportedInstructionError();\n    }\n    const keys = [{ pubkey: mint, isSigner: false, isWritable: true }];\n    const data = Buffer.alloc(initializePermanentDelegateInstructionData.span);\n    initializePermanentDelegateInstructionData.encode({\n        instruction: TokenInstruction.InitializePermanentDelegate,\n        delegate: permanentDelegate || new PublicKey(0),\n    }, data);\n    return new TransactionInstruction({ keys, programId, data });\n}\n/**\n * Decode an InitializePermanentDelegate instruction and validate it\n *\n * @param instruction Transaction instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nexport function decodeInitializePermanentDelegateInstruction(instruction, programId) {\n    if (!instruction.programId.equals(programId))\n        throw new TokenInvalidInstructionProgramError();\n    if (instruction.data.length !== initializePermanentDelegateInstructionData.span)\n        throw new TokenInvalidInstructionDataError();\n    const { keys: { mint }, data, } = decodeInitializePermanentDelegateInstructionUnchecked(instruction);\n    if (data.instruction !== TokenInstruction.InitializePermanentDelegate)\n        throw new TokenInvalidInstructionTypeError();\n    if (!mint)\n        throw new TokenInvalidInstructionKeysError();\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data,\n    };\n}\n/**\n * Decode an InitializePermanentDelegate instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nexport function decodeInitializePermanentDelegateInstructionUnchecked({ programId, keys: [mint], data, }) {\n    const { instruction, delegate } = initializePermanentDelegateInstructionData.decode(data);\n    return {\n        programId,\n        keys: {\n            mint,\n        },\n        data: {\n            instruction,\n            delegate,\n        },\n    };\n}\n//# sourceMappingURL=initializePermanentDelegate.js.map",null,null,"// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR = 10;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY = 3610007;\nvar SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED = 3611e3;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY = 3704004;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED = 5508011;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION = 5663015;\nvar SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES = 5663016;\nvar SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH = 5663017;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT = 5663018;\nvar SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT = 5663019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT = 8078015;\nvar SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE = 8078016;\nvar SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE = 8078017;\nvar SOLANA_ERROR__CODECS__INVALID_CONSTANT = 8078018;\nvar SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE = 8078019;\nvar SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL = 8078020;\nvar SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES = 8078021;\nvar SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS = 8078022;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD = 8100003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED = 9900004;\n\n// src/context.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    const commaSeparatedValues = value.map(encodeValue).join(\n      \"%2C%20\"\n      /* \", \" */\n    );\n    return \"%5B\" + commaSeparatedValues + /* \"]\" */\n    \"%5D\";\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no prototype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  const searchParamsString = Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n  return btoa(searchParamsString);\n}\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS]: \"Enum codec cannot use lexical values [$stringValues] as discriminators. Either remove all lexical values or set `useValuesAsDiscriminators` to `false`.\",\n  [SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL]: \"Sentinel [$hexSentinel] must not be present in encoded bytes [$hexEncodedBytes].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number in [$formattedValidDiscriminators], got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE]: \"Codec [$codecDescription] expected zero-value [$hexZeroValue] to have the same size as the provided fixed-size item [$expectedSize bytes].\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_CONSTANT]: \"Expected byte array constant [$hexConstant] to be present in data [$hexData] at offset [$offset].\",\n  [SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT]: \"Invalid discriminated union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT]: \"Invalid enum variant. Expected one of [$stringValues] or a number in [$formattedNumericalValues], got $variant.\",\n  [SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT]: \"Invalid literal union variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE]: \"Literal union discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES]: \"Expected sentinel [$hexSentinel] to be present in decoded bytes [$hexDecodedBytes].\",\n  [SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE]: \"Union variant out of range. Expected an index between $minRange and $maxRange, got $variant.\",\n  [SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED]: \"No random values implementation could be found.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED]: \"Invariant violation: This data publisher does not publish to the channel named `$channelName`. Supported channels include $supportedChannelNames.\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY]: \"The provided private key does not match the provided public key.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR]: \"$message\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN]: \"The notification name must end in 'Notifications' and the API must supply a subscription plan creator function for the notification '$notificationName'.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD]: \"Could not find an API plan for RPC method: `$method`\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED]: \"Wallet account signers do not support signing multiple messages/transactions in a single operation\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY]: \"Cannot export a non-extractable key.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall @solana/webcrypto-ed25519-polyfill and call its `install` function before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-(2n ** 63n), (2n ** 63n) - 1]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION]: \"Attempted to sign a transaction with an address that is not a signer for it\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES]: \"Transaction has no expected signers therefore it cannot be encoded\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT]: \"Failed to estimate the compute unit consumption for this transaction message. This is likely because simulating the transaction failed. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT]: \"Transaction failed when it was simulated in order to estimate the compute unit consumption. The compute unit estimate provided is for a transaction that failed when simulated and may not be representative of the compute units this transaction would consume if successful. Inspect the `cause` property of this error to learn more\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH]: \"The transaction message expected the transaction to have $signerAddressesLength signatures, got $signaturesLength.\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nvar START_INDEX = \"i\";\nvar TYPE = \"t\";\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  if (messageFormatString.length === 0) {\n    return \"\";\n  }\n  let state;\n  function commitStateUpTo(endIndex) {\n    if (state[TYPE] === 2 /* Variable */) {\n      const variableName = messageFormatString.slice(state[START_INDEX] + 1, endIndex);\n      fragments.push(\n        variableName in context ? (\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          `${context[variableName]}`\n        ) : `$${variableName}`\n      );\n    } else if (state[TYPE] === 1 /* Text */) {\n      fragments.push(messageFormatString.slice(state[START_INDEX], endIndex));\n    }\n  }\n  const fragments = [];\n  messageFormatString.split(\"\").forEach((char, ii) => {\n    if (ii === 0) {\n      state = {\n        [START_INDEX]: 0,\n        [TYPE]: messageFormatString[0] === \"\\\\\" ? 0 /* EscapeSequence */ : messageFormatString[0] === \"$\" ? 2 /* Variable */ : 1 /* Text */\n      };\n      return;\n    }\n    let nextState;\n    switch (state[TYPE]) {\n      case 0 /* EscapeSequence */:\n        nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        break;\n      case 1 /* Text */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        }\n        break;\n      case 2 /* Variable */:\n        if (char === \"\\\\\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 0 /* EscapeSequence */ };\n        } else if (char === \"$\") {\n          nextState = { [START_INDEX]: ii, [TYPE]: 2 /* Variable */ };\n        } else if (!char.match(/\\w/)) {\n          nextState = { [START_INDEX]: ii, [TYPE]: 1 /* Text */ };\n        }\n        break;\n    }\n    if (nextState) {\n      if (state !== nextState) {\n        commitStateUpTo(ii);\n      }\n      state = nextState;\n    }\n  });\n  commitStateUpTo();\n  return fragments.join(\"\");\n}\nfunction getErrorMessage(code, context = {}) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode -- ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` '${encodeContextObject(context)}'`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== undefined) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  /**\n   * Indicates the root cause of this {@link SolanaError}, if any.\n   *\n   * For example, a transaction error might have an instruction error as its root cause. In this\n   * case, you will be able to access the instruction error on the transaction error as `cause`.\n   */\n  cause = this.cause;\n  /**\n   * Contains context that can assist in understanding or recovering from a {@link SolanaError}.\n   */\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  const numberIndex = Number(index);\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index: numberIndex,\n            ...rpcErrorContext !== undefined ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: Number(rpcErrorContext),\n            index: numberIndex\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index: numberIndex\n          };\n        }\n        return { index: numberIndex };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== undefined ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: Number(rpcErrorContext)\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: Number(rpcErrorContext.account_index)\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError(putativeErrorResponse) {\n  let out;\n  if (isRpcErrorResponse(putativeErrorResponse)) {\n    const { code: rawCode, data, message } = putativeErrorResponse;\n    const code = Number(rawCode);\n    if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n      const { err, ...preflightErrorContext } = data;\n      const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n      out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n        ...preflightErrorContext,\n        ...causeObject\n      });\n    } else {\n      let errorContext;\n      switch (code) {\n        case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n        case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n        case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n        case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n        case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n        case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n          errorContext = { __serverMessage: message };\n          break;\n        default:\n          if (typeof data === \"object\" && !Array.isArray(data)) {\n            errorContext = data;\n          }\n      }\n      out = new SolanaError(code, errorContext);\n    }\n  } else {\n    const message = typeof putativeErrorResponse === \"object\" && putativeErrorResponse !== null && \"message\" in putativeErrorResponse && typeof putativeErrorResponse.message === \"string\" ? putativeErrorResponse.message : \"Malformed JSON-RPC error with no message attribute\";\n    out = new SolanaError(SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, { error: putativeErrorResponse, message });\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\nfunction isRpcErrorResponse(value) {\n  return typeof value === \"object\" && value !== null && \"code\" in value && \"message\" in value && (typeof value.code === \"number\" || typeof value.code === \"bigint\") && typeof value.message === \"string\";\n}\n\nexport { SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND, SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED, SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT, SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT, SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND, SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED, SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH, SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY, SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE, SOLANA_ERROR__ADDRESSES__MALFORMED_PDA, SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED, SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE, SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER, SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS, SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__INVALID_CONSTANT, SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES, SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE, SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW, SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS, SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH, SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND, SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE, SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS, SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED, SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION, SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA, SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH, SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH, SOLANA_ERROR__INVALID_NONCE, SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE, SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE, SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR, SOLANA_ERROR__JSON_RPC__INVALID_PARAMS, SOLANA_ERROR__JSON_RPC__INVALID_REQUEST, SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND, SOLANA_ERROR__JSON_RPC__PARSE_ERROR, SOLANA_ERROR__JSON_RPC__SCAN_ERROR, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION, SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH, SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY, SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE, SOLANA_ERROR__MALFORMED_BIGINT_STRING, SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR, SOLANA_ERROR__MALFORMED_NUMBER_STRING, SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT, SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID, SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD, SOLANA_ERROR__RPC__INTEGER_OVERFLOW, SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR, SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN, SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS, SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER, SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS, SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING, SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED, SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP, SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE, SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED, SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED, SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED, SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS, SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION, SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN, SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT, SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION, SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING, SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES, SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME, SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND, SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT, SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE, SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING, SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE, SolanaError, getSolanaErrorFromInstructionError, getSolanaErrorFromJsonRpcError, getSolanaErrorFromTransactionError, isSolanaError, safeCaptureStackTrace };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map","import { SolanaError, SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT } from '@solana/errors';\n\n// src/crypto.ts\nfunction assertPRNGIsAvailable() {\n  if (typeof globalThis.crypto === \"undefined\" || typeof globalThis.crypto.getRandomValues !== \"function\") {\n    throw new SolanaError(SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED);\n  }\n}\nfunction assertIsSecureContext() {\n  if (!globalThis.isSecureContext) {\n    throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT);\n  }\n}\nvar cachedEd25519Decision;\nasync function isEd25519CurveSupported(subtle) {\n  if (cachedEd25519Decision === undefined) {\n    cachedEd25519Decision = new Promise((resolve) => {\n      subtle.generateKey(\n        \"Ed25519\",\n        /* extractable */\n        false,\n        [\"sign\", \"verify\"]\n      ).then(() => {\n        resolve(cachedEd25519Decision = true);\n      }).catch(() => {\n        resolve(cachedEd25519Decision = false);\n      });\n    });\n  }\n  if (typeof cachedEd25519Decision === \"boolean\") {\n    return cachedEd25519Decision;\n  } else {\n    return await cachedEd25519Decision;\n  }\n}\nfunction assertDigestCapabilityIsAvailable() {\n  assertIsSecureContext();\n  if (typeof globalThis.crypto === \"undefined\" || typeof globalThis.crypto.subtle?.digest !== \"function\") {\n    throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED);\n  }\n}\nasync function assertKeyGenerationIsAvailable() {\n  assertIsSecureContext();\n  if (typeof globalThis.crypto === \"undefined\" || typeof globalThis.crypto.subtle?.generateKey !== \"function\") {\n    throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED);\n  }\n  if (!await isEd25519CurveSupported(globalThis.crypto.subtle)) {\n    throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED);\n  }\n}\nfunction assertKeyExporterIsAvailable() {\n  assertIsSecureContext();\n  if (typeof globalThis.crypto === \"undefined\" || typeof globalThis.crypto.subtle?.exportKey !== \"function\") {\n    throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED);\n  }\n}\nfunction assertSigningCapabilityIsAvailable() {\n  assertIsSecureContext();\n  if (typeof globalThis.crypto === \"undefined\" || typeof globalThis.crypto.subtle?.sign !== \"function\") {\n    throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED);\n  }\n}\nfunction assertVerificationCapabilityIsAvailable() {\n  assertIsSecureContext();\n  if (typeof globalThis.crypto === \"undefined\" || typeof globalThis.crypto.subtle?.verify !== \"function\") {\n    throw new SolanaError(SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED);\n  }\n}\n\nexport { assertDigestCapabilityIsAvailable, assertKeyExporterIsAvailable, assertKeyGenerationIsAvailable, assertPRNGIsAvailable, assertSigningCapabilityIsAvailable, assertVerificationCapabilityIsAvailable };\n//# sourceMappingURL=index.browser.mjs.map\n//# sourceMappingURL=index.browser.mjs.map",null,"// ../build-scripts/env-shim.ts\nvar __DEV__ = /* @__PURE__ */ (() => process[\"env\"].NODE_ENV === \"development\")();\n\n// src/codes.ts\nvar SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED = 1;\nvar SOLANA_ERROR__INVALID_NONCE = 2;\nvar SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND = 3;\nvar SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE = 4;\nvar SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH = 5;\nvar SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE = 6;\nvar SOLANA_ERROR__MALFORMED_BIGINT_STRING = 7;\nvar SOLANA_ERROR__MALFORMED_NUMBER_STRING = 8;\nvar SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE = 9;\nvar SOLANA_ERROR__JSON_RPC__PARSE_ERROR = -32700;\nvar SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR = -32603;\nvar SOLANA_ERROR__JSON_RPC__INVALID_PARAMS = -32602;\nvar SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND = -32601;\nvar SOLANA_ERROR__JSON_RPC__INVALID_REQUEST = -32600;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED = -32016;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION = -32015;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET = -32014;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH = -32013;\nvar SOLANA_ERROR__JSON_RPC__SCAN_ERROR = -32012;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE = -32011;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX = -32010;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED = -32009;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT = -32008;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED = -32007;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE = -32006;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY = -32005;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE = -32004;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE = -32003;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE = -32002;\nvar SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP = -32001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH = 28e5;\nvar SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE = 2800001;\nvar SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS = 2800002;\nvar SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY = 2800003;\nvar SOLANA_ERROR__ADDRESSES__MALFORMED_PDA = 2800004;\nvar SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE = 2800005;\nvar SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED = 2800006;\nvar SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED = 2800007;\nvar SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE = 2800008;\nvar SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED = 2800009;\nvar SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER = 2800010;\nvar SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND = 323e4;\nvar SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND = 32300001;\nvar SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT = 3230002;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT = 3230003;\nvar SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED = 3230004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT = 361e4;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED = 3610001;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED = 3610002;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED = 3610003;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED = 3610004;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED = 3610005;\nvar SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED = 3610006;\nvar SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH = 3704e3;\nvar SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH = 3704001;\nvar SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH = 3704002;\nvar SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE = 3704003;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS = 4128e3;\nvar SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA = 4128001;\nvar SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH = 4128002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN = 4615e3;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR = 4615001;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT = 4615002;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA = 4615003;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA = 4615004;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL = 4615005;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS = 4615006;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID = 4615007;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE = 4615008;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED = 4615009;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT = 4615010;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION = 4615011;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID = 4615012;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND = 4615013;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED = 4615014;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE = 4615015;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED = 4615016;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX = 4615017;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED = 4615018;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED = 4615019;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS = 4615020;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED = 4615021;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE = 4615022;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED = 4615023;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 4615024;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC = 4615025;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM = 4615026;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR = 4615027;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED = 4615028;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE = 4615029;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT = 4615030;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID = 4615031;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH = 4615032;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT = 4615033;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED = 4615034;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4615035;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS = 4615036;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC = 4615037;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED = 4615038;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION = 4615039;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE = 4615040;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE = 4615041;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE = 4615042;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE = 4615043;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY = 4615044;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR = 4615045;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT = 4615046;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER = 4615047;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW = 4615048;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR = 4615049;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER = 4615050;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED = 4615051;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED = 4615052;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED = 4615053;\nvar SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS = 4615054;\nvar SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS = 5508e3;\nvar SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER = 5508001;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER = 5508002;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER = 5508003;\nvar SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER = 5508004;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER = 5508005;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER = 5508006;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER = 5508007;\nvar SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER = 5508008;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS = 5508009;\nvar SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING = 5508010;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES = 5663e3;\nvar SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE = 5663001;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME = 5663002;\nvar SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME = 5663003;\nvar SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE = 5663004;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING = 5663005;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE = 5663006;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND = 5663007;\nvar SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING = 5663008;\nvar SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING = 5663009;\nvar SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING = 5663010;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING = 5663011;\nvar SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING = 5663012;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING = 5663013;\nvar SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE = 5663014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN = 705e4;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE = 7050001;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE = 7050002;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND = 7050003;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND = 7050004;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE = 7050005;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE = 7050006;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED = 7050007;\nvar SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND = 7050008;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP = 7050009;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE = 7050010;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX = 7050011;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE = 7050012;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION = 7050013;\nvar SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE = 7050014;\nvar SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE = 7050015;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING = 7050016;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT = 7050017;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION = 7050018;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT = 7050019;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT = 7050020;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT = 7050021;\nvar SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS = 7050022;\nvar SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND = 7050023;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER = 7050024;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA = 7050025;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX = 7050026;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT = 7050027;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT = 7050028;\nvar SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT = 7050029;\nvar SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION = 7050030;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT = 7050031;\nvar SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED = 7050032;\nvar SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT = 7050033;\nvar SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED = 7050034;\nvar SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED = 7050035;\nvar SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION = 7050036;\nvar SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY = 8078e3;\nvar SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH = 8078001;\nvar SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH = 8078002;\nvar SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH = 8078003;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH = 8078004;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH = 8078005;\nvar SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH = 8078006;\nvar SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS = 8078007;\nvar SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE = 8078008;\nvar SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT = 8078009;\nvar SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT = 8078010;\nvar SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE = 8078011;\nvar SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE = 8078012;\nvar SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH = 8078013;\nvar SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE = 8078014;\nvar SOLANA_ERROR__RPC__INTEGER_OVERFLOW = 81e5;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN = 8100001;\nvar SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR = 8100002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST = 819e4;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID = 8190001;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED = 8190002;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED = 8190003;\nvar SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT = 8190004;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING = 99e5;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE = 9900001;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING = 9900002;\nvar SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE = 9900003;\n\n// src/messages.ts\nvar SolanaErrorMessages = {\n  [SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND]: \"Account not found at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED]: \"Not all accounts were decoded. Encoded accounts found at addresses: $addresses.\",\n  [SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT]: \"Expected decoded account at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT]: \"Failed to decode account data at address: $address\",\n  [SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND]: \"Accounts not found at addresses: $addresses\",\n  [SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED]: \"Unable to find a viable program address bump seed.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS]: \"$putativeAddress is not a base58-encoded address.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH]: \"Expected base58 encoded address to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY]: \"The `CryptoKey` must be an `Ed25519` public key.\",\n  [SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE]: \"Invalid seeds; point must fall off the Ed25519 curve.\",\n  [SOLANA_ERROR__ADDRESSES__MALFORMED_PDA]: \"Expected given program derived address to have the following format: [Address, ProgramDerivedAddressBump].\",\n  [SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED]: \"A maximum of $maxSeeds seeds, including the bump seed, may be supplied when creating an address. Received: $actual.\",\n  [SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED]: \"The seed at index $index with length $actual exceeds the maximum length of $maxSeedLength bytes.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE]: \"Expected program derived address bump to be in the range [0, 255], got: $bump.\",\n  [SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER]: \"Program address cannot end with PDA marker.\",\n  [SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded address string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded blockash string of length in the range [32, 44]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED]: \"The network has progressed past the last block for which this transaction could have been committed.\",\n  [SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY]: \"Codec [$codecDescription] cannot decode empty byte arrays.\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH]: \"Encoder and decoder must have the same fixed size, got [$encoderFixedSize] and [$decoderFixedSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH]: \"Encoder and decoder must have the same max size, got [$encoderMaxSize] and [$decoderMaxSize].\",\n  [SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH]: \"Encoder and decoder must either both be fixed-size or variable-size.\",\n  [SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE]: \"Enum discriminator out of range. Expected a number between $minRange and $maxRange, got $discriminator.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH]: \"Expected a fixed-size codec, got a variable-size one.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH]: \"Codec [$codecDescription] expected a positive byte length, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH]: \"Expected a variable-size codec, got a fixed-size one.\",\n  [SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH]: \"Codec [$codecDescription] expected $expected bytes, got $bytesLength.\",\n  [SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT]: \"Invalid data enum variant. Expected one of [$variants], got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS]: \"Expected [$codecDescription] to have $expected items, got $actual.\",\n  [SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT]: \"Invalid scalar enum variant. Expected one of [$variants] or a number between $minRange and $maxRange, got $value.\",\n  [SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE]: \"Invalid value $value for base $base with alphabet $alphabet.\",\n  [SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE]: \"Codec [$codecDescription] expected number to be in the range [$min, $max], got $value.\",\n  [SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE]: \"Codec [$codecDescription] expected offset to be in the range [0, $bytesLength], got $offset.\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED]: \"instruction requires an uninitialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED]: \"instruction tries to borrow reference for an account which is already borrowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"instruction left account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED]: \"program other than the account's owner changed the size of the account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL]: \"account data too small for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE]: \"instruction expected an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT]: \"An account does not have enough lamports to be rent-exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW]: \"Program arithmetic overflowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR]: \"Failed to serialize or deserialize account data: $encodedData\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS]: \"Builtin programs must consume compute units\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH]: \"Cross-program invocation call depth too deep\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED]: \"Computational budget exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM]: \"custom program error: #$code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX]: \"instruction contains duplicate accounts\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC]: \"instruction modifications of multiply-passed account differ\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT]: \"executable accounts must be rent exempt\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED]: \"instruction changed executable accounts data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE]: \"instruction changed the balance of an executable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED]: \"instruction changed executable bit of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED]: \"instruction modified data of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND]: \"instruction spent from the balance of an account it does not own\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR]: \"generic instruction error\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER]: \"Provided owner is not allowed\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE]: \"Account is immutable\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY]: \"Incorrect authority provided\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID]: \"incorrect program id for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS]: \"insufficient funds for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA]: \"invalid account data for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER]: \"Invalid account owner\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT]: \"invalid program argument\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR]: \"program returned invalid error code\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA]: \"invalid instruction data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC]: \"Failed to reallocate account data\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS]: \"Provided seeds do not result in a valid address\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED]: \"Accounts data allocations exceeded the maximum allowed per transaction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED]: \"Max accounts exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED]: \"Max instruction trace length exceeded\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED]: \"Length of the seed is too long for address generation\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT]: \"An account required by the instruction is missing\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE]: \"missing required signature for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID]: \"instruction illegally modified the program id of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS]: \"insufficient account keys for instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION]: \"Cross-program invocation with unauthorized signer or writable account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE]: \"Failed to create program execution environment\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE]: \"Program failed to compile\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE]: \"Program failed to complete\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED]: \"instruction modified data of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE]: \"instruction changed the balance of a read-only account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED]: \"Cross-program invocation reentrancy not allowed for this instruction\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED]: \"instruction modified rent epoch of an account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION]: \"sum of account balances before and after instruction do not match\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT]: \"instruction requires an initialized account\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN]: \"\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID]: \"Unsupported program id\",\n  [SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR]: \"Unsupported sysvar\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS]: \"The instruction does not have any accounts.\",\n  [SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA]: \"The instruction does not have any data.\",\n  [SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH]: \"Expected instruction to have progress address $expectedProgramAddress, got $actualProgramAddress.\",\n  [SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH]: \"Expected base58 encoded blockhash to decode to a byte array of length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__INVALID_NONCE]: \"The nonce `$expectedNonceValue` is no longer valid. It has advanced to `$actualNonceValue`\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING]: \"Invariant violation: Found no abortable iterable cache entry for key `$cacheKey`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE]: \"Invariant violation: Switch statement non-exhaustive. Received unexpected value `$unexpectedValue`. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE]: \"Invariant violation: WebSocket message iterator state is corrupt; iterated without first resolving existing message promise. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING]: \"Invariant violation: WebSocket message iterator is missing state storage. It should be impossible to hit this error; please file an issue at https://sola.na/web3invariant\",\n  [SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR]: \"JSON-RPC error: Internal JSON-RPC error ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_PARAMS]: \"JSON-RPC error: Invalid method parameter(s) ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__INVALID_REQUEST]: \"JSON-RPC error: The JSON sent is not a valid `Request` object ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND]: \"JSON-RPC error: The method does not exist / is not available ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__PARSE_ERROR]: \"JSON-RPC error: An error occurred on the server while parsing the JSON text ($__serverMessage)\",\n  [SOLANA_ERROR__JSON_RPC__SCAN_ERROR]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED]: \"Minimum context slot has not been reached\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY]: \"Node is unhealthy; behind by $numSlotsBehind slots\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT]: \"No snapshot\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE]: \"Transaction simulation failed\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE]: \"Transaction history is not available from this node\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE]: \"$__serverMessage\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH]: \"Transaction signature length mismatch\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE]: \"Transaction signature verification failure\",\n  [SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION]: \"$__serverMessage\",\n  [SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH]: \"Key pair bytes must be of length 64, got $byteLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH]: \"Expected private key bytes with length 32. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH]: \"Expected base58-encoded signature to decode to a byte array of length 64. Actual length: $actualLength.\",\n  [SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE]: \"Expected base58-encoded signature string of length in the range [64, 88]. Actual length: $actualLength.\",\n  [SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE]: \"Lamports value must be in the range [0, 2e64-1]\",\n  [SOLANA_ERROR__MALFORMED_BIGINT_STRING]: \"`$value` cannot be parsed as a `BigInt`\",\n  [SOLANA_ERROR__MALFORMED_NUMBER_STRING]: \"`$value` cannot be parsed as a `Number`\",\n  [SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND]: \"No nonce account could be found at address `$nonceAccountAddress`\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST]: \"Either the notification name must end in 'Notifications' or the API must supply a subscription creator function for the notification '$notificationName' to map between the notification name and the subscribe/unsubscribe method names.\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID]: \"Failed to obtain a subscription id from the server\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED]: \"WebSocket was closed before payload could be added to the send buffer\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED]: \"WebSocket connection closed\",\n  [SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT]: \"WebSocket failed to connect\",\n  [SOLANA_ERROR__RPC__INTEGER_OVERFLOW]: \"The $argumentLabel argument to the `$methodName` RPC method$optionalPathLabel was `$value`. This number is unsafe for use with the Solana JSON-RPC because it exceeds `Number.MAX_SAFE_INTEGER`.\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR]: \"HTTP error ($statusCode): $message\",\n  [SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN]: \"HTTP header(s) forbidden: $headers. Learn more at https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name.\",\n  [SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS]: \"Multiple distinct signers were identified for address `$address`. Please ensure that you are using the same signer instance for each address.\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER]: \"The provided value does not implement the `KeyPairSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER]: \"The provided value does not implement the `MessageModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER]: \"The provided value does not implement the `MessagePartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER]: \"The provided value does not implement any of the `MessageSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER]: \"The provided value does not implement the `TransactionModifyingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER]: \"The provided value does not implement the `TransactionPartialSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER]: \"The provided value does not implement the `TransactionSendingSigner` interface\",\n  [SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER]: \"The provided value does not implement any of the `TransactionSigner` interfaces\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS]: \"More than one `TransactionSendingSigner` was identified.\",\n  [SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING]: \"No `TransactionSendingSigner` was identified. Please provide a valid `ITransactionWithSingleSendingSigner` transaction.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED]: \"No digest implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT]: \"Cryptographic operations are only allowed in secure browser contexts. Read more here: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED]: \"This runtime does not support the generation of Ed25519 key pairs.\\n\\nInstall and import `@solana/webcrypto-ed25519-polyfill` before generating keys in environments that do not support Ed25519.\\n\\nFor a list of runtimes that currently support Ed25519 operations, visit https://github.com/WICG/webcrypto-secure-curves/issues/20.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED]: \"No signature verification implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED]: \"No key generation implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED]: \"No signing implementation could be found.\",\n  [SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED]: \"No key export implementation could be found.\",\n  [SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE]: \"Timestamp value must be in the range [-8.64e15, 8.64e15]. `$value` given\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING]: \"Transaction processing left an account with an outstanding borrowed reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE]: \"Account in use\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE]: \"Account loaded twice\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND]: \"Attempt to debit an account but found no record of a prior credit.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND]: \"Transaction loads an address table account that doesn't exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED]: \"This transaction has already been processed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND]: \"Blockhash not found\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP]: \"Loader call chain is too deep\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE]: \"Transactions are currently disabled due to cluster maintenance\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION]: \"Transaction contains a duplicate instruction ($index) that is not allowed\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE]: \"Insufficient funds for fee\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT]: \"Transaction results in an account ($accountIndex) with insufficient funds for rent\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE]: \"This account may not be used to pay transaction fees\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX]: \"Transaction contains an invalid account reference\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA]: \"Transaction loads an address table account with invalid data\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX]: \"Transaction address table lookup uses an invalid index\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER]: \"Transaction loads an address table account with an invalid owner\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT]: \"LoadedAccountsDataSizeLimit set for transaction must be greater than 0.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION]: \"This program may not be used for executing instructions\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT]: \"Transaction leaves an account with a lower balance than rent-exempt minimum\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT]: \"Transaction loads a writable account that cannot be written\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED]: \"Transaction exceeded max loaded accounts data size cap\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE]: \"Transaction requires a fee but has no signature present\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND]: \"Attempt to load a program that does not exist\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED]: \"Execution of the program referenced by account at index $accountIndex is temporarily restricted.\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED]: \"ResanitizationNeeded\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE]: \"Transaction failed to sanitize accounts offsets correctly\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE]: \"Transaction did not pass signature verification\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS]: \"Transaction locked too many accounts\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION]: \"Sum of account balances before and after transaction do not match\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN]: \"The transaction failed with the error `$errorName`\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION]: \"Transaction version is unsupported\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT]: \"Transaction would exceed account data limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT]: \"Transaction would exceed total account data limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT]: \"Transaction would exceed max account limit within the block\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT]: \"Transaction would exceed max Block Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT]: \"Transaction would exceed max Vote Cost Limit\",\n  [SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING]: \"Transaction is missing an address at index: $index.\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME]: \"Transaction does not have a blockhash lifetime\",\n  [SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME]: \"Transaction is not a durable nonce transaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING]: \"Contents of these address lookup tables unknown: $lookupTableAddresses\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE]: \"Lookup of address at index $highestRequestedIndex failed for lookup table `$lookupTableAddress`. Highest known index is $highestKnownIndex. The lookup table may have been extended since its contents were retrieved\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING]: \"No fee payer set in CompiledTransaction\",\n  [SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND]: \"Could not find program address at index $index\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING]: \"Transaction is missing a fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING]: \"Could not determine this transaction's signature. Make sure that the transaction has been signed by its fee payer.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE]: \"Transaction first instruction is not advance nonce account instruction.\",\n  [SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING]: \"Transaction with no instructions cannot be durable nonce transaction.\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES]: \"This transaction includes an address (`$programAddress`) which is both invoked and set as the fee payer. Program addresses may not pay fees\",\n  [SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE]: \"This transaction includes an address (`$programAddress`) which is both invoked and marked writable. Program addresses may not be writable\",\n  [SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING]: \"Transaction is missing signatures for addresses: $addresses.\",\n  [SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE]: \"Transaction version must be in the range [0, 127]. `$actualVersion` given\"\n};\n\n// src/message-formatter.ts\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    return (\n      /* \"[\" */\n      \"%5B\" + value.map(\n        (element) => typeof element === \"string\" ? encodeURIComponent(`\"${element.replace(/\"/g, '\\\\\"')}\"`) : encodeValue(element)\n      ).join(\n        /* \", \" */\n        \"%2C%20\"\n      ) + /* \"]\" */\n      \"%5D\"\n    );\n  } else if (typeof value === \"bigint\") {\n    return `${value}n`;\n  } else {\n    return encodeURIComponent(\n      String(\n        value != null && Object.getPrototypeOf(value) === null ? (\n          // Plain objects with no protoype don't have a `toString` method.\n          // Convert them before stringifying them.\n          { ...value }\n        ) : value\n      )\n    );\n  }\n}\nfunction encodeObjectContextEntry([key, value]) {\n  return `${key}=${encodeValue(value)}`;\n}\nfunction encodeContextObject(context) {\n  return Object.entries(context).map(encodeObjectContextEntry).join(\"&\");\n}\nfunction getHumanReadableErrorMessage(code, context = {}) {\n  const messageFormatString = SolanaErrorMessages[code];\n  const message = messageFormatString.replace(\n    /(?<!\\\\)\\$(\\w+)/g,\n    (substring, variableName) => variableName in context ? `${context[variableName]}` : substring\n  );\n  return message;\n}\nfunction getErrorMessage(code, context = {}) {\n  if (__DEV__) {\n    return getHumanReadableErrorMessage(code, context);\n  } else {\n    let decodingAdviceMessage = `Solana error #${code}; Decode this error by running \\`npx @solana/errors decode ${code}`;\n    if (Object.keys(context).length) {\n      decodingAdviceMessage += ` $\"${encodeContextObject(context)}\"`;\n    }\n    return `${decodingAdviceMessage}\\``;\n  }\n}\n\n// src/error.ts\nfunction isSolanaError(e, code) {\n  const isSolanaError2 = e instanceof Error && e.name === \"SolanaError\";\n  if (isSolanaError2) {\n    if (code !== void 0) {\n      return e.context.__code === code;\n    }\n    return true;\n  }\n  return false;\n}\nvar SolanaError = class extends Error {\n  context;\n  constructor(...[code, contextAndErrorOptions]) {\n    let context;\n    let errorOptions;\n    if (contextAndErrorOptions) {\n      const { cause, ...contextRest } = contextAndErrorOptions;\n      if (cause) {\n        errorOptions = { cause };\n      }\n      if (Object.keys(contextRest).length > 0) {\n        context = contextRest;\n      }\n    }\n    const message = getErrorMessage(code, context);\n    super(message, errorOptions);\n    this.context = {\n      __code: code,\n      ...context\n    };\n    this.name = \"SolanaError\";\n  }\n};\n\n// src/stack-trace.ts\nfunction safeCaptureStackTrace(...args) {\n  if (\"captureStackTrace\" in Error && typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(...args);\n  }\n}\n\n// src/rpc-enum-errors.ts\nfunction getSolanaErrorFromRpcError({ errorCodeBaseOffset, getErrorContext, orderedErrorNames, rpcEnumError }, constructorOpt) {\n  let rpcErrorName;\n  let rpcErrorContext;\n  if (typeof rpcEnumError === \"string\") {\n    rpcErrorName = rpcEnumError;\n  } else {\n    rpcErrorName = Object.keys(rpcEnumError)[0];\n    rpcErrorContext = rpcEnumError[rpcErrorName];\n  }\n  const codeOffset = orderedErrorNames.indexOf(rpcErrorName);\n  const errorCode = errorCodeBaseOffset + codeOffset;\n  const errorContext = getErrorContext(errorCode, rpcErrorName, rpcErrorContext);\n  const err = new SolanaError(errorCode, errorContext);\n  safeCaptureStackTrace(err, constructorOpt);\n  return err;\n}\n\n// src/instruction-error.ts\nvar ORDERED_ERROR_NAMES = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/program/src/instruction.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"GenericError\",\n  \"InvalidArgument\",\n  \"InvalidInstructionData\",\n  \"InvalidAccountData\",\n  \"AccountDataTooSmall\",\n  \"InsufficientFunds\",\n  \"IncorrectProgramId\",\n  \"MissingRequiredSignature\",\n  \"AccountAlreadyInitialized\",\n  \"UninitializedAccount\",\n  \"UnbalancedInstruction\",\n  \"ModifiedProgramId\",\n  \"ExternalAccountLamportSpend\",\n  \"ExternalAccountDataModified\",\n  \"ReadonlyLamportChange\",\n  \"ReadonlyDataModified\",\n  \"DuplicateAccountIndex\",\n  \"ExecutableModified\",\n  \"RentEpochModified\",\n  \"NotEnoughAccountKeys\",\n  \"AccountDataSizeChanged\",\n  \"AccountNotExecutable\",\n  \"AccountBorrowFailed\",\n  \"AccountBorrowOutstanding\",\n  \"DuplicateAccountOutOfSync\",\n  \"Custom\",\n  \"InvalidError\",\n  \"ExecutableDataModified\",\n  \"ExecutableLamportChange\",\n  \"ExecutableAccountNotRentExempt\",\n  \"UnsupportedProgramId\",\n  \"CallDepth\",\n  \"MissingAccount\",\n  \"ReentrancyNotAllowed\",\n  \"MaxSeedLengthExceeded\",\n  \"InvalidSeeds\",\n  \"InvalidRealloc\",\n  \"ComputationalBudgetExceeded\",\n  \"PrivilegeEscalation\",\n  \"ProgramEnvironmentSetupFailure\",\n  \"ProgramFailedToComplete\",\n  \"ProgramFailedToCompile\",\n  \"Immutable\",\n  \"IncorrectAuthority\",\n  \"BorshIoError\",\n  \"AccountNotRentExempt\",\n  \"InvalidAccountOwner\",\n  \"ArithmeticOverflow\",\n  \"UnsupportedSysvar\",\n  \"IllegalOwner\",\n  \"MaxAccountsDataAllocationsExceeded\",\n  \"MaxAccountsExceeded\",\n  \"MaxInstructionTraceLengthExceeded\",\n  \"BuiltinProgramsMustConsumeComputeUnits\"\n];\nfunction getSolanaErrorFromInstructionError(index, instructionError) {\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 4615001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            index,\n            ...rpcErrorContext !== void 0 ? { instructionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM) {\n          return {\n            code: rpcErrorContext,\n            index\n          };\n        } else if (errorCode === SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR) {\n          return {\n            encodedData: rpcErrorContext,\n            index\n          };\n        }\n        return { index };\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES,\n      rpcEnumError: instructionError\n    },\n    getSolanaErrorFromInstructionError\n  );\n}\n\n// src/transaction-error.ts\nvar ORDERED_ERROR_NAMES2 = [\n  // Keep synced with RPC source: https://github.com/anza-xyz/agave/blob/master/sdk/src/transaction/error.rs\n  // If this list ever gets too large, consider implementing a compression strategy like this:\n  // https://gist.github.com/steveluscher/aaa7cbbb5433b1197983908a40860c47\n  \"AccountInUse\",\n  \"AccountLoadedTwice\",\n  \"AccountNotFound\",\n  \"ProgramAccountNotFound\",\n  \"InsufficientFundsForFee\",\n  \"InvalidAccountForFee\",\n  \"AlreadyProcessed\",\n  \"BlockhashNotFound\",\n  // `InstructionError` intentionally omitted; delegated to `getSolanaErrorFromInstructionError`\n  \"CallChainTooDeep\",\n  \"MissingSignatureForFee\",\n  \"InvalidAccountIndex\",\n  \"SignatureFailure\",\n  \"InvalidProgramForExecution\",\n  \"SanitizeFailure\",\n  \"ClusterMaintenance\",\n  \"AccountBorrowOutstanding\",\n  \"WouldExceedMaxBlockCostLimit\",\n  \"UnsupportedVersion\",\n  \"InvalidWritableAccount\",\n  \"WouldExceedMaxAccountCostLimit\",\n  \"WouldExceedAccountDataBlockLimit\",\n  \"TooManyAccountLocks\",\n  \"AddressLookupTableNotFound\",\n  \"InvalidAddressLookupTableOwner\",\n  \"InvalidAddressLookupTableData\",\n  \"InvalidAddressLookupTableIndex\",\n  \"InvalidRentPayingAccount\",\n  \"WouldExceedMaxVoteCostLimit\",\n  \"WouldExceedAccountDataTotalLimit\",\n  \"DuplicateInstruction\",\n  \"InsufficientFundsForRent\",\n  \"MaxLoadedAccountsDataSizeExceeded\",\n  \"InvalidLoadedAccountsDataSizeLimit\",\n  \"ResanitizationNeeded\",\n  \"ProgramExecutionTemporarilyRestricted\",\n  \"UnbalancedTransaction\"\n];\nfunction getSolanaErrorFromTransactionError(transactionError) {\n  if (typeof transactionError === \"object\" && \"InstructionError\" in transactionError) {\n    return getSolanaErrorFromInstructionError(\n      ...transactionError.InstructionError\n    );\n  }\n  return getSolanaErrorFromRpcError(\n    {\n      errorCodeBaseOffset: 7050001,\n      getErrorContext(errorCode, rpcErrorName, rpcErrorContext) {\n        if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN) {\n          return {\n            errorName: rpcErrorName,\n            ...rpcErrorContext !== void 0 ? { transactionErrorContext: rpcErrorContext } : null\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION) {\n          return {\n            index: rpcErrorContext\n          };\n        } else if (errorCode === SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT || errorCode === SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED) {\n          return {\n            accountIndex: rpcErrorContext.account_index\n          };\n        }\n      },\n      orderedErrorNames: ORDERED_ERROR_NAMES2,\n      rpcEnumError: transactionError\n    },\n    getSolanaErrorFromTransactionError\n  );\n}\n\n// src/json-rpc-error.ts\nfunction getSolanaErrorFromJsonRpcError({ code, data, message }) {\n  let out;\n  if (code === SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE) {\n    const { err, ...preflightErrorContext } = data;\n    const causeObject = err ? { cause: getSolanaErrorFromTransactionError(err) } : null;\n    out = new SolanaError(SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, {\n      ...preflightErrorContext,\n      ...causeObject\n    });\n  } else {\n    let errorContext;\n    switch (code) {\n      case SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR:\n      case SOLANA_ERROR__JSON_RPC__INVALID_PARAMS:\n      case SOLANA_ERROR__JSON_RPC__INVALID_REQUEST:\n      case SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND:\n      case SOLANA_ERROR__JSON_RPC__PARSE_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SCAN_ERROR:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:\n      case SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:\n        errorContext = { __serverMessage: message };\n        break;\n      default:\n        if (typeof data === \"object\" && !Array.isArray(data)) {\n          errorContext = data;\n        }\n    }\n    out = new SolanaError(code, errorContext);\n  }\n  safeCaptureStackTrace(out, getSolanaErrorFromJsonRpcError);\n  return out;\n}\n\nexport { SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND, SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED, SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT, SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT, SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND, SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED, SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS, SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH, SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY, SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE, SOLANA_ERROR__ADDRESSES__MALFORMED_PDA, SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED, SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE, SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER, SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW, SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS, SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH, SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX, SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND, SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY, SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC, SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE, SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS, SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE, SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE, SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED, SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED, SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION, SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT, SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID, SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS, SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA, SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH, SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH, SOLANA_ERROR__INVALID_NONCE, SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING, SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE, SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE, SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING, SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR, SOLANA_ERROR__JSON_RPC__INVALID_PARAMS, SOLANA_ERROR__JSON_RPC__INVALID_REQUEST, SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND, SOLANA_ERROR__JSON_RPC__PARSE_ERROR, SOLANA_ERROR__JSON_RPC__SCAN_ERROR, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE, SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION, SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH, SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH, SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE, SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE, SOLANA_ERROR__MALFORMED_BIGINT_STRING, SOLANA_ERROR__MALFORMED_NUMBER_STRING, SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND, SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST, SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED, SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT, SOLANA_ERROR__RPC__INTEGER_OVERFLOW, SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR, SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN, SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS, SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER, SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER, SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS, SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING, SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT, SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED, SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE, SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED, SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP, SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE, SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT, SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED, SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND, SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED, SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED, SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE, SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS, SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION, SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN, SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT, SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT, SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING, SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME, SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND, SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING, SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE, SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES, SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE, SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING, SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE, SolanaError, getSolanaErrorFromInstructionError, getSolanaErrorFromJsonRpcError, getSolanaErrorFromTransactionError, isSolanaError, safeCaptureStackTrace };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.js.map","import { SolanaError, SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH, SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH, SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH } from '@solana/errors';\n\n// src/assertions.ts\nfunction assertByteArrayIsNotEmptyForCodec(codecDescription, bytes, offset = 0) {\n  if (bytes.length - offset <= 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY, {\n      codecDescription\n    });\n  }\n}\nfunction assertByteArrayHasEnoughBytesForCodec(codecDescription, expected, bytes, offset = 0) {\n  const bytesLength = bytes.length - offset;\n  if (bytesLength < expected) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH, {\n      bytesLength,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction assertByteArrayOffsetIsNotOutOfRange(codecDescription, offset, bytesLength) {\n  if (offset < 0 || offset > bytesLength) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE, {\n      bytesLength,\n      codecDescription,\n      offset\n    });\n  }\n}\n\n// src/bytes.ts\nvar mergeBytes = (byteArrays) => {\n  const nonEmptyByteArrays = byteArrays.filter((arr) => arr.length);\n  if (nonEmptyByteArrays.length === 0) {\n    return byteArrays.length ? byteArrays[0] : new Uint8Array();\n  }\n  if (nonEmptyByteArrays.length === 1) {\n    return nonEmptyByteArrays[0];\n  }\n  const totalLength = nonEmptyByteArrays.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  nonEmptyByteArrays.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\nvar padBytes = (bytes, length) => {\n  if (bytes.length >= length)\n    return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\nvar fixBytes = (bytes, length) => padBytes(bytes.length <= length ? bytes : bytes.slice(0, length), length);\nfunction getEncodedSize(value, encoder) {\n  return \"fixedSize\" in encoder ? encoder.fixedSize : encoder.getSizeFromValue(value);\n}\nfunction createEncoder(encoder) {\n  return Object.freeze({\n    ...encoder,\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, encoder));\n      encoder.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction createDecoder(decoder) {\n  return Object.freeze({\n    ...decoder,\n    decode: (bytes, offset = 0) => decoder.read(bytes, offset)[0]\n  });\n}\nfunction createCodec(codec) {\n  return Object.freeze({\n    ...codec,\n    decode: (bytes, offset = 0) => codec.read(bytes, offset)[0],\n    encode: (value) => {\n      const bytes = new Uint8Array(getEncodedSize(value, codec));\n      codec.write(value, bytes, 0);\n      return bytes;\n    }\n  });\n}\nfunction isFixedSize(codec) {\n  return \"fixedSize\" in codec && typeof codec.fixedSize === \"number\";\n}\nfunction assertIsFixedSize(codec) {\n  if (!isFixedSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH);\n  }\n}\nfunction isVariableSize(codec) {\n  return !isFixedSize(codec);\n}\nfunction assertIsVariableSize(codec) {\n  if (!isVariableSize(codec)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH);\n  }\n}\nfunction combineCodec(encoder, decoder) {\n  if (isFixedSize(encoder) !== isFixedSize(decoder)) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH);\n  }\n  if (isFixedSize(encoder) && isFixedSize(decoder) && encoder.fixedSize !== decoder.fixedSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH, {\n      decoderFixedSize: decoder.fixedSize,\n      encoderFixedSize: encoder.fixedSize\n    });\n  }\n  if (!isFixedSize(encoder) && !isFixedSize(decoder) && encoder.maxSize !== decoder.maxSize) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH, {\n      decoderMaxSize: decoder.maxSize,\n      encoderMaxSize: encoder.maxSize\n    });\n  }\n  return {\n    ...decoder,\n    ...encoder,\n    decode: decoder.decode,\n    encode: encoder.encode,\n    read: decoder.read,\n    write: encoder.write\n  };\n}\n\n// src/fix-codec.ts\nfunction fixEncoder(encoder, fixedBytes) {\n  return createEncoder({\n    fixedSize: fixedBytes,\n    write: (value, bytes, offset) => {\n      const variableByteArray = encoder.encode(value);\n      const fixedByteArray = variableByteArray.length > fixedBytes ? variableByteArray.slice(0, fixedBytes) : variableByteArray;\n      bytes.set(fixedByteArray, offset);\n      return offset + fixedBytes;\n    }\n  });\n}\nfunction fixDecoder(decoder, fixedBytes) {\n  return createDecoder({\n    fixedSize: fixedBytes,\n    read: (bytes, offset) => {\n      assertByteArrayHasEnoughBytesForCodec(\"fixCodec\", fixedBytes, bytes, offset);\n      if (offset > 0 || bytes.length > fixedBytes) {\n        bytes = bytes.slice(offset, offset + fixedBytes);\n      }\n      if (isFixedSize(decoder)) {\n        bytes = fixBytes(bytes, decoder.fixedSize);\n      }\n      const [value] = decoder.read(bytes, 0);\n      return [value, offset + fixedBytes];\n    }\n  });\n}\nfunction fixCodec(codec, fixedBytes) {\n  return combineCodec(fixEncoder(codec, fixedBytes), fixDecoder(codec, fixedBytes));\n}\n\n// src/map-codec.ts\nfunction mapEncoder(encoder, unmap) {\n  return createEncoder({\n    ...isVariableSize(encoder) ? { ...encoder, getSizeFromValue: (value) => encoder.getSizeFromValue(unmap(value)) } : encoder,\n    write: (value, bytes, offset) => encoder.write(unmap(value), bytes, offset)\n  });\n}\nfunction mapDecoder(decoder, map) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const [value, newOffset] = decoder.read(bytes, offset);\n      return [map(value, bytes, offset), newOffset];\n    }\n  });\n}\nfunction mapCodec(codec, unmap, map) {\n  return createCodec({\n    ...mapEncoder(codec, unmap),\n    read: map ? mapDecoder(codec, map).read : codec.read\n  });\n}\n\n// src/offset-codec.ts\nfunction offsetEncoder(encoder, config) {\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPreOffset, bytes.length);\n      const postOffset = encoder.write(value, bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetEncoder\", newPostOffset, bytes.length);\n      return newPostOffset;\n    }\n  });\n}\nfunction offsetDecoder(decoder, config) {\n  return createDecoder({\n    ...decoder,\n    read: (bytes, preOffset) => {\n      const wrapBytes = (offset) => modulo(offset, bytes.length);\n      const newPreOffset = config.preOffset ? config.preOffset({ bytes, preOffset, wrapBytes }) : preOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPreOffset, bytes.length);\n      const [value, postOffset] = decoder.read(bytes, newPreOffset);\n      const newPostOffset = config.postOffset ? config.postOffset({ bytes, newPreOffset, postOffset, preOffset, wrapBytes }) : postOffset;\n      assertByteArrayOffsetIsNotOutOfRange(\"offsetDecoder\", newPostOffset, bytes.length);\n      return [value, newPostOffset];\n    }\n  });\n}\nfunction offsetCodec(codec, config) {\n  return combineCodec(offsetEncoder(codec, config), offsetDecoder(codec, config));\n}\nfunction modulo(dividend, divisor) {\n  if (divisor === 0)\n    return 0;\n  return (dividend % divisor + divisor) % divisor;\n}\nfunction resizeEncoder(encoder, resize) {\n  if (isFixedSize(encoder)) {\n    const fixedSize = resize(encoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeEncoder\"\n      });\n    }\n    return createEncoder({ ...encoder, fixedSize });\n  }\n  return createEncoder({\n    ...encoder,\n    getSizeFromValue: (value) => {\n      const newSize = resize(encoder.getSizeFromValue(value));\n      if (newSize < 0) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n          bytesLength: newSize,\n          codecDescription: \"resizeEncoder\"\n        });\n      }\n      return newSize;\n    }\n  });\n}\nfunction resizeDecoder(decoder, resize) {\n  if (isFixedSize(decoder)) {\n    const fixedSize = resize(decoder.fixedSize);\n    if (fixedSize < 0) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH, {\n        bytesLength: fixedSize,\n        codecDescription: \"resizeDecoder\"\n      });\n    }\n    return createDecoder({ ...decoder, fixedSize });\n  }\n  return decoder;\n}\nfunction resizeCodec(codec, resize) {\n  return combineCodec(resizeEncoder(codec, resize), resizeDecoder(codec, resize));\n}\n\n// src/pad-codec.ts\nfunction padLeftEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightEncoder(encoder, offset) {\n  return offsetEncoder(\n    resizeEncoder(encoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { preOffset: ({ preOffset }) => preOffset + offset }\n  );\n}\nfunction padRightDecoder(decoder, offset) {\n  return offsetDecoder(\n    resizeDecoder(decoder, (size) => size + offset),\n    { postOffset: ({ postOffset }) => postOffset + offset }\n  );\n}\nfunction padLeftCodec(codec, offset) {\n  return combineCodec(padLeftEncoder(codec, offset), padLeftDecoder(codec, offset));\n}\nfunction padRightCodec(codec, offset) {\n  return combineCodec(padRightEncoder(codec, offset), padRightDecoder(codec, offset));\n}\n\n// src/reverse-codec.ts\nfunction reverseEncoder(encoder) {\n  assertIsFixedSize(encoder);\n  return createEncoder({\n    ...encoder,\n    write: (value, bytes, offset) => {\n      const newOffset = encoder.write(value, bytes, offset);\n      const slice = bytes.slice(offset, offset + encoder.fixedSize).reverse();\n      bytes.set(slice, offset);\n      return newOffset;\n    }\n  });\n}\nfunction reverseDecoder(decoder) {\n  assertIsFixedSize(decoder);\n  return createDecoder({\n    ...decoder,\n    read: (bytes, offset) => {\n      const reverseEnd = offset + decoder.fixedSize;\n      if (offset === 0 && bytes.length === reverseEnd) {\n        return decoder.read(bytes.reverse(), offset);\n      }\n      const reversedBytes = bytes.slice();\n      reversedBytes.set(bytes.slice(offset, reverseEnd).reverse(), offset);\n      return decoder.read(reversedBytes, offset);\n    }\n  });\n}\nfunction reverseCodec(codec) {\n  return combineCodec(reverseEncoder(codec), reverseDecoder(codec));\n}\n\nexport { assertByteArrayHasEnoughBytesForCodec, assertByteArrayIsNotEmptyForCodec, assertByteArrayOffsetIsNotOutOfRange, assertIsFixedSize, assertIsVariableSize, combineCodec, createCodec, createDecoder, createEncoder, fixBytes, fixCodec, fixDecoder, fixEncoder, getEncodedSize, isFixedSize, isVariableSize, mapCodec, mapDecoder, mapEncoder, mergeBytes, offsetCodec, offsetDecoder, offsetEncoder, padBytes, padLeftCodec, padLeftDecoder, padLeftEncoder, padRightCodec, padRightDecoder, padRightEncoder, resizeCodec, resizeDecoder, resizeEncoder, reverseCodec, reverseDecoder, reverseEncoder };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.js.map","import { SolanaError, SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE } from '@solana/errors';\nimport { combineCodec, createEncoder, createDecoder, assertByteArrayIsNotEmptyForCodec, assertByteArrayHasEnoughBytesForCodec } from '@solana/codecs-core';\n\n// src/assertions.ts\nfunction assertNumberIsBetweenForCodec(codecDescription, min, max, value) {\n  if (value < min || value > max) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE, {\n      codecDescription,\n      max,\n      min,\n      value\n    });\n  }\n}\n\n// src/common.ts\nvar Endian = /* @__PURE__ */ ((Endian2) => {\n  Endian2[Endian2[\"LITTLE\"] = 0] = \"LITTLE\";\n  Endian2[Endian2[\"BIG\"] = 1] = \"BIG\";\n  return Endian2;\n})(Endian || {});\nfunction isLittleEndian(config) {\n  return config?.endian === 1 /* BIG */ ? false : true;\n}\nfunction numberEncoderFactory(input) {\n  return createEncoder({\n    fixedSize: input.size,\n    write(value, bytes, offset) {\n      if (input.range) {\n        assertNumberIsBetweenForCodec(input.name, input.range[0], input.range[1], value);\n      }\n      const arrayBuffer = new ArrayBuffer(input.size);\n      input.set(new DataView(arrayBuffer), value, isLittleEndian(input.config));\n      bytes.set(new Uint8Array(arrayBuffer), offset);\n      return offset + input.size;\n    }\n  });\n}\nfunction numberDecoderFactory(input) {\n  return createDecoder({\n    fixedSize: input.size,\n    read(bytes, offset = 0) {\n      assertByteArrayIsNotEmptyForCodec(input.name, bytes, offset);\n      assertByteArrayHasEnoughBytesForCodec(input.name, input.size, bytes, offset);\n      const view = new DataView(toArrayBuffer(bytes, offset, input.size));\n      return [input.get(view, isLittleEndian(input.config)), offset + input.size];\n    }\n  });\n}\nfunction toArrayBuffer(bytes, offset, length) {\n  const bytesOffset = bytes.byteOffset + (offset ?? 0);\n  const bytesLength = length ?? bytes.byteLength;\n  return bytes.buffer.slice(bytesOffset, bytesOffset + bytesLength);\n}\n\n// src/f32.ts\nvar getF32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f32\",\n  set: (view, value, le) => view.setFloat32(0, value, le),\n  size: 4\n});\nvar getF32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat32(0, le),\n  name: \"f32\",\n  size: 4\n});\nvar getF32Codec = (config = {}) => combineCodec(getF32Encoder(config), getF32Decoder(config));\nvar getF64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"f64\",\n  set: (view, value, le) => view.setFloat64(0, value, le),\n  size: 8\n});\nvar getF64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getFloat64(0, le),\n  name: \"f64\",\n  size: 8\n});\nvar getF64Codec = (config = {}) => combineCodec(getF64Encoder(config), getF64Decoder(config));\nvar getI128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i128\",\n  range: [-BigInt(\"0x7fffffffffffffffffffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getI128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"i128\",\n  size: 16\n});\nvar getI128Codec = (config = {}) => combineCodec(getI128Encoder(config), getI128Decoder(config));\nvar getI16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i16\",\n  range: [-Number(\"0x7fff\") - 1, Number(\"0x7fff\")],\n  set: (view, value, le) => view.setInt16(0, value, le),\n  size: 2\n});\nvar getI16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt16(0, le),\n  name: \"i16\",\n  size: 2\n});\nvar getI16Codec = (config = {}) => combineCodec(getI16Encoder(config), getI16Decoder(config));\nvar getI32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i32\",\n  range: [-Number(\"0x7fffffff\") - 1, Number(\"0x7fffffff\")],\n  set: (view, value, le) => view.setInt32(0, value, le),\n  size: 4\n});\nvar getI32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getInt32(0, le),\n  name: \"i32\",\n  size: 4\n});\nvar getI32Codec = (config = {}) => combineCodec(getI32Encoder(config), getI32Decoder(config));\nvar getI64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"i64\",\n  range: [-BigInt(\"0x7fffffffffffffff\") - 1n, BigInt(\"0x7fffffffffffffff\")],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  size: 8\n});\nvar getI64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigInt64(0, le),\n  name: \"i64\",\n  size: 8\n});\nvar getI64Codec = (config = {}) => combineCodec(getI64Encoder(config), getI64Decoder(config));\nvar getI8Encoder = () => numberEncoderFactory({\n  name: \"i8\",\n  range: [-Number(\"0x7f\") - 1, Number(\"0x7f\")],\n  set: (view, value) => view.setInt8(0, value),\n  size: 1\n});\nvar getI8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getInt8(0),\n  name: \"i8\",\n  size: 1\n});\nvar getI8Codec = () => combineCodec(getI8Encoder(), getI8Decoder());\nvar getShortU16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => {\n    if (value <= 127)\n      return 1;\n    if (value <= 16383)\n      return 2;\n    return 3;\n  },\n  maxSize: 3,\n  write: (value, bytes, offset) => {\n    assertNumberIsBetweenForCodec(\"shortU16\", 0, 65535, value);\n    const shortU16Bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      const alignedValue = value >> ii * 7;\n      if (alignedValue === 0) {\n        break;\n      }\n      const nextSevenBits = 127 & alignedValue;\n      shortU16Bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        shortU16Bytes[ii - 1] |= 128;\n      }\n    }\n    bytes.set(shortU16Bytes, offset);\n    return offset + shortU16Bytes.length;\n  }\n});\nvar getShortU16Decoder = () => createDecoder({\n  maxSize: 3,\n  read: (bytes, offset) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 127 & currentByte;\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 128) === 0) {\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\nvar getShortU16Codec = () => combineCodec(getShortU16Encoder(), getShortU16Decoder());\nvar getU128Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u128\",\n  range: [0n, BigInt(\"0xffffffffffffffffffffffffffffffff\")],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  size: 16\n});\nvar getU128Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  name: \"u128\",\n  size: 16\n});\nvar getU128Codec = (config = {}) => combineCodec(getU128Encoder(config), getU128Decoder(config));\nvar getU16Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u16\",\n  range: [0, Number(\"0xffff\")],\n  set: (view, value, le) => view.setUint16(0, value, le),\n  size: 2\n});\nvar getU16Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint16(0, le),\n  name: \"u16\",\n  size: 2\n});\nvar getU16Codec = (config = {}) => combineCodec(getU16Encoder(config), getU16Decoder(config));\nvar getU32Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u32\",\n  range: [0, Number(\"0xffffffff\")],\n  set: (view, value, le) => view.setUint32(0, value, le),\n  size: 4\n});\nvar getU32Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getUint32(0, le),\n  name: \"u32\",\n  size: 4\n});\nvar getU32Codec = (config = {}) => combineCodec(getU32Encoder(config), getU32Decoder(config));\nvar getU64Encoder = (config = {}) => numberEncoderFactory({\n  config,\n  name: \"u64\",\n  range: [0n, BigInt(\"0xffffffffffffffff\")],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  size: 8\n});\nvar getU64Decoder = (config = {}) => numberDecoderFactory({\n  config,\n  get: (view, le) => view.getBigUint64(0, le),\n  name: \"u64\",\n  size: 8\n});\nvar getU64Codec = (config = {}) => combineCodec(getU64Encoder(config), getU64Decoder(config));\nvar getU8Encoder = () => numberEncoderFactory({\n  name: \"u8\",\n  range: [0, Number(\"0xff\")],\n  set: (view, value) => view.setUint8(0, value),\n  size: 1\n});\nvar getU8Decoder = () => numberDecoderFactory({\n  get: (view) => view.getUint8(0),\n  name: \"u8\",\n  size: 1\n});\nvar getU8Codec = () => combineCodec(getU8Encoder(), getU8Decoder());\n\nexport { Endian, assertNumberIsBetweenForCodec, getF32Codec, getF32Decoder, getF32Encoder, getF64Codec, getF64Decoder, getF64Encoder, getI128Codec, getI128Decoder, getI128Encoder, getI16Codec, getI16Decoder, getI16Encoder, getI32Codec, getI32Decoder, getI32Encoder, getI64Codec, getI64Decoder, getI64Encoder, getI8Codec, getI8Decoder, getI8Encoder, getShortU16Codec, getShortU16Decoder, getShortU16Encoder, getU128Codec, getU128Decoder, getU128Encoder, getU16Codec, getU16Decoder, getU16Encoder, getU32Codec, getU32Decoder, getU32Encoder, getU64Codec, getU64Decoder, getU64Encoder, getU8Codec, getU8Decoder, getU8Encoder };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.js.map","import { createEncoder, getEncodedSize, createDecoder, combineCodec, assertByteArrayHasEnoughBytesForCodec, assertIsFixedSize, mapEncoder, mapDecoder, fixEncoder, fixDecoder, assertByteArrayIsNotEmptyForCodec, isFixedSize } from '@solana/codecs-core';\nimport { getU32Encoder, getU32Decoder, getU8Encoder, getU8Decoder } from '@solana/codecs-numbers';\nimport { SolanaError, SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT, SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT } from '@solana/errors';\n\n// src/array.ts\nfunction assertValidNumberOfItemsForCodec(codecDescription, expected, actual) {\n  if (expected !== actual) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS, {\n      actual,\n      codecDescription,\n      expected\n    });\n  }\n}\nfunction maxCodecSizes(sizes) {\n  return sizes.reduce(\n    (all, size) => all === null || size === null ? null : Math.max(all, size),\n    0\n  );\n}\nfunction sumCodecSizes(sizes) {\n  return sizes.reduce((all, size) => all === null || size === null ? null : all + size, 0);\n}\nfunction getFixedSize(codec) {\n  return isFixedSize(codec) ? codec.fixedSize : null;\n}\nfunction getMaxSize(codec) {\n  return isFixedSize(codec) ? codec.fixedSize : codec.maxSize ?? null;\n}\n\n// src/array.ts\nfunction getArrayEncoder(item, config = {}) {\n  const size = config.size ?? getU32Encoder();\n  const fixedSize = computeArrayLikeCodecSize(size, getFixedSize(item));\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return createEncoder({\n    ...fixedSize !== null ? { fixedSize } : {\n      getSizeFromValue: (array) => {\n        const prefixSize = typeof size === \"object\" ? getEncodedSize(array.length, size) : 0;\n        return prefixSize + [...array].reduce((all, value) => all + getEncodedSize(value, item), 0);\n      },\n      maxSize\n    },\n    write: (array, bytes, offset) => {\n      if (typeof size === \"number\") {\n        assertValidNumberOfItemsForCodec(\"array\", size, array.length);\n      }\n      if (typeof size === \"object\") {\n        offset = size.write(array.length, bytes, offset);\n      }\n      array.forEach((value) => {\n        offset = item.write(value, bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getArrayDecoder(item, config = {}) {\n  const size = config.size ?? getU32Decoder();\n  const itemSize = getFixedSize(item);\n  const fixedSize = computeArrayLikeCodecSize(size, itemSize);\n  const maxSize = computeArrayLikeCodecSize(size, getMaxSize(item)) ?? void 0;\n  return createDecoder({\n    ...fixedSize !== null ? { fixedSize } : { maxSize },\n    read: (bytes, offset) => {\n      const array = [];\n      if (typeof size === \"object\" && bytes.slice(offset).length === 0) {\n        return [array, offset];\n      }\n      if (size === \"remainder\") {\n        while (offset < bytes.length) {\n          const [value, newOffset2] = item.read(bytes, offset);\n          offset = newOffset2;\n          array.push(value);\n        }\n        return [array, offset];\n      }\n      const [resolvedSize, newOffset] = typeof size === \"number\" ? [size, offset] : size.read(bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset2] = item.read(bytes, offset);\n        offset = newOffset2;\n        array.push(value);\n      }\n      return [array, offset];\n    }\n  });\n}\nfunction getArrayCodec(item, config = {}) {\n  return combineCodec(getArrayEncoder(item, config), getArrayDecoder(item, config));\n}\nfunction computeArrayLikeCodecSize(size, itemSize) {\n  if (typeof size !== \"number\")\n    return null;\n  if (size === 0)\n    return 0;\n  return itemSize === null ? null : itemSize * size;\n}\nfunction getBitArrayEncoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return createEncoder({\n    fixedSize: size,\n    write(value, bytes, offset) {\n      const bytesToAdd = [];\n      for (let i = 0; i < size; i += 1) {\n        let byte = 0;\n        for (let j = 0; j < 8; j += 1) {\n          const feature = Number(value[i * 8 + j] ?? 0);\n          byte |= feature << (backward ? j : 7 - j);\n        }\n        if (backward) {\n          bytesToAdd.unshift(byte);\n        } else {\n          bytesToAdd.push(byte);\n        }\n      }\n      bytes.set(bytesToAdd, offset);\n      return size;\n    }\n  });\n}\nfunction getBitArrayDecoder(size, config = {}) {\n  const parsedConfig = typeof config === \"boolean\" ? { backward: config } : config;\n  const backward = parsedConfig.backward ?? false;\n  return createDecoder({\n    fixedSize: size,\n    read(bytes, offset) {\n      assertByteArrayHasEnoughBytesForCodec(\"bitArray\", size, bytes, offset);\n      const booleans = [];\n      let slice = bytes.slice(offset, offset + size);\n      slice = backward ? slice.reverse() : slice;\n      slice.forEach((byte) => {\n        for (let i = 0; i < 8; i += 1) {\n          if (backward) {\n            booleans.push(Boolean(byte & 1));\n            byte >>= 1;\n          } else {\n            booleans.push(Boolean(byte & 128));\n            byte <<= 1;\n          }\n        }\n      });\n      return [booleans, offset + size];\n    }\n  });\n}\nfunction getBitArrayCodec(size, config = {}) {\n  return combineCodec(getBitArrayEncoder(size, config), getBitArrayDecoder(size, config));\n}\nfunction getBooleanEncoder(config = {}) {\n  const size = config.size ?? getU8Encoder();\n  assertIsFixedSize(size);\n  return mapEncoder(size, (value) => value ? 1 : 0);\n}\nfunction getBooleanDecoder(config = {}) {\n  const size = config.size ?? getU8Decoder();\n  assertIsFixedSize(size);\n  return mapDecoder(size, (value) => Number(value) === 1);\n}\nfunction getBooleanCodec(config = {}) {\n  return combineCodec(getBooleanEncoder(config), getBooleanDecoder(config));\n}\nfunction getBytesEncoder(config = {}) {\n  const size = config.size ?? \"variable\";\n  const byteEncoder = createEncoder({\n    getSizeFromValue: (value) => value.length,\n    write: (value, bytes, offset) => {\n      bytes.set(value, offset);\n      return offset + value.length;\n    }\n  });\n  if (size === \"variable\") {\n    return byteEncoder;\n  }\n  if (typeof size === \"number\") {\n    return fixEncoder(byteEncoder, size);\n  }\n  return createEncoder({\n    getSizeFromValue: (value) => getEncodedSize(value.length, size) + value.length,\n    write: (value, bytes, offset) => {\n      offset = size.write(value.length, bytes, offset);\n      return byteEncoder.write(value, bytes, offset);\n    }\n  });\n}\nfunction getBytesDecoder(config = {}) {\n  const size = config.size ?? \"variable\";\n  const byteDecoder = createDecoder({\n    read: (bytes, offset) => {\n      const slice = bytes.slice(offset);\n      return [slice, offset + slice.length];\n    }\n  });\n  if (size === \"variable\") {\n    return byteDecoder;\n  }\n  if (typeof size === \"number\") {\n    return fixDecoder(byteDecoder, size);\n  }\n  return createDecoder({\n    read: (bytes, offset) => {\n      assertByteArrayIsNotEmptyForCodec(\"bytes\", bytes, offset);\n      const [lengthBigInt, lengthOffset] = size.read(bytes, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBytes = bytes.slice(offset, offset + length);\n      assertByteArrayHasEnoughBytesForCodec(\"bytes\", length, contentBytes);\n      const [value, contentOffset] = byteDecoder.read(contentBytes, 0);\n      offset += contentOffset;\n      return [value, offset];\n    }\n  });\n}\nfunction getBytesCodec(config = {}) {\n  return combineCodec(getBytesEncoder(config), getBytesDecoder(config));\n}\nfunction getDataEnumEncoder(variants, config = {}) {\n  const prefix = config.size ?? getU8Encoder();\n  const fixedSize = getDataEnumFixedSize(variants, prefix);\n  return createEncoder({\n    ...fixedSize !== null ? { fixedSize } : {\n      getSizeFromValue: (variant) => {\n        const discriminator = getVariantDiscriminator(variants, variant);\n        const variantEncoder = variants[discriminator][1];\n        return getEncodedSize(discriminator, prefix) + getEncodedSize(variant, variantEncoder);\n      },\n      maxSize: getDataEnumMaxSize(variants, prefix)\n    },\n    write: (variant, bytes, offset) => {\n      const discriminator = getVariantDiscriminator(variants, variant);\n      offset = prefix.write(discriminator, bytes, offset);\n      const variantEncoder = variants[discriminator][1];\n      return variantEncoder.write(variant, bytes, offset);\n    }\n  });\n}\nfunction getDataEnumDecoder(variants, config = {}) {\n  const prefix = config.size ?? getU8Decoder();\n  const fixedSize = getDataEnumFixedSize(variants, prefix);\n  return createDecoder({\n    ...fixedSize !== null ? { fixedSize } : { maxSize: getDataEnumMaxSize(variants, prefix) },\n    read: (bytes, offset) => {\n      assertByteArrayIsNotEmptyForCodec(\"dataEnum\", bytes, offset);\n      const [discriminator, dOffset] = prefix.read(bytes, offset);\n      offset = dOffset;\n      const variantField = variants[Number(discriminator)] ?? null;\n      if (!variantField) {\n        throw new SolanaError(SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n          discriminator,\n          maxRange: variants.length - 1,\n          minRange: 0\n        });\n      }\n      const [variant, vOffset] = variantField[1].read(bytes, offset);\n      offset = vOffset;\n      return [{ __kind: variantField[0], ...variant ?? {} }, offset];\n    }\n  });\n}\nfunction getDataEnumCodec(variants, config = {}) {\n  return combineCodec(\n    getDataEnumEncoder(variants, config),\n    getDataEnumDecoder(variants, config)\n  );\n}\nfunction getDataEnumFixedSize(variants, prefix) {\n  if (variants.length === 0)\n    return isFixedSize(prefix) ? prefix.fixedSize : null;\n  if (!isFixedSize(variants[0][1]))\n    return null;\n  const variantSize = variants[0][1].fixedSize;\n  const sameSizedVariants = variants.every(\n    (variant) => isFixedSize(variant[1]) && variant[1].fixedSize === variantSize\n  );\n  if (!sameSizedVariants)\n    return null;\n  return isFixedSize(prefix) ? prefix.fixedSize + variantSize : null;\n}\nfunction getDataEnumMaxSize(variants, prefix) {\n  const maxVariantSize = maxCodecSizes(variants.map(([, codec]) => getMaxSize(codec)));\n  return sumCodecSizes([getMaxSize(prefix), maxVariantSize]) ?? void 0;\n}\nfunction getVariantDiscriminator(variants, variant) {\n  const discriminator = variants.findIndex(([key]) => variant.__kind === key);\n  if (discriminator < 0) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT, {\n      value: variant.__kind,\n      variants: variants.map(([key]) => key)\n    });\n  }\n  return discriminator;\n}\nfunction getTupleEncoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => items.map((item, index) => getEncodedSize(value[index], item)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (value, bytes, offset) => {\n      assertValidNumberOfItemsForCodec(\"tuple\", items.length, value.length);\n      items.forEach((item, index) => {\n        offset = item.write(value[index], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getTupleDecoder(items) {\n  const fixedSize = sumCodecSizes(items.map(getFixedSize));\n  const maxSize = sumCodecSizes(items.map(getMaxSize)) ?? void 0;\n  return createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const values = [];\n      items.forEach((item) => {\n        const [newValue, newOffset] = item.read(bytes, offset);\n        values.push(newValue);\n        offset = newOffset;\n      });\n      return [values, offset];\n    }\n  });\n}\nfunction getTupleCodec(items) {\n  return combineCodec(\n    getTupleEncoder(items),\n    getTupleDecoder(items)\n  );\n}\n\n// src/map.ts\nfunction getMapEncoder(key, value, config = {}) {\n  return mapEncoder(\n    getArrayEncoder(getTupleEncoder([key, value]), config),\n    (map) => [...map.entries()]\n  );\n}\nfunction getMapDecoder(key, value, config = {}) {\n  return mapDecoder(\n    getArrayDecoder(getTupleDecoder([key, value]), config),\n    (entries) => new Map(entries)\n  );\n}\nfunction getMapCodec(key, value, config = {}) {\n  return combineCodec(getMapEncoder(key, value, config), getMapDecoder(key, value, config));\n}\nfunction getNullableEncoder(item, config = {}) {\n  const prefix = config.prefix ?? getU8Encoder();\n  const fixed = config.fixed ?? false;\n  const isZeroSizeItem = isFixedSize(item) && isFixedSize(prefix) && item.fixedSize === 0;\n  if (fixed || isZeroSizeItem) {\n    assertIsFixedSize(item);\n    assertIsFixedSize(prefix);\n    const fixedSize = prefix.fixedSize + item.fixedSize;\n    return createEncoder({\n      fixedSize,\n      write: (option, bytes, offset) => {\n        const prefixOffset = prefix.write(Number(option !== null), bytes, offset);\n        if (option !== null) {\n          item.write(option, bytes, prefixOffset);\n        }\n        return offset + fixedSize;\n      }\n    });\n  }\n  return createEncoder({\n    getSizeFromValue: (option) => getEncodedSize(Number(option !== null), prefix) + (option !== null ? getEncodedSize(option, item) : 0),\n    maxSize: sumCodecSizes([prefix, item].map(getMaxSize)) ?? void 0,\n    write: (option, bytes, offset) => {\n      offset = prefix.write(Number(option !== null), bytes, offset);\n      if (option !== null) {\n        offset = item.write(option, bytes, offset);\n      }\n      return offset;\n    }\n  });\n}\nfunction getNullableDecoder(item, config = {}) {\n  const prefix = config.prefix ?? getU8Decoder();\n  const fixed = config.fixed ?? false;\n  let fixedSize = null;\n  const isZeroSizeItem = isFixedSize(item) && isFixedSize(prefix) && item.fixedSize === 0;\n  if (fixed || isZeroSizeItem) {\n    assertIsFixedSize(item);\n    assertIsFixedSize(prefix);\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return createDecoder({\n    ...fixedSize === null ? { maxSize: sumCodecSizes([prefix, item].map(getMaxSize)) ?? void 0 } : { fixedSize },\n    read: (bytes, offset) => {\n      if (bytes.length - offset <= 0) {\n        return [null, offset];\n      }\n      const [isSome, prefixOffset] = prefix.read(bytes, offset);\n      if (isSome === 0) {\n        return [null, fixedSize !== null ? offset + fixedSize : prefixOffset];\n      }\n      const [value, newOffset] = item.read(bytes, prefixOffset);\n      return [value, fixedSize !== null ? offset + fixedSize : newOffset];\n    }\n  });\n}\nfunction getNullableCodec(item, config = {}) {\n  const configCast = config;\n  return combineCodec(getNullableEncoder(item, configCast), getNullableDecoder(item, configCast));\n}\nfunction getScalarEnumEncoder(constructor, config = {}) {\n  const prefix = config.size ?? getU8Encoder();\n  const { minRange, maxRange, allStringInputs, enumKeys, enumValues } = getScalarEnumStats(constructor);\n  return mapEncoder(prefix, (value) => {\n    const isInvalidNumber = typeof value === \"number\" && (value < minRange || value > maxRange);\n    const isInvalidString = typeof value === \"string\" && !allStringInputs.includes(value);\n    if (isInvalidNumber || isInvalidString) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT, {\n        maxRange,\n        minRange,\n        value,\n        variants: allStringInputs\n      });\n    }\n    if (typeof value === \"number\")\n      return value;\n    const valueIndex = enumValues.indexOf(value);\n    if (valueIndex >= 0)\n      return valueIndex;\n    return enumKeys.indexOf(value);\n  });\n}\nfunction getScalarEnumDecoder(constructor, config = {}) {\n  const prefix = config.size ?? getU8Decoder();\n  const { minRange, maxRange, enumKeys } = getScalarEnumStats(constructor);\n  return mapDecoder(prefix, (value) => {\n    const valueAsNumber = Number(value);\n    if (valueAsNumber < minRange || valueAsNumber > maxRange) {\n      throw new SolanaError(SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE, {\n        discriminator: valueAsNumber,\n        maxRange,\n        minRange\n      });\n    }\n    return constructor[enumKeys[valueAsNumber]];\n  });\n}\nfunction getScalarEnumCodec(constructor, config = {}) {\n  return combineCodec(getScalarEnumEncoder(constructor, config), getScalarEnumDecoder(constructor, config));\n}\nfunction getScalarEnumStats(constructor) {\n  const numericValues = Object.values(constructor).filter((v) => typeof v === \"number\");\n  const deduplicatedConstructor = Object.fromEntries(\n    Object.entries(constructor).slice(numericValues.length)\n  );\n  const enumKeys = Object.keys(deduplicatedConstructor);\n  const enumValues = Object.values(deduplicatedConstructor);\n  const minRange = 0;\n  const maxRange = enumValues.length - 1;\n  const allStringInputs = [\n    .../* @__PURE__ */ new Set([...enumKeys, ...enumValues.filter((v) => typeof v === \"string\")])\n  ];\n  return {\n    allStringInputs,\n    enumKeys,\n    enumValues,\n    maxRange,\n    minRange\n  };\n}\nfunction getSetEncoder(item, config = {}) {\n  return mapEncoder(getArrayEncoder(item, config), (set) => [...set]);\n}\nfunction getSetDecoder(item, config = {}) {\n  return mapDecoder(getArrayDecoder(item, config), (entries) => new Set(entries));\n}\nfunction getSetCodec(item, config = {}) {\n  return combineCodec(getSetEncoder(item, config), getSetDecoder(item, config));\n}\nfunction getStructEncoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return createEncoder({\n    ...fixedSize === null ? {\n      getSizeFromValue: (value) => fields.map(([key, codec]) => getEncodedSize(value[key], codec)).reduce((all, one) => all + one, 0),\n      maxSize\n    } : { fixedSize },\n    write: (struct, bytes, offset) => {\n      fields.forEach(([key, codec]) => {\n        offset = codec.write(struct[key], bytes, offset);\n      });\n      return offset;\n    }\n  });\n}\nfunction getStructDecoder(fields) {\n  const fieldCodecs = fields.map(([, codec]) => codec);\n  const fixedSize = sumCodecSizes(fieldCodecs.map(getFixedSize));\n  const maxSize = sumCodecSizes(fieldCodecs.map(getMaxSize)) ?? void 0;\n  return createDecoder({\n    ...fixedSize === null ? { maxSize } : { fixedSize },\n    read: (bytes, offset) => {\n      const struct = {};\n      fields.forEach(([key, codec]) => {\n        const [value, newOffset] = codec.read(bytes, offset);\n        offset = newOffset;\n        struct[key] = value;\n      });\n      return [struct, offset];\n    }\n  });\n}\nfunction getStructCodec(fields) {\n  return combineCodec(\n    getStructEncoder(fields),\n    getStructDecoder(fields)\n  );\n}\nfunction getUnitEncoder() {\n  return createEncoder({\n    fixedSize: 0,\n    write: (_value, _bytes, offset) => offset\n  });\n}\nfunction getUnitDecoder() {\n  return createDecoder({\n    fixedSize: 0,\n    read: (_bytes, offset) => [void 0, offset]\n  });\n}\nfunction getUnitCodec() {\n  return combineCodec(getUnitEncoder(), getUnitDecoder());\n}\n\nexport { assertValidNumberOfItemsForCodec, getArrayCodec, getArrayDecoder, getArrayEncoder, getBitArrayCodec, getBitArrayDecoder, getBitArrayEncoder, getBooleanCodec, getBooleanDecoder, getBooleanEncoder, getBytesCodec, getBytesDecoder, getBytesEncoder, getDataEnumCodec, getDataEnumDecoder, getDataEnumEncoder, getMapCodec, getMapDecoder, getMapEncoder, getNullableCodec, getNullableDecoder, getNullableEncoder, getScalarEnumCodec, getScalarEnumDecoder, getScalarEnumEncoder, getSetCodec, getSetDecoder, getSetEncoder, getStructCodec, getStructDecoder, getStructEncoder, getTupleCodec, getTupleDecoder, getTupleEncoder, getUnitCodec, getUnitDecoder, getUnitEncoder };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.js.map","import { SolanaError, SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE } from '@solana/errors';\nimport { createEncoder, createDecoder, combineCodec, fixEncoder, getEncodedSize, fixDecoder, assertByteArrayIsNotEmptyForCodec, assertByteArrayHasEnoughBytesForCodec } from '@solana/codecs-core';\nimport { getU32Encoder, getU32Decoder } from '@solana/codecs-numbers';\n\n// src/assertions.ts\nfunction assertValidBaseString(alphabet4, testValue, givenValue = testValue) {\n  if (!testValue.match(new RegExp(`^[${alphabet4}]*$`))) {\n    throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n      alphabet: alphabet4,\n      base: alphabet4.length,\n      value: givenValue\n    });\n  }\n}\nvar getBaseXEncoder = (alphabet4) => {\n  return createEncoder({\n    getSizeFromValue: (value) => {\n      const [leadingZeroes, tailChars] = partitionLeadingZeroes(value, alphabet4[0]);\n      if (!tailChars)\n        return value.length;\n      const base10Number = getBigIntFromBaseX(tailChars, alphabet4);\n      return leadingZeroes.length + Math.ceil(base10Number.toString(16).length / 2);\n    },\n    write(value, bytes, offset) {\n      assertValidBaseString(alphabet4, value);\n      if (value === \"\")\n        return offset;\n      const [leadingZeroes, tailChars] = partitionLeadingZeroes(value, alphabet4[0]);\n      if (!tailChars) {\n        bytes.set(new Uint8Array(leadingZeroes.length).fill(0), offset);\n        return offset + leadingZeroes.length;\n      }\n      let base10Number = getBigIntFromBaseX(tailChars, alphabet4);\n      const tailBytes = [];\n      while (base10Number > 0n) {\n        tailBytes.unshift(Number(base10Number % 256n));\n        base10Number /= 256n;\n      }\n      const bytesToAdd = [...Array(leadingZeroes.length).fill(0), ...tailBytes];\n      bytes.set(bytesToAdd, offset);\n      return offset + bytesToAdd.length;\n    }\n  });\n};\nvar getBaseXDecoder = (alphabet4) => {\n  return createDecoder({\n    read(rawBytes, offset) {\n      const bytes = offset === 0 ? rawBytes : rawBytes.slice(offset);\n      if (bytes.length === 0)\n        return [\"\", 0];\n      let trailIndex = bytes.findIndex((n) => n !== 0);\n      trailIndex = trailIndex === -1 ? bytes.length : trailIndex;\n      const leadingZeroes = alphabet4[0].repeat(trailIndex);\n      if (trailIndex === bytes.length)\n        return [leadingZeroes, rawBytes.length];\n      const base10Number = bytes.slice(trailIndex).reduce((sum, byte) => sum * 256n + BigInt(byte), 0n);\n      const tailChars = getBaseXFromBigInt(base10Number, alphabet4);\n      return [leadingZeroes + tailChars, rawBytes.length];\n    }\n  });\n};\nvar getBaseXCodec = (alphabet4) => combineCodec(getBaseXEncoder(alphabet4), getBaseXDecoder(alphabet4));\nfunction partitionLeadingZeroes(value, zeroCharacter) {\n  const [leadingZeros, tailChars] = value.split(new RegExp(`((?!${zeroCharacter}).*)`));\n  return [leadingZeros, tailChars];\n}\nfunction getBigIntFromBaseX(value, alphabet4) {\n  const base = BigInt(alphabet4.length);\n  let sum = 0n;\n  for (const char of value) {\n    sum *= base;\n    sum += BigInt(alphabet4.indexOf(char));\n  }\n  return sum;\n}\nfunction getBaseXFromBigInt(value, alphabet4) {\n  const base = BigInt(alphabet4.length);\n  const tailChars = [];\n  while (value > 0n) {\n    tailChars.unshift(alphabet4[Number(value % base)]);\n    value /= base;\n  }\n  return tailChars.join(\"\");\n}\n\n// src/base10.ts\nvar alphabet = \"0123456789\";\nvar getBase10Encoder = () => getBaseXEncoder(alphabet);\nvar getBase10Decoder = () => getBaseXDecoder(alphabet);\nvar getBase10Codec = () => getBaseXCodec(alphabet);\nvar getBase16Encoder = () => createEncoder({\n  getSizeFromValue: (value) => Math.ceil(value.length / 2),\n  write(value, bytes, offset) {\n    const lowercaseValue = value.toLowerCase();\n    assertValidBaseString(\"0123456789abcdef\", lowercaseValue, value);\n    const matches = lowercaseValue.match(/.{1,2}/g);\n    const hexBytes = matches ? matches.map((byte) => parseInt(byte, 16)) : [];\n    bytes.set(hexBytes, offset);\n    return hexBytes.length + offset;\n  }\n});\nvar getBase16Decoder = () => createDecoder({\n  read(bytes, offset) {\n    const value = bytes.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n    return [value, bytes.length];\n  }\n});\nvar getBase16Codec = () => combineCodec(getBase16Encoder(), getBase16Decoder());\n\n// src/base58.ts\nvar alphabet2 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nvar getBase58Encoder = () => getBaseXEncoder(alphabet2);\nvar getBase58Decoder = () => getBaseXDecoder(alphabet2);\nvar getBase58Codec = () => getBaseXCodec(alphabet2);\nvar getBaseXResliceEncoder = (alphabet4, bits) => createEncoder({\n  getSizeFromValue: (value) => Math.floor(value.length * bits / 8),\n  write(value, bytes, offset) {\n    assertValidBaseString(alphabet4, value);\n    if (value === \"\")\n      return offset;\n    const charIndices = [...value].map((c) => alphabet4.indexOf(c));\n    const reslicedBytes = reslice(charIndices, bits, 8, false);\n    bytes.set(reslicedBytes, offset);\n    return reslicedBytes.length + offset;\n  }\n});\nvar getBaseXResliceDecoder = (alphabet4, bits) => createDecoder({\n  read(rawBytes, offset = 0) {\n    const bytes = offset === 0 ? rawBytes : rawBytes.slice(offset);\n    if (bytes.length === 0)\n      return [\"\", rawBytes.length];\n    const charIndices = reslice([...bytes], 8, bits, true);\n    return [charIndices.map((i) => alphabet4[i]).join(\"\"), rawBytes.length];\n  }\n});\nvar getBaseXResliceCodec = (alphabet4, bits) => combineCodec(getBaseXResliceEncoder(alphabet4, bits), getBaseXResliceDecoder(alphabet4, bits));\nfunction reslice(input, inputBits, outputBits, useRemainder) {\n  const output = [];\n  let accumulator = 0;\n  let bitsInAccumulator = 0;\n  const mask = (1 << outputBits) - 1;\n  for (const value of input) {\n    accumulator = accumulator << inputBits | value;\n    bitsInAccumulator += inputBits;\n    while (bitsInAccumulator >= outputBits) {\n      bitsInAccumulator -= outputBits;\n      output.push(accumulator >> bitsInAccumulator & mask);\n    }\n  }\n  if (useRemainder && bitsInAccumulator > 0) {\n    output.push(accumulator << outputBits - bitsInAccumulator & mask);\n  }\n  return output;\n}\n\n// src/base64.ts\nvar alphabet3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar getBase64Encoder = () => {\n  {\n    return createEncoder({\n      getSizeFromValue: (value) => {\n        try {\n          return atob(value).length;\n        } catch (e2) {\n          throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n            alphabet: alphabet3,\n            base: 64,\n            value\n          });\n        }\n      },\n      write(value, bytes, offset) {\n        try {\n          const bytesToAdd = atob(value).split(\"\").map((c) => c.charCodeAt(0));\n          bytes.set(bytesToAdd, offset);\n          return bytesToAdd.length + offset;\n        } catch (e2) {\n          throw new SolanaError(SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE, {\n            alphabet: alphabet3,\n            base: 64,\n            value\n          });\n        }\n      }\n    });\n  }\n};\nvar getBase64Decoder = () => {\n  {\n    return createDecoder({\n      read(bytes, offset = 0) {\n        const slice = bytes.slice(offset);\n        const value = btoa(String.fromCharCode(...slice));\n        return [value, bytes.length];\n      }\n    });\n  }\n};\nvar getBase64Codec = () => combineCodec(getBase64Encoder(), getBase64Decoder());\n\n// src/null-characters.ts\nvar removeNullCharacters = (value) => (\n  // eslint-disable-next-line no-control-regex\n  value.replace(/\\u0000/g, \"\")\n);\nvar padNullCharacters = (value, chars) => value.padEnd(chars, \"\\0\");\n\n// ../text-encoding-impl/dist/index.browser.js\nvar e = globalThis.TextDecoder;\nvar o = globalThis.TextEncoder;\n\n// src/utf8.ts\nvar getUtf8Encoder = () => {\n  let textEncoder;\n  return createEncoder({\n    getSizeFromValue: (value) => (textEncoder ||= new o()).encode(value).length,\n    write: (value, bytes, offset) => {\n      const bytesToAdd = (textEncoder ||= new o()).encode(value);\n      bytes.set(bytesToAdd, offset);\n      return offset + bytesToAdd.length;\n    }\n  });\n};\nvar getUtf8Decoder = () => {\n  let textDecoder;\n  return createDecoder({\n    read(bytes, offset) {\n      const value = (textDecoder ||= new e()).decode(bytes.slice(offset));\n      return [removeNullCharacters(value), bytes.length];\n    }\n  });\n};\nvar getUtf8Codec = () => combineCodec(getUtf8Encoder(), getUtf8Decoder());\n\n// src/string.ts\nfunction getStringEncoder(config = {}) {\n  const size = config.size ?? getU32Encoder();\n  const encoding = config.encoding ?? getUtf8Encoder();\n  if (size === \"variable\") {\n    return encoding;\n  }\n  if (typeof size === \"number\") {\n    return fixEncoder(encoding, size);\n  }\n  return createEncoder({\n    getSizeFromValue: (value) => {\n      const contentSize = getEncodedSize(value, encoding);\n      return getEncodedSize(contentSize, size) + contentSize;\n    },\n    write: (value, bytes, offset) => {\n      const contentSize = getEncodedSize(value, encoding);\n      offset = size.write(contentSize, bytes, offset);\n      return encoding.write(value, bytes, offset);\n    }\n  });\n}\nfunction getStringDecoder(config = {}) {\n  const size = config.size ?? getU32Decoder();\n  const encoding = config.encoding ?? getUtf8Decoder();\n  if (size === \"variable\") {\n    return encoding;\n  }\n  if (typeof size === \"number\") {\n    return fixDecoder(encoding, size);\n  }\n  return createDecoder({\n    read: (bytes, offset = 0) => {\n      assertByteArrayIsNotEmptyForCodec(\"string\", bytes, offset);\n      const [lengthBigInt, lengthOffset] = size.read(bytes, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBytes = bytes.slice(offset, offset + length);\n      assertByteArrayHasEnoughBytesForCodec(\"string\", length, contentBytes);\n      const [value, contentOffset] = encoding.read(contentBytes, 0);\n      offset += contentOffset;\n      return [value, offset];\n    }\n  });\n}\nfunction getStringCodec(config = {}) {\n  return combineCodec(getStringEncoder(config), getStringDecoder(config));\n}\n\nexport { assertValidBaseString, getBase10Codec, getBase10Decoder, getBase10Encoder, getBase16Codec, getBase16Decoder, getBase16Encoder, getBase58Codec, getBase58Decoder, getBase58Encoder, getBase64Codec, getBase64Decoder, getBase64Encoder, getBaseXCodec, getBaseXDecoder, getBaseXEncoder, getBaseXResliceCodec, getBaseXResliceDecoder, getBaseXResliceEncoder, getStringCodec, getStringDecoder, getStringEncoder, getUtf8Codec, getUtf8Decoder, getUtf8Encoder, padNullCharacters, removeNullCharacters };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.js.map","import { isFixedSize, assertIsFixedSize, createEncoder, getEncodedSize, createDecoder, combineCodec } from '@solana/codecs-core';\nimport { getU8Encoder, getU8Decoder } from '@solana/codecs-numbers';\n\n// src/option.ts\nvar some = (value) => ({ __option: \"Some\", value });\nvar none = () => ({ __option: \"None\" });\nvar isOption = (input) => !!(input && typeof input === \"object\" && \"__option\" in input && (input.__option === \"Some\" && \"value\" in input || input.__option === \"None\"));\nvar isSome = (option) => option.__option === \"Some\";\nvar isNone = (option) => option.__option === \"None\";\n\n// src/unwrap-option.ts\nfunction unwrapOption(option, fallback) {\n  if (isSome(option))\n    return option.value;\n  return fallback ? fallback() : null;\n}\nvar wrapNullable = (nullable) => nullable !== null ? some(nullable) : none();\n\n// src/option-codec.ts\nfunction getOptionEncoder(item, config = {}) {\n  const prefix = config.prefix ?? getU8Encoder();\n  const fixed = config.fixed ?? false;\n  const isZeroSizeItem = isFixedSize(item) && isFixedSize(prefix) && item.fixedSize === 0;\n  if (fixed || isZeroSizeItem) {\n    assertIsFixedSize(item);\n    assertIsFixedSize(prefix);\n    const fixedSize = prefix.fixedSize + item.fixedSize;\n    return createEncoder({\n      fixedSize,\n      write: (optionOrNullable, bytes, offset) => {\n        const option = isOption(optionOrNullable) ? optionOrNullable : wrapNullable(optionOrNullable);\n        const prefixOffset = prefix.write(Number(isSome(option)), bytes, offset);\n        if (isSome(option)) {\n          item.write(option.value, bytes, prefixOffset);\n        }\n        return offset + fixedSize;\n      }\n    });\n  }\n  return createEncoder({\n    getSizeFromValue: (optionOrNullable) => {\n      const option = isOption(optionOrNullable) ? optionOrNullable : wrapNullable(optionOrNullable);\n      return getEncodedSize(Number(isSome(option)), prefix) + (isSome(option) ? getEncodedSize(option.value, item) : 0);\n    },\n    maxSize: sumCodecSizes([prefix, item].map(getMaxSize)) ?? void 0,\n    write: (optionOrNullable, bytes, offset) => {\n      const option = isOption(optionOrNullable) ? optionOrNullable : wrapNullable(optionOrNullable);\n      offset = prefix.write(Number(isSome(option)), bytes, offset);\n      if (isSome(option)) {\n        offset = item.write(option.value, bytes, offset);\n      }\n      return offset;\n    }\n  });\n}\nfunction getOptionDecoder(item, config = {}) {\n  const prefix = config.prefix ?? getU8Decoder();\n  const fixed = config.fixed ?? false;\n  let fixedSize = null;\n  const isZeroSizeItem = isFixedSize(item) && isFixedSize(prefix) && item.fixedSize === 0;\n  if (fixed || isZeroSizeItem) {\n    assertIsFixedSize(item);\n    assertIsFixedSize(prefix);\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return createDecoder({\n    ...fixedSize === null ? { maxSize: sumCodecSizes([prefix, item].map(getMaxSize)) ?? void 0 } : { fixedSize },\n    read: (bytes, offset) => {\n      if (bytes.length - offset <= 0) {\n        return [none(), offset];\n      }\n      const [isSome2, prefixOffset] = prefix.read(bytes, offset);\n      if (isSome2 === 0) {\n        return [none(), fixedSize !== null ? offset + fixedSize : prefixOffset];\n      }\n      const [value, newOffset] = item.read(bytes, prefixOffset);\n      return [some(value), fixedSize !== null ? offset + fixedSize : newOffset];\n    }\n  });\n}\nfunction getOptionCodec(item, config = {}) {\n  return combineCodec(getOptionEncoder(item, config), getOptionDecoder(item, config));\n}\nfunction sumCodecSizes(sizes) {\n  return sizes.reduce((all, size) => all === null || size === null ? null : all + size, 0);\n}\nfunction getMaxSize(codec) {\n  return isFixedSize(codec) ? codec.fixedSize : codec.maxSize ?? null;\n}\n\n// src/unwrap-option-recursively.ts\nfunction unwrapOptionRecursively(input, fallback) {\n  if (!input || ArrayBuffer.isView(input)) {\n    return input;\n  }\n  const next = (x) => fallback ? unwrapOptionRecursively(x, fallback) : unwrapOptionRecursively(x);\n  if (isOption(input)) {\n    if (isSome(input))\n      return next(input.value);\n    return fallback ? fallback() : null;\n  }\n  if (Array.isArray(input)) {\n    return input.map(next);\n  }\n  if (typeof input === \"object\") {\n    return Object.fromEntries(Object.entries(input).map(([k, v]) => [k, next(v)]));\n  }\n  return input;\n}\n\nexport { getOptionCodec, getOptionDecoder, getOptionEncoder, isNone, isOption, isSome, none, some, unwrapOption, unwrapOptionRecursively, wrapNullable };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.browser.js.map",null,null,null,"import { assertDigestCapabilityIsAvailable } from '@solana/assertions';\nexport async function splDiscriminate(discriminator, length = 8) {\n    assertDigestCapabilityIsAvailable();\n    const bytes = new TextEncoder().encode(discriminator);\n    const digest = await crypto.subtle.digest('SHA-256', bytes);\n    return new Uint8Array(digest).subarray(0, length);\n}\n//# sourceMappingURL=splDiscriminate.js.map",null,null,null,null,"/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/** SHA2-256 hash function */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map",null,null,null],"names":["base64Js","b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","ieee754","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","TOKEN_PROGRAM_ID","PublicKey","TOKEN_2022_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","Layout_1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u32","u24","u16","u8","greedy","Constant","UTF8","Blob","Boolean","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","bits","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","makeDestinationObject","getSpan","replicate","rv","create","assign","fromArray","values","Layout_2","bindConstructorLayout","Class","layout","hasOwnProperty","layout_","boundConstructor_","encode","decode","isCount","elementSpan","rem","UIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearInt64","FloatBE","elementLayout","count","idx","elo","reduce","v","fields","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","word","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","encodeDecode","browser","toBigIntLE_1","toBigIntLE","reversed","reverse","hex","toBigIntBE","toBufferLE_1","toBufferLE","width","padStart","toBufferBE","u64","bigIntLayout","bigInt","bool","boolLayout","publicKey","publicKeyLayout","toBuffer","TokenError","TokenInvalidInstructionProgramError","TokenInvalidInstructionKeysError","TokenInvalidInstructionDataError","TokenInvalidInstructionTypeError","TokenInstruction","amountToUiAmountInstructionData","decodeAmountToUiAmountInstruction","instruction","programId","keys","mint","decodeAmountToUiAmountInstructionUnchecked","AmountToUiAmount","approveInstructionData","decodeApproveInstruction","account","delegate","owner","multiSigners","decodeApproveInstructionUnchecked","Approve","approveCheckedInstructionData","decodeApproveCheckedInstruction","decodeApproveCheckedInstructionUnchecked","ApproveChecked","burnInstructionData","decodeBurnInstruction","decodeBurnInstructionUnchecked","Burn","burnCheckedInstructionData","decodeBurnCheckedInstruction","decodeBurnCheckedInstructionUnchecked","BurnChecked","closeAccountInstructionData","decodeCloseAccountInstruction","destination","authority","decodeCloseAccountInstructionUnchecked","CloseAccount","AccountType","AccountState","CpiGuardInstruction","cpiGuardInstructionData","DefaultAccountStateInstruction","defaultAccountStateInstructionData","SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED","SOLANA_ERROR__INVALID_NONCE","SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND","SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH","SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE","SOLANA_ERROR__MALFORMED_BIGINT_STRING","SOLANA_ERROR__MALFORMED_NUMBER_STRING","SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE","SOLANA_ERROR__JSON_RPC__PARSE_ERROR","SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR","SOLANA_ERROR__JSON_RPC__INVALID_PARAMS","SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND","SOLANA_ERROR__JSON_RPC__INVALID_REQUEST","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","SOLANA_ERROR__JSON_RPC__SCAN_ERROR","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP","SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH","SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS","SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY","SOLANA_ERROR__ADDRESSES__MALFORMED_PDA","SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE","SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED","SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED","SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE","SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED","SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER","SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND","SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND","SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT","SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT","SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED","SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT","SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY","SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED","SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH","SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH","SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH","SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE","SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA","SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH","SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN","SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL","SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED","SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT","SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION","SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC","SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID","SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT","SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC","SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE","SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY","SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER","SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR","SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED","SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS","SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS","SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER","SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS","SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING","SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE","SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME","SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME","SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING","SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING","SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING","SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING","SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE","SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION","SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES","SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH","SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED","SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP","SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX","SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION","SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE","SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS","SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT","SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT","SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED","SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION","SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY","SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH","SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH","SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH","SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH","SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH","SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH","SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS","SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE","SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT","SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT","SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE","SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE","SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH","SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE","SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT","SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE","SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE","SOLANA_ERROR__CODECS__INVALID_CONSTANT","SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE","SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL","SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES","SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS","SOLANA_ERROR__RPC__INTEGER_OVERFLOW","SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN","SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST","SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE","SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING","SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE","encodeValue","map","encodeURIComponent","getPrototypeOf","encodeObjectContextEntry","key","SolanaErrorMessages","SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND$3","SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED$3","SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT$3","SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT$3","SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND$3","SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED$3","SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS$3","SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH$3","SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY$3","SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE$3","SOLANA_ERROR__ADDRESSES__MALFORMED_PDA$3","SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED$3","SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED$3","SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE$3","SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER$3","SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE$3","SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE$3","SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED$3","SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY$3","SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS$2","SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL$2","SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH$3","SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH$3","SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH$3","SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE$3","SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH$3","SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH$3","SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH$3","SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE$2","SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH$3","SOLANA_ERROR__CODECS__INVALID_CONSTANT$2","SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT$2","SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT$2","SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT$2","SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS$3","SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE$3","SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE$2","SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE$3","SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE$3","SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES$2","SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE$2","SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED$2","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED$3","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED$3","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING$3","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED$3","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL$3","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE$3","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT$3","SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW$3","SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR$3","SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS$3","SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH$3","SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED$3","SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM$3","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX$3","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC$3","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT$3","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED$3","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE$3","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED$3","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED$3","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND$3","SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR$3","SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER$3","SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE$3","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY$3","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID$3","SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS$3","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA$3","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER$3","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT$3","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR$3","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA$3","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC$3","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS$3","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED$3","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED$3","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED$3","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED$3","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT$3","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE$3","SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID$3","SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS$3","SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION$3","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE$3","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE$3","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE$3","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED$3","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE$3","SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED$3","SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED$3","SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION$3","SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT$3","SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN$3","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID$3","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR$3","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS$3","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA$3","SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH$3","SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH$3","SOLANA_ERROR__INVALID_NONCE$3","SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING$3","SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE$3","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE$2","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING$2","SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR$3","SOLANA_ERROR__JSON_RPC__INVALID_PARAMS$3","SOLANA_ERROR__JSON_RPC__INVALID_REQUEST$3","SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND$3","SOLANA_ERROR__JSON_RPC__PARSE_ERROR$3","SOLANA_ERROR__JSON_RPC__SCAN_ERROR$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE$3","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION$3","SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH$3","SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH$3","SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH$3","SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY$2","SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE$3","SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE$3","SOLANA_ERROR__MALFORMED_BIGINT_STRING$3","SOLANA_ERROR__MALFORMED_NUMBER_STRING$3","SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND$3","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST$2","SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID$3","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED$2","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED$2","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT$2","SOLANA_ERROR__RPC__INTEGER_OVERFLOW$3","SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR$3","SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN$3","SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS$3","SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER$3","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER$3","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER$3","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER$3","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER$3","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER$3","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER$3","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER$3","SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS$3","SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING$3","SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED$2","SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY$2","SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED$3","SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT$3","SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED$3","SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED$3","SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED$3","SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED$3","SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED$3","SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE$3","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING$3","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE$3","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE$3","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND$3","SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND$3","SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED$3","SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND$3","SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP$3","SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE$3","SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION$3","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE$3","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT$3","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT$3","SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED$3","SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE$3","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND$3","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED$3","SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED$3","SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE$3","SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE$3","SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS$3","SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION$3","SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN$3","SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION$3","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT$3","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT$3","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT$3","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT$3","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT$3","SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION$2","SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING$3","SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES$2","SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME$3","SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME$3","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING$3","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE$3","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING$3","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND$3","SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT$2","SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING$3","SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING$3","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE$3","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING$3","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES$3","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE$3","SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH$2","SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING$3","SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE$3","START_INDEX","TYPE","getErrorMessage","context","process","env","NODE_ENV","messageFormatString","state","commitStateUpTo","endIndex","variableName","fragments","forEach","char","ii","START_INDEX$2","TYPE$2","nextState","match","getHumanReadableErrorMessage","decodingAdviceMessage","searchParamsString","entries","btoa","encodeContextObject","SolanaError","cause","contextAndErrorOptions","errorOptions","contextRest","__code","fixBytes","paddedBytes","padBytes","getEncodedSize","encoder","fixedSize","getSizeFromValue","createEncoder","freeze","createDecoder","decoder","isFixedSize","codec","combineCodec","decoderFixedSize","encoderFixedSize","maxSize","decoderMaxSize","encoderMaxSize","assertByteArrayHasEnoughBytesForCodec","codecDescription","expected","bytesLength","fixCodecSize","fixedBytes","variableByteArray","fixedByteArray","fixEncoderSize","fixDecoderSize","isLittleEndian","config","endian","numberEncoderFactory","assertNumberIsBetweenForCodec","arrayBuffer","DataView","numberDecoderFactory","assertByteArrayIsNotEmptyForCodec","view","bytesOffset","toArrayBuffer","getU64Codec","le","setBigUint64","getU64Encoder","getBigUint64","getU64Decoder","sumCodecSizes","sizes","all","getFixedSize","getMaxSize","getBytesCodec","getStructCodec","fieldCodecs","one","getStructEncoder","newOffset","getStructDecoder","MemoTransferInstruction","memoTransferInstructionData","NonTransferableLayout","COptionPublicKeyLayout","TransferFeeInstruction","initializeTransferFeeConfigInstructionData","decodeInitializeTransferFeeConfigInstruction","transferFeeInstruction","transferFeeConfigAuthority","withdrawWithheldAuthority","transferFeeBasisPoints","maximumFee","decodeInitializeTransferFeeConfigInstructionUnchecked","TransferFeeExtension","InitializeTransferFeeConfig","transferCheckedWithFeeInstructionData","decodeTransferCheckedWithFeeInstruction","source","signers","amount","decimals","fee","decodeTransferCheckedWithFeeInstructionUnchecked","TransferCheckedWithFee","withdrawWithheldTokensFromMintInstructionData","decodeWithdrawWithheldTokensFromMintInstruction","decodeWithdrawWithheldTokensFromMintInstructionUnchecked","WithdrawWithheldTokensFromMint","withdrawWithheldTokensFromAccountsInstructionData","decodeWithdrawWithheldTokensFromAccountsInstruction","sources","numTokenAccounts","decodeWithdrawWithheldTokensFromAccountsInstructionUnchecked","WithdrawWithheldTokensFromAccounts","harvestWithheldTokensToMintInstructionData","decodeHarvestWithheldTokensToMintInstruction","decodeHarvestWithheldTokensToMintInstructionUnchecked","HarvestWithheldTokensToMint","setTransferFeeInstructionData","decodeSetTransferFeeInstruction","decodeSetTransferFeeInstructionUnchecked","SetTransferFee","transferFeeLayout","transferCheckedInstructionData","decodeTransferCheckedInstruction","decodeTransferCheckedInstructionUnchecked","TransferChecked","ExtraAccountMetaLayout","ExtraAccountMetaListLayout","TransferHookInstruction","initializeTransferHookInstructionData","updateTransferHookInstructionData","ExtensionType","initializeAccountInstructionData","decodeInitializeAccountInstruction","rent","decodeInitializeAccountInstructionUnchecked","InitializeAccount","initializeMint2InstructionData","decodeInitializeMint2Instruction","mintAuthority","freezeAuthority","decodeInitializeMint2InstructionUnchecked","InitializeMint2","initializeMultisigInstructionData","decodeInitializeMultisigInstruction","decodeInitializeMultisigInstructionUnchecked","InitializeMultisig","syncNativeInstructionData","decodeSyncNativeInstruction","decodeSyncNativeInstructionUnchecked","SyncNative","freezeAccountInstructionData","decodeFreezeAccountInstruction","decodeFreezeAccountInstructionUnchecked","FreezeAccount","mintToInstructionData","decodeMintToInstruction","decodeMintToInstructionUnchecked","MintTo","mintToCheckedInstructionData","decodeMintToCheckedInstruction","decodeMintToCheckedInstructionUnchecked","MintToChecked","revokeInstructionData","decodeRevokeInstruction","decodeRevokeInstructionUnchecked","Revoke","AuthorityType","setAuthorityInstructionData","decodeSetAuthorityInstruction","currentAuthority","authorityType","newAuthority","decodeSetAuthorityInstructionUnchecked","SetAuthority","thawAccountInstructionData","decodeThawAccountInstruction","decodeThawAccountInstructionUnchecked","ThawAccount","transferInstructionData","decodeTransferInstruction","decodeTransferInstructionUnchecked","Transfer","decodeUiAmountToAmountInstruction","uiAmountToAmountInstructionData","decodeUiAmountToAmountInstructionUnchecked","UiAmountToAmount","GroupMemberPointerInstruction","initializeGroupMemberPointerData","updateGroupMemberPointerData","GroupPointerInstruction","initializeGroupPointerData","updateGroupPointerData","initializeMintInstructionData","decodeInitializeMintInstructionUnchecked","InterestBearingMintInstruction","MetadataPointerInstruction","initializeMetadataPointerData","updateMetadataPointerData","SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND$2","SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED$2","SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT$2","SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT$2","SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND$2","SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED$2","SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS$2","SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH$2","SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY$2","SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE$2","SOLANA_ERROR__ADDRESSES__MALFORMED_PDA$2","SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED$2","SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED$2","SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE$2","SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER$2","SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE$2","SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE$2","SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED$2","SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY$2","SOLANA_ERROR__CODECS__CANNOT_USE_LEXICAL_VALUES_AS_ENUM_DISCRIMINATORS$1","SOLANA_ERROR__CODECS__ENCODED_BYTES_MUST_NOT_INCLUDE_SENTINEL$1","SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH$2","SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH$2","SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH$2","SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE$2","SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH$2","SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH$2","SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH$2","SOLANA_ERROR__CODECS__EXPECTED_ZERO_VALUE_TO_MATCH_ITEM_FIXED_SIZE$1","SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH$2","SOLANA_ERROR__CODECS__INVALID_CONSTANT$1","SOLANA_ERROR__CODECS__INVALID_DISCRIMINATED_UNION_VARIANT$1","SOLANA_ERROR__CODECS__INVALID_ENUM_VARIANT$1","SOLANA_ERROR__CODECS__INVALID_LITERAL_UNION_VARIANT$1","SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS$2","SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE$2","SOLANA_ERROR__CODECS__LITERAL_UNION_DISCRIMINATOR_OUT_OF_RANGE$1","SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE$2","SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE$2","SOLANA_ERROR__CODECS__SENTINEL_MISSING_IN_DECODED_BYTES$1","SOLANA_ERROR__CODECS__UNION_VARIANT_OUT_OF_RANGE$1","SOLANA_ERROR__CRYPTO__RANDOM_VALUES_FUNCTION_UNIMPLEMENTED$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED$2","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED$2","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING$2","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED$2","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL$2","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE$2","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT$2","SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW$2","SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR$2","SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS$2","SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH$2","SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED$2","SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM$2","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX$2","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC$2","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT$2","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED$2","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE$2","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED$2","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED$2","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND$2","SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR$2","SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER$2","SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE$2","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY$2","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID$2","SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS$2","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA$2","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER$2","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT$2","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR$2","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA$2","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC$2","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS$2","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED$2","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED$2","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED$2","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED$2","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT$2","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE$2","SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID$2","SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS$2","SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION$2","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE$2","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE$2","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE$2","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED$2","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE$2","SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED$2","SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED$2","SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION$2","SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT$2","SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN$2","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID$2","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR$2","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS$2","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA$2","SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH$2","SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH$2","SOLANA_ERROR__INVALID_NONCE$2","SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING$2","SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE$2","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE$1","SOLANA_ERROR__INVARIANT_VIOLATION__WEBSOCKET_MESSAGE_ITERATOR_STATE_MISSING$1","SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR$2","SOLANA_ERROR__JSON_RPC__INVALID_PARAMS$2","SOLANA_ERROR__JSON_RPC__INVALID_REQUEST$2","SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND$2","SOLANA_ERROR__JSON_RPC__PARSE_ERROR$2","SOLANA_ERROR__JSON_RPC__SCAN_ERROR$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE$2","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION$2","SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH$2","SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH$2","SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH$2","SOLANA_ERROR__KEYS__PUBLIC_KEY_MUST_MATCH_PRIVATE_KEY$1","SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE$2","SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE$2","SOLANA_ERROR__MALFORMED_BIGINT_STRING$2","SOLANA_ERROR__MALFORMED_NUMBER_STRING$2","SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND$2","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_REQUEST$1","SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID$2","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CLOSED_BEFORE_MESSAGE_BUFFERED$1","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_CONNECTION_CLOSED$1","SOLANA_ERROR__RPC_SUBSCRIPTIONS__TRANSPORT_FAILED_TO_CONNECT$1","SOLANA_ERROR__RPC__INTEGER_OVERFLOW$2","SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR$2","SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN$2","SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS$2","SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER$2","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER$2","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER$2","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER$2","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER$2","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER$2","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER$2","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER$2","SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS$2","SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING$2","SOLANA_ERROR__SIGNER__WALLET_MULTISIGN_UNIMPLEMENTED$1","SOLANA_ERROR__SUBTLE_CRYPTO__CANNOT_EXPORT_NON_EXTRACTABLE_KEY$1","SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED$2","SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT$2","SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED$2","SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED$2","SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED$2","SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED$2","SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED$2","SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE$2","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING$2","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE$2","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE$2","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND$2","SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND$2","SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED$2","SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND$2","SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP$2","SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE$2","SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION$2","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE$2","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT$2","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT$2","SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED$2","SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE$2","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND$2","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED$2","SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED$2","SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE$2","SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE$2","SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS$2","SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION$2","SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN$2","SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION$2","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT$2","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT$2","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT$2","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT$2","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT$2","SOLANA_ERROR__TRANSACTION__ADDRESSES_CANNOT_SIGN_TRANSACTION$1","SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING$2","SOLANA_ERROR__TRANSACTION__CANNOT_ENCODE_WITH_EMPTY_SIGNATURES$1","SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME$2","SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME$2","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING$2","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE$2","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING$2","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND$2","SOLANA_ERROR__TRANSACTION__FAILED_TO_ESTIMATE_COMPUTE_LIMIT$1","SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING$2","SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING$2","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE$2","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING$2","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES$2","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE$2","SOLANA_ERROR__TRANSACTION__MESSAGE_SIGNATURES_MISMATCH$1","SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING$2","SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE$2","START_INDEX$1","TYPE$1","addCodecSizePrefix","prefix","encoderBytes","prefixMaxSize","encoderSize","addEncoderSizePrefix","bigintSize","decoderOffset","addDecoderSizePrefix","getU32Encoder","setUint32","getU32Decoder","getUint32","assertValidNumberOfItemsForCodec","computeArrayLikeCodecSize","itemSize","Field","items","removeNullCharacters","globalThis","TextDecoder","o","TextEncoder","getUtf8Codec","textEncoder","bytesToAdd","getUtf8Encoder","textDecoder","getUtf8Decoder","getStringCodec","getU32Codec","item","getArrayEncoder","newOffset2","resolvedSize","getArrayDecoder","getArrayCodec","index","getTupleEncoder","newValue","getTupleDecoder","initializeAccount2InstructionData","decodeInitializeAccount2Instruction","decodeInitializeAccount2InstructionUnchecked","InitializeAccount2","initializeAccount3InstructionData","decodeInitializeAccount3Instruction","decodeInitializeAccount3InstructionUnchecked","InitializeAccount3","initializeImmutableOwnerInstructionData","decodeInitializeImmutableOwnerInstruction","decodeInitializeImmutableOwnerInstructionUnchecked","InitializeImmutableOwner","initializeMintCloseAuthorityInstructionData","decodeInitializeMintCloseAuthorityInstruction","closeAuthority","decodeInitializeMintCloseAuthorityInstructionUnchecked","InitializeMintCloseAuthority","initializePermanentDelegateInstructionData","decodeInitializePermanentDelegateInstruction","decodeInitializePermanentDelegateInstructionUnchecked","InitializePermanentDelegate","decodeSystemInstruction","SystemInstruction","decodeInstructionType","args","authorized","decodeNonceAdvance","authorizedPubkey","accounts","isSigner","isWritable","pubkey","decoded","decodeAllocate","accountPubkey","space","BN","decodeAllocateWithSeed","basePubkey","seed","base","decodeAssign","decodeAssignWithSeed","decodeNonceAuthorize","noncePubkey","newAuthorizedPubkey","decodeCreateAccount","fromPubkey","newAccountPubkey","lamports","decodeCreateWithSeed","decodeNonceInitialize","decodeTransfer","toPubkey","decodeTransferWithSeed","decodeNonceWithdraw","SystemProgram","unknown","decodeTokenInstruction","InitializeMint","decodedIx","multisig","meta","authrorityTypeMap","AccountOwner","accountOwner","closeAccount","freezeAccount","MintTokens","mintTokens","InitializeMultisig2","tokenMint","uiAmount","SOLANA_ERROR__MALFORMED_JSON_RPC_ERROR","SOLANA_ERROR__TRANSACTION__FAILED_WHEN_SIMULATING_TO_ESTIMATE_COMPUTE_LIMIT","SOLANA_ERROR__RPC__API_PLAN_MISSING_FOR_RPC_METHOD","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CANNOT_CREATE_SUBSCRIPTION_PLAN","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CLOSED_BEFORE_MESSAGE_BUFFERED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_CONNECTION_CLOSED","SOLANA_ERROR__RPC_SUBSCRIPTIONS__CHANNEL_FAILED_TO_CONNECT","SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_STATE_MISSING","SOLANA_ERROR__INVARIANT_VIOLATION__SUBSCRIPTION_ITERATOR_MUST_NOT_POLL_BEFORE_RESOLVING_EXISTING_MESSAGE_PROMISE","SOLANA_ERROR__INVARIANT_VIOLATION__DATA_PUBLISHER_CHANNEL_UNIMPLEMENTED","SOLANA_ERROR__ACCOUNTS__ACCOUNT_NOT_FOUND$1","SOLANA_ERROR__ACCOUNTS__EXPECTED_ALL_ACCOUNTS_TO_BE_DECODED$1","SOLANA_ERROR__ACCOUNTS__EXPECTED_DECODED_ACCOUNT$1","SOLANA_ERROR__ACCOUNTS__FAILED_TO_DECODE_ACCOUNT$1","SOLANA_ERROR__ACCOUNTS__ONE_OR_MORE_ACCOUNTS_NOT_FOUND$1","SOLANA_ERROR__ADDRESSES__FAILED_TO_FIND_VIABLE_PDA_BUMP_SEED$1","SOLANA_ERROR__ADDRESSES__INVALID_BASE58_ENCODED_ADDRESS$1","SOLANA_ERROR__ADDRESSES__INVALID_BYTE_LENGTH$1","SOLANA_ERROR__ADDRESSES__INVALID_ED25519_PUBLIC_KEY$1","SOLANA_ERROR__ADDRESSES__INVALID_SEEDS_POINT_ON_CURVE$1","SOLANA_ERROR__ADDRESSES__MALFORMED_PDA$1","SOLANA_ERROR__ADDRESSES__MAX_NUMBER_OF_PDA_SEEDS_EXCEEDED$1","SOLANA_ERROR__ADDRESSES__MAX_PDA_SEED_LENGTH_EXCEEDED$1","SOLANA_ERROR__ADDRESSES__PDA_BUMP_SEED_OUT_OF_RANGE$1","SOLANA_ERROR__ADDRESSES__PDA_ENDS_WITH_PDA_MARKER$1","SOLANA_ERROR__ADDRESSES__STRING_LENGTH_OUT_OF_RANGE$1","SOLANA_ERROR__BLOCKHASH_STRING_LENGTH_OUT_OF_RANGE$1","SOLANA_ERROR__BLOCK_HEIGHT_EXCEEDED$1","SOLANA_ERROR__CODECS__CANNOT_DECODE_EMPTY_BYTE_ARRAY$1","SOLANA_ERROR__CODECS__ENCODER_DECODER_FIXED_SIZE_MISMATCH$1","SOLANA_ERROR__CODECS__ENCODER_DECODER_MAX_SIZE_MISMATCH$1","SOLANA_ERROR__CODECS__ENCODER_DECODER_SIZE_COMPATIBILITY_MISMATCH$1","SOLANA_ERROR__CODECS__ENUM_DISCRIMINATOR_OUT_OF_RANGE$1","SOLANA_ERROR__CODECS__EXPECTED_FIXED_LENGTH$1","SOLANA_ERROR__CODECS__EXPECTED_POSITIVE_BYTE_LENGTH$1","SOLANA_ERROR__CODECS__EXPECTED_VARIABLE_LENGTH$1","SOLANA_ERROR__CODECS__INVALID_BYTE_LENGTH$1","SOLANA_ERROR__CODECS__INVALID_NUMBER_OF_ITEMS$1","SOLANA_ERROR__CODECS__INVALID_STRING_FOR_BASE$1","SOLANA_ERROR__CODECS__NUMBER_OUT_OF_RANGE$1","SOLANA_ERROR__CODECS__OFFSET_OUT_OF_RANGE$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_ALREADY_INITIALIZED$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_FAILED$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_BORROW_OUTSTANDING$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_SIZE_CHANGED$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_DATA_TOO_SMALL$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_EXECUTABLE$1","SOLANA_ERROR__INSTRUCTION_ERROR__ACCOUNT_NOT_RENT_EXEMPT$1","SOLANA_ERROR__INSTRUCTION_ERROR__ARITHMETIC_OVERFLOW$1","SOLANA_ERROR__INSTRUCTION_ERROR__BORSH_IO_ERROR$1","SOLANA_ERROR__INSTRUCTION_ERROR__BUILTIN_PROGRAMS_MUST_CONSUME_COMPUTE_UNITS$1","SOLANA_ERROR__INSTRUCTION_ERROR__CALL_DEPTH$1","SOLANA_ERROR__INSTRUCTION_ERROR__COMPUTATIONAL_BUDGET_EXCEEDED$1","SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM$1","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_INDEX$1","SOLANA_ERROR__INSTRUCTION_ERROR__DUPLICATE_ACCOUNT_OUT_OF_SYNC$1","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_ACCOUNT_NOT_RENT_EXEMPT$1","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_DATA_MODIFIED$1","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_LAMPORT_CHANGE$1","SOLANA_ERROR__INSTRUCTION_ERROR__EXECUTABLE_MODIFIED$1","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_DATA_MODIFIED$1","SOLANA_ERROR__INSTRUCTION_ERROR__EXTERNAL_ACCOUNT_LAMPORT_SPEND$1","SOLANA_ERROR__INSTRUCTION_ERROR__GENERIC_ERROR$1","SOLANA_ERROR__INSTRUCTION_ERROR__ILLEGAL_OWNER$1","SOLANA_ERROR__INSTRUCTION_ERROR__IMMUTABLE$1","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_AUTHORITY$1","SOLANA_ERROR__INSTRUCTION_ERROR__INCORRECT_PROGRAM_ID$1","SOLANA_ERROR__INSTRUCTION_ERROR__INSUFFICIENT_FUNDS$1","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_DATA$1","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ACCOUNT_OWNER$1","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ARGUMENT$1","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_ERROR$1","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_INSTRUCTION_DATA$1","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_REALLOC$1","SOLANA_ERROR__INSTRUCTION_ERROR__INVALID_SEEDS$1","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_DATA_ALLOCATIONS_EXCEEDED$1","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_ACCOUNTS_EXCEEDED$1","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_INSTRUCTION_TRACE_LENGTH_EXCEEDED$1","SOLANA_ERROR__INSTRUCTION_ERROR__MAX_SEED_LENGTH_EXCEEDED$1","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_ACCOUNT$1","SOLANA_ERROR__INSTRUCTION_ERROR__MISSING_REQUIRED_SIGNATURE$1","SOLANA_ERROR__INSTRUCTION_ERROR__MODIFIED_PROGRAM_ID$1","SOLANA_ERROR__INSTRUCTION_ERROR__NOT_ENOUGH_ACCOUNT_KEYS$1","SOLANA_ERROR__INSTRUCTION_ERROR__PRIVILEGE_ESCALATION$1","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_ENVIRONMENT_SETUP_FAILURE$1","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPILE$1","SOLANA_ERROR__INSTRUCTION_ERROR__PROGRAM_FAILED_TO_COMPLETE$1","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_DATA_MODIFIED$1","SOLANA_ERROR__INSTRUCTION_ERROR__READONLY_LAMPORT_CHANGE$1","SOLANA_ERROR__INSTRUCTION_ERROR__REENTRANCY_NOT_ALLOWED$1","SOLANA_ERROR__INSTRUCTION_ERROR__RENT_EPOCH_MODIFIED$1","SOLANA_ERROR__INSTRUCTION_ERROR__UNBALANCED_INSTRUCTION$1","SOLANA_ERROR__INSTRUCTION_ERROR__UNINITIALIZED_ACCOUNT$1","SOLANA_ERROR__INSTRUCTION_ERROR__UNKNOWN$1","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_PROGRAM_ID$1","SOLANA_ERROR__INSTRUCTION_ERROR__UNSUPPORTED_SYSVAR$1","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_ACCOUNTS$1","SOLANA_ERROR__INSTRUCTION__EXPECTED_TO_HAVE_DATA$1","SOLANA_ERROR__INSTRUCTION__PROGRAM_ID_MISMATCH$1","SOLANA_ERROR__INVALID_BLOCKHASH_BYTE_LENGTH$1","SOLANA_ERROR__INVALID_NONCE$1","SOLANA_ERROR__INVARIANT_VIOLATION__CACHED_ABORTABLE_ITERABLE_CACHE_ENTRY_MISSING$1","SOLANA_ERROR__INVARIANT_VIOLATION__SWITCH_MUST_BE_EXHAUSTIVE$1","SOLANA_ERROR__JSON_RPC__INTERNAL_ERROR$1","SOLANA_ERROR__JSON_RPC__INVALID_PARAMS$1","SOLANA_ERROR__JSON_RPC__INVALID_REQUEST$1","SOLANA_ERROR__JSON_RPC__METHOD_NOT_FOUND$1","SOLANA_ERROR__JSON_RPC__PARSE_ERROR$1","SOLANA_ERROR__JSON_RPC__SCAN_ERROR$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_CLEANED_UP$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_NOT_AVAILABLE$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NODE_UNHEALTHY$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_NO_SNAPSHOT$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_SLOT_SKIPPED$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE$1","SOLANA_ERROR__JSON_RPC__SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION$1","SOLANA_ERROR__KEYS__INVALID_KEY_PAIR_BYTE_LENGTH$1","SOLANA_ERROR__KEYS__INVALID_PRIVATE_KEY_BYTE_LENGTH$1","SOLANA_ERROR__KEYS__INVALID_SIGNATURE_BYTE_LENGTH$1","SOLANA_ERROR__KEYS__SIGNATURE_STRING_LENGTH_OUT_OF_RANGE$1","SOLANA_ERROR__LAMPORTS_OUT_OF_RANGE$1","SOLANA_ERROR__MALFORMED_BIGINT_STRING$1","SOLANA_ERROR__MALFORMED_NUMBER_STRING$1","SOLANA_ERROR__NONCE_ACCOUNT_NOT_FOUND$1","SOLANA_ERROR__RPC_SUBSCRIPTIONS__EXPECTED_SERVER_SUBSCRIPTION_ID$1","SOLANA_ERROR__RPC__INTEGER_OVERFLOW$1","SOLANA_ERROR__RPC__TRANSPORT_HTTP_ERROR$1","SOLANA_ERROR__RPC__TRANSPORT_HTTP_HEADER_FORBIDDEN$1","SOLANA_ERROR__SIGNER__ADDRESS_CANNOT_HAVE_MULTIPLE_SIGNERS$1","SOLANA_ERROR__SIGNER__EXPECTED_KEY_PAIR_SIGNER$1","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_MODIFYING_SIGNER$1","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_PARTIAL_SIGNER$1","SOLANA_ERROR__SIGNER__EXPECTED_MESSAGE_SIGNER$1","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_MODIFYING_SIGNER$1","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_PARTIAL_SIGNER$1","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SENDING_SIGNER$1","SOLANA_ERROR__SIGNER__EXPECTED_TRANSACTION_SIGNER$1","SOLANA_ERROR__SIGNER__TRANSACTION_CANNOT_HAVE_MULTIPLE_SENDING_SIGNERS$1","SOLANA_ERROR__SIGNER__TRANSACTION_SENDING_SIGNER_MISSING$1","SOLANA_ERROR__SUBTLE_CRYPTO__DIGEST_UNIMPLEMENTED$1","SOLANA_ERROR__SUBTLE_CRYPTO__DISALLOWED_IN_INSECURE_CONTEXT$1","SOLANA_ERROR__SUBTLE_CRYPTO__ED25519_ALGORITHM_UNIMPLEMENTED$1","SOLANA_ERROR__SUBTLE_CRYPTO__EXPORT_FUNCTION_UNIMPLEMENTED$1","SOLANA_ERROR__SUBTLE_CRYPTO__GENERATE_FUNCTION_UNIMPLEMENTED$1","SOLANA_ERROR__SUBTLE_CRYPTO__SIGN_FUNCTION_UNIMPLEMENTED$1","SOLANA_ERROR__SUBTLE_CRYPTO__VERIFY_FUNCTION_UNIMPLEMENTED$1","SOLANA_ERROR__TIMESTAMP_OUT_OF_RANGE$1","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_BORROW_OUTSTANDING$1","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_IN_USE$1","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_LOADED_TWICE$1","SOLANA_ERROR__TRANSACTION_ERROR__ACCOUNT_NOT_FOUND$1","SOLANA_ERROR__TRANSACTION_ERROR__ADDRESS_LOOKUP_TABLE_NOT_FOUND$1","SOLANA_ERROR__TRANSACTION_ERROR__ALREADY_PROCESSED$1","SOLANA_ERROR__TRANSACTION_ERROR__BLOCKHASH_NOT_FOUND$1","SOLANA_ERROR__TRANSACTION_ERROR__CALL_CHAIN_TOO_DEEP$1","SOLANA_ERROR__TRANSACTION_ERROR__CLUSTER_MAINTENANCE$1","SOLANA_ERROR__TRANSACTION_ERROR__DUPLICATE_INSTRUCTION$1","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_FEE$1","SOLANA_ERROR__TRANSACTION_ERROR__INSUFFICIENT_FUNDS_FOR_RENT$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_FOR_FEE$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ACCOUNT_INDEX$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_DATA$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_INDEX$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_ADDRESS_LOOKUP_TABLE_OWNER$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_LOADED_ACCOUNTS_DATA_SIZE_LIMIT$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_PROGRAM_FOR_EXECUTION$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_RENT_PAYING_ACCOUNT$1","SOLANA_ERROR__TRANSACTION_ERROR__INVALID_WRITABLE_ACCOUNT$1","SOLANA_ERROR__TRANSACTION_ERROR__MAX_LOADED_ACCOUNTS_DATA_SIZE_EXCEEDED$1","SOLANA_ERROR__TRANSACTION_ERROR__MISSING_SIGNATURE_FOR_FEE$1","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_ACCOUNT_NOT_FOUND$1","SOLANA_ERROR__TRANSACTION_ERROR__PROGRAM_EXECUTION_TEMPORARILY_RESTRICTED$1","SOLANA_ERROR__TRANSACTION_ERROR__RESANITIZATION_NEEDED$1","SOLANA_ERROR__TRANSACTION_ERROR__SANITIZE_FAILURE$1","SOLANA_ERROR__TRANSACTION_ERROR__SIGNATURE_FAILURE$1","SOLANA_ERROR__TRANSACTION_ERROR__TOO_MANY_ACCOUNT_LOCKS$1","SOLANA_ERROR__TRANSACTION_ERROR__UNBALANCED_TRANSACTION$1","SOLANA_ERROR__TRANSACTION_ERROR__UNKNOWN$1","SOLANA_ERROR__TRANSACTION_ERROR__UNSUPPORTED_VERSION$1","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_BLOCK_LIMIT$1","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_ACCOUNT_DATA_TOTAL_LIMIT$1","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_ACCOUNT_COST_LIMIT$1","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_BLOCK_COST_LIMIT$1","SOLANA_ERROR__TRANSACTION_ERROR__WOULD_EXCEED_MAX_VOTE_COST_LIMIT$1","SOLANA_ERROR__TRANSACTION__ADDRESS_MISSING$1","SOLANA_ERROR__TRANSACTION__EXPECTED_BLOCKHASH_LIFETIME$1","SOLANA_ERROR__TRANSACTION__EXPECTED_NONCE_LIFETIME$1","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_CONTENTS_MISSING$1","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_ADDRESS_LOOKUP_TABLE_INDEX_OUT_OF_RANGE$1","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_FEE_PAYER_MISSING$1","SOLANA_ERROR__TRANSACTION__FAILED_TO_DECOMPILE_INSTRUCTION_PROGRAM_ADDRESS_NOT_FOUND$1","SOLANA_ERROR__TRANSACTION__FEE_PAYER_MISSING$1","SOLANA_ERROR__TRANSACTION__FEE_PAYER_SIGNATURE_MISSING$1","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_FIRST_INSTRUCTION_MUST_BE_ADVANCE_NONCE$1","SOLANA_ERROR__TRANSACTION__INVALID_NONCE_TRANSACTION_INSTRUCTIONS_MISSING$1","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_CANNOT_PAY_FEES$1","SOLANA_ERROR__TRANSACTION__INVOKED_PROGRAMS_MUST_NOT_BE_WRITABLE$1","SOLANA_ERROR__TRANSACTION__SIGNATURES_MISSING$1","SOLANA_ERROR__TRANSACTION__VERSION_NUMBER_OUT_OF_RANGE$1","assertDigestCapabilityIsAvailable","isSecureContext","assertIsSecureContext","crypto","subtle","digest","__DEV__","SOLANA_ERROR__CODECS__INVALID_DATA_ENUM_VARIANT","SOLANA_ERROR__CODECS__INVALID_SCALAR_ENUM_VARIANT","element","substring","assertIsFixedSize","fixEncoder","fixDecoder","getU8Encoder","setUint8","getU8Decoder","getUint8","getU8Codec","getBooleanEncoder","unmap","getBooleanDecoder","byteEncoder","getBytesEncoder","byteDecoder","lengthBigInt","lengthOffset","contentBytes","getBytesDecoder","getDataEnumFixedSize","variants","variantSize","every","getDataEnumMaxSize","maxVariantSize","getVariantDiscriminator","findIndex","__kind","getTupleCodec","getUnitCodec","_value","_bytes","getStringEncoder","contentSize","getStringDecoder","some","__option","isOption","isSome","option","wrapNullable","nullable","getOptionCodec","fixed","isZeroSizeItem","optionOrNullable","prefixOffset","getOptionEncoder","isSome2","getOptionDecoder","metadataLayout","updateMetadataLayout","variantEncoder","getDataEnumEncoder","dOffset","variantField","maxRange","minRange","vOffset","getDataEnumDecoder","getDataEnumCodec","removeKeyLayout","getBooleanCodec","updateAuthorityLayout","emitLayout","getAccountDataSizeLayout","decodeToken2022Instruction","CloseMint","ConfidentialTransferFeeConfig","ConfidentialTransferMint","GroupMemberPointer","GroupPointer","InterestRate","MetadataPointer","PermanentDelegate","TransferFeeConfig","TransferHookProgramId","WithheldWithdraw","GetAccountDataSize","types","extensions","extensionTypes","CreateNativeMint","DefaultAccountStateExtension","Initialize","instructionData","accountState","Update","MemoTransferExtension","memoTransferInstruction","InitializeNonTransferableMint","CpiGuardExtension","cpiGuardInstruction","TransferHookExtension","transferHookProgramId","MetadataPointerExtension","metadataAddress","GroupPointerExtension","groupAddress","GroupMemberPointerExtension","memberAddress","splDiscriminateInit","splDiscriminateUpdating","splDiscriminateRemove","splDiscriminateUpdate","splDiscriminateEmitter","async","splDiscriminate","metadata","symbol","uri","field","idempotent","decodeAssociatedTokenInstruction","decodeComputeBudgetInstruction","ComputeBudgetInstruction","decodeRequestHeapFrame","decodeRequestUnits","additionalFee","decodeSetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","hexToBuffer","rawHex","startsWith","parseTransactionAccounts","loadedAddresses","version","accountKeys","staticAccountKeys","readonlySignedAccountsCount","header","numReadonlySignedAccounts","readonlyUnsignedAccountsCount","numReadonlyUnsignedAccounts","requiredSignaturesAccountsCount","numRequiredSignatures","totalAccounts","parsedAccounts","ALTWritable","ALTReadOnly","readonly","compiledInstructionToInstruction","compiledInstruction","ci","TransactionInstruction","utils","bs58","programIdIndex","accountIdx","accountKeyIndexes","accountIndex","parsedAccountsToMeta","accountMeta","pk","encoded","find","parsedInstructionToInstruction","parsedInstruction","flattenTransactionResponse","transaction","result","txInstructions","compiledInstructions","accountsMeta","_a","orderedCII","_b","innerInstructions","sort","totalCalls","_c","accumulator","cii","instructions","lastPushedIx","callIndex","CII","CIIEntry","parentProgramId","flattenParsedTransaction","programEnter","invokedProgram","invokeLevel","immediate","currentDepth","id","callStack","callIds","depth","instructionIndex","currentInstruction","logMessages","dataLogs","rawLogs","programExit","exitedProgram","lastProgram","pop","lastCallIndex","parseLogs","logs","parserRe","regexTemplate","l","replaceAll","RegExp","generateLogsParsingRegex","programLogs","getCurrentCallId","exec","groups","programInvoke","newProgramContext","invokeProgramId","level","programSuccessResult","successResultProgramId","programFailedResult","failedResultProgramId","programCompleteFailedResult","currentCall","failedCompleteError","logTruncated","invokeResult","programLog","logMessage","programData","programConsumed","unitsConsumed","consumedComputeUnits","programReturn","returnProgram","returnProgramId","returnMessage","errorMessage","decodeStakeInstruction","StakeInstruction","decodeInitialize","lockup","decodeAuthorize","newAuthorized","stakeAuthorizationType","decodeAuthorizeWithSeed","decodeDeactivate","stakePubkey","decodeDelegate","decodeMerge","decodeSplit","decodeWithdraw","abytes","lengths","aexists","instance","checkFinished","destroyed","finished","createView","rotr","toBytes","module","assert","inherits","ctor","superCtor","super_","TempCtor","number","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","parseHexByte","lowerBound","r","parseBase","move","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","w","off","_strip","limbLen","limbPow","total","mod","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","smallMulTo","self","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","toArrayLike","ArrayType","reqLength","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","zeroBits","toTwos","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","p","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","outLen","prev","next","mod3","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","Hash","_cloneInto","wrapConstructor","hashCons","hashC","update","outputLen","blockLen","Maj","HashMD","padOffset","take","dataView","roundClean","digestInto","aoutput","_32n","_u32_max","wh","wl","oview","destroy","to","SHA256_K","Uint32Array","SHA256_IV","SHA256_W","SHA256","F","G","H","W15","W2","s0","s1","T1","T2","sha256","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","options","pascalCase","preserveConsecutiveUppercase","locale","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","test","isLastCharLower","isLastCharUpper","isLastLastCharUpper","isLastLastCharPreserved","character","preserveCamelCase","lastIndex","charAt","pattern","_","identifier","postProcess","snakeCase","getDisc","hash","convertInstruction","convertInstructionAccount","convertField","returns","convertType","convertAccount","convertTypeDef","typeDef","convertTypeDefTy","kind","convertEnumVariant","alias","convertEnumFields","convertEvent","event","convertErrorCode","convertConst","docs","optional","isOptional","pda","convertSeed","seeds","relations","signer","isMut","path","convertEventToTypeDef","vec","defined","generics","definedWithTypeArgs","convertDefinedTypeArg","JSON","stringify","generic","convertLegacyIdlToV30","idl","programAddress","spec","formattedIdl","legacyIdl","address","constants","events","convertLegacyIdl","COMPUTE_BUDGET_PROGRAM_ID","flattenIdlAccounts","accName","newPrefix","flat","SolanaParser","programInfos","parsers","instructionDecoders","Map","instructionParsers","standardParsers","toBase58","StakeProgram","programInfo","addParserFromIdl","parserInfo","has","parser","addParser","convertedIdl","BorshInstructionCoder","buildIdlParser","isParserAvailble","retrieveParserReadyProgramIds","parsedIx","ix","instr","buildUnknownParsedInstruction","flatIdlAccounts","removeParser","delete","argData","parseInstruction","parseTransactionWithInnerInstructions","tx","parseTransactionData","txMessage","altLoadedAddresses","parseTransactionParsedData","txParsedMessage","metaLike","parseParsedTransactionWithInnerInstructions","txn","allInstructions","parsedIns","convertSolanaParsedInstruction","pId","info","parseTransaction","connection","txId","flatten","commitment","getTransaction","maxSupportedTransactionVersion","parseTransactionDump","txDump","Transaction","compileMessage"],"mappings":"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"}